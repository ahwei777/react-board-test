{"version":3,"sources":["components/Board/App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MesssageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","apiMessageError","setMessageApiError","textareaValue","setTextareaValue","postMessageError","setPostMessageError","isLoadingPostMessage","setLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","rows","value","onChange","target","onFocus","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"uxDAIA,IAGMA,EAAOC,IAAOC,IAAV,KAKJC,EAAQF,IAAOG,GAAV,KAILC,EAAcJ,IAAOK,KAAV,KAIXC,EAAmBN,IAAOO,SAAV,KAIhBC,EAAeR,IAAOS,OAAV,KAGZC,EAAcV,IAAOC,IAAV,KAGXU,EAAmBX,IAAOC,IAAV,KAQhBW,EAAcZ,IAAOC,IAAV,KAMXY,EAAgBb,IAAOC,IAAV,KAIba,EAAcd,IAAOC,IAAV,KACXc,EAAcf,IAAOC,IAAV,KAIXe,EAAehB,IAAOC,IAAV,KAIZgB,EAAUjB,IAAOC,IAAV,KAcb,SAASiB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBM,IAChB,cAACL,EAAD,UAAcM,OAEhB,cAACL,EAAD,UAAcM,OA2HLC,MAhHf,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,OAEiCF,mBAAS,MAF1C,mBAENG,EAFM,KAEWC,EAFX,OAG6BJ,qBAH7B,mBAGNK,EAHM,KAGSC,EAHT,OAImCN,mBAAS,MAJ5C,mBAINO,EAJM,KAIYC,EAJZ,OAMyCR,oBAAS,GANlD,mBAMNS,EANM,KAMgBC,EANhB,KAQPC,EAAgB,WACpB,OACEC,MA9FJ,2EAgGOC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNd,EAAmBc,EAAIC,aAuD/B,OAHAC,qBAAU,WACRT,MACC,IAED,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,yBACzB,cAACf,EAAD,iCACA,eAACE,EAAD,CAAawC,SA9CQ,SAACC,GAExBA,EAAEC,iBAEEd,IAIJC,GAAsB,GACtBE,MAAM,8CAA+C,CACnDY,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,QACVH,KAAMrB,MAGPQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAELN,GAAsB,GAEN,IAAZM,EAAKc,IAKTxB,EAAiB,IACjBK,KALEH,EAAoBQ,EAAKG,YAQ5BF,OAAM,SAACC,GACNR,GAAsB,GACtBF,EAAoBU,EAAIC,cAW1B,UACE,cAACpC,EAAD,CACEgD,KAAM,GACNC,MAAO3B,EACP4B,SA1DqB,SAACX,GAC5BhB,EAAiBgB,EAAEY,OAAOF,QA0DpBG,QAvDoB,WAC1B3B,EAAoB,SAwDhB,cAACvB,EAAD,uCACCsB,GACC,eAACd,EAAD,oDACWc,QAIdJ,GACC,eAACV,EAAD,oCACyBU,EAAgBiC,cAG1CnC,GAAgC,IAApBA,EAASoC,QAAgB,kDACtC,cAAClD,EAAD,UACGc,GACCA,EAASqC,KAAI,SAACnB,GAAD,OACX,cAACxB,EAAD,CAEEC,OAAQuB,EAAQU,SAChBhC,KAAM,IAAI0C,KAAKpB,EAAQqB,WAAWC,iBAHpC,SAKGtB,EAAQO,MAJJP,EAAQuB,aC3K3BC,IAASC,OACP,cAAC,IAAD,CAAeC,MAXH,CACZC,OAAQ,CACNC,YAAa,UACbC,YAAa,UACbC,YAAY,YAOd,SACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.ba06bacb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MesssageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  & + & {\n    margin-top: 16px;\n  }\n`;\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 6px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78 , 55, 0.3)\n  font-size: 14px;\n`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  font-size: 16px;\n  margin-top: 16px;\n`;\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  aligin-items: center;\n  justify-content: center;\n`\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [apiMessageError, setMessageApiError] = useState(null);\n  const [textareaValue, setTextareaValue] = useState();\n  const [postMessageError, setPostMessageError] = useState(null);\n  // 避免多次送出留言，設定間隔\n  const [isLoadingPostMessage, setLoadingPostMessage] = useState(false)\n\n  const fetchMessages = () => {\n    return (\n      fetch(API_ENDPOINT)\n        // 轉為 json 格式\n        .then((res) => res.json())\n        .then((data) => {\n          setMessages(data);\n        })\n        .catch((err) => {\n          setMessageApiError(err.message);\n        })\n    );\n  };\n\n  const handleTextareaChange = (e) => {\n    setTextareaValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null)\n  }\n\n  const handleFormSubmit = (e) => {\n    // 先阻止表單發送行為\n    e.preventDefault();\n    // 如果還在送出的冷卻時間內就取消\n    if (isLoadingPostMessage) {\n      return\n    }\n    // 正要發送，進入冷卻\n    setLoadingPostMessage(true)\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"hello\",\n        body: textareaValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // 收到回傳結果，重置送出留言的冷卻\n        setLoadingPostMessage(false)\n        // 針對後端回覆錯誤處理\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        // 成功新增留言，清空輸入框\n        setTextareaValue('')\n        fetchMessages();\n      })\n      // 捕捉 fetch 失敗的錯誤\n      .catch((err) => {\n        setLoadingPostMessage(false)\n        setPostMessageError(err.message);\n      });\n  };\n  // 在 render 結束後 call API，並且第二個參數傳空值表示只在此 component mount 時執行\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MesssageTextArea\n          rows={10}\n          value={textareaValue}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>\n            新增留言失敗: {postMessageError}\n          </ErrorMessage>\n        )}\n      </MessageForm>\n      {apiMessageError && (\n        <ErrorMessage>\n          Something went wrong: {apiMessageError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Message yet!</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/Board/App';\n\n// 引入主題(可設定類似 mixin 的全域變數供使用\nimport { ThemeProvider } from 'styled-components';\n\n// 設定常用/指定屬性\nconst theme = {\n  colors: {\n    primary_300: '#ff7979',\n    primary_400: '#e33e3e',\n    primary_500: `#af0505`,\n  }\n}\n\n// <React.StrictMode> 嚴格模式可能會造成偵錯問題，可先取消\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}