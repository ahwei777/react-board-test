{"version":3,"sources":["components/Board/App.js","components/Todos/TodoItem.js","components/Todos/App.js","components/Gobang/setting.js","components/Gobang/Board.js","components/Gobang/HistoryBar.js","components/Gobang/utils.js","components/Gobang/useGobang.js","components/Gobang/App.js","components/Blog/context.js","components/Blog/utils.js","constants/breakpoint.js","components/Blog/Header/Header.js","components/Blog/WebAPI.js","components/Blog/Pages/HomePage/HomePage.js","components/Blog/Pages/LoginPage/LoginPage.js","components/Blog/Pages/RegisterPage/RegisterPage.js","components/Blog/Pages/SinglePost/SinglePost.js","components/Blog/Pages/AddPost/AddPost.js","components/Blog/Pages/AboutPage/AboutPage.js","components/Blog/Pages/PaginationPage/PaginationPage.js","components/Blog/App.js","index.js"],"names":["styled","div","h1","form","textarea","button","App","props","$isDone","input","TodosApp","size","initialBoard","Array","fill","stoneRows","from","length","stoneColumns","squareRows","squareColumns","Stone","handleClickPlacing","X","Y","stone","color","className","onClick","style","background","boxShadow","MemoSquaresBackgroundWrapper","memo","map","el","index_X","EL","index_Y","Board","board","HistoryBar","history","setHistory","setBoard","nowStep","PaginationCounters","Pagination","Item","current","Prev","prevBoard","handleClickPrev","item","index","step","handleClickStep","active","countTotal","currentX","currentY","directionX","directionY","now","tempX","tempY","total","console","log","useGobang","useState","isGameOver","setIsGameOver","blackIsNext","setBlackIsNext","useRef","lastStone","useLayoutEffect","result","calculateWinner","newBoard","JSON","parse","stringify","newHistory","slice","push","GobangApp","AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","MEDIA_QUERY_MOBILE_M","MEDIA_QUERY_MOBILE_L","MEDIA_QUERY_TABLET","HeaderContainer","Brand","NavbarListContainer","NavbarList","Nav","Link","$active","Header","pathname","useLocation","useContext","user","setUser","to","includes","BASE_URL","getMe","fetch","headers","authorization","then","res","json","Wrapper","PostContainer","PostTitle","PostDate","Post","post","id","title","Date","createdAt","toLocaleString","HomePage","posts","setPosts","useEffect","newPosts","ErrorMessage","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","useHistory","handleInputFocus","Form","onSubmit","e","preventDefault","method","body","login","ok","message","resp","data","Group","controlId","as","Row","Label","column","sm","Col","Control","type","placeholder","value","onChange","target","onFocus","Button","variant","RegisterPage","nickname","setNickname","register","PostBody","SinglePost","useParams","setPost","getSinglePost","PostForm","PostErrorMessage","AddPost","titleValue","setTitleValue","bodyValue","setBodyValue","postError","setPostError","addPost","rows","AboutContainer","Aboutitle","AbouContent","AboutPage","PaginationWrapper","postsCount","currentPage","totalPage","Math","ceil","items","number","Number","href","PaginationPage","page","setPostsCount","getPostsByPage","count","get","BlogApp","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b46feffa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  & + & {\n    margin-top: 16px;\n  }\n`;\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 6px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78 , 55, 0.3)\n  font-size: 14px;\n`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  font-size: 16px;\n  margin-top: 16px;\n`;\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  aligin-items: center;\n  justify-content: center;\n`\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  console.log('render app')\n  const [messages, setMessages] = useState(null);\n  const [apiMessageError, setMessageApiError] = useState(null);\n  const [textareaValue, setTextareaValue] = useState();\n  const [postMessageError, setPostMessageError] = useState(null);\n  // 避免多次送出留言，設定間隔\n  const [isLoadingPostMessage, setLoadingPostMessage] = useState(false)\n\n  const fetchMessages = () => {\n    console.log('start fetch!')\n    return (\n      fetch(API_ENDPOINT)\n        // 轉為 json 格式\n        .then((res) => res.json())\n        .then((data) => {\n          setMessages(data);\n        })\n        .catch((err) => {\n          setMessageApiError(err.message);\n        })\n    );\n  };\n\n  const handleTextareaChange = (e) => {\n    setTextareaValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null)\n  }\n\n  const handleFormSubmit = (e) => {\n    // 先阻止表單發送行為\n    e.preventDefault();\n    // 如果還在送出的冷卻時間內就取消\n    if (isLoadingPostMessage) {\n      return\n    }\n    // 正要發送，進入冷卻\n    setLoadingPostMessage(true)\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"hello\",\n        body: textareaValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // 收到回傳結果，重置送出留言的冷卻\n        setLoadingPostMessage(false)\n        // 針對後端回覆錯誤處理\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        // 成功新增留言，清空輸入框\n        setTextareaValue('')\n        fetchMessages();\n      })\n      // 捕捉 fetch 失敗的錯誤\n      .catch((err) => {\n        setLoadingPostMessage(false)\n        setPostMessageError(err.message);\n      });\n  };\n  // 在 render 結束後 call API，並且第二個參數傳空值表示只在此 component mount 時執行\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          rows={10}\n          value={textareaValue}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>\n            新增留言失敗: {postMessageError}\n          </ErrorMessage>\n        )}\n      </MessageForm>\n      {apiMessageError && (\n        <ErrorMessage>\n          Something went wrong: {apiMessageError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Message yet!</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nconst TodoContent = styled.div`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoContentEditing = styled.input`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  outline: 1px solid grey;\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoButtonWrapper = styled.div``;\n\n// 合併包成完整的 component，設定參數傳入位置\nconst TodoItem = ({\n  className,\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  updatingTodo,\n  setUpdatingTodo,\n  handleUpdateClick,\n  updateValue,\n  handleUpdateChange,\n}) => {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper className={className} data-todo-id={todo.id}>\n      {/* 更新觸發時，比對更新的 ID 與該 todo 的 ID，相符則 render 輸入框，不相符則 render div */}\n      {updatingTodo && Number(updatingTodo.id) === todo.id ? (\n        <TodoContentEditing\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n          value={updateValue}\n          onChange={handleUpdateChange}\n          onBlur={() => {\n            setUpdatingTodo(false);\n          }}\n          className={\"editing\"}\n        ></TodoContentEditing>\n      ) : (\n        <TodoContent\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n        >\n          {todo.content}\n        </TodoContent>\n      )}\n\n      <TodoButtonWrapper>\n        <Button\n          onClick={handleToggleClick}\n          variant={todo.isDone ? \"secondary\" : \"success\"}\n        >\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>{\" \"}\n        <Button variant=\"danger\" onClick={handleDeleteClick}>\n          刪除\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n};\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  className: PropTypes.string,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  updatingTodo: PropTypes.bool,\n  setUpdatingTodo: PropTypes.func,\n  handleUpdateClick: PropTypes.func,\n  updateValue: PropTypes.string,\n  handleUpdateChange: PropTypes.func,\n};\n","import \"./App.css\";\nimport React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport TodoItem from \"./TodoItem\";\nimport InfoAndFilterBar from \"./InfoAndFilterBar\";\nimport useTodos from \"./useTodos\";\n\nconst TodoContainer = styled.div`\n  border-radius: 8px;\n  padding: 16px;\n  background: white;\n`;\nconst Title = memo(styled.div`\n  color: orange;\n  text-align: center;\n  font-size: 60px;\n  font-weight: bold;\n  padding: 20px;\n  margin-bottom: 10px;\n`);\n\nfunction TodosApp() {\n  // 引入已打包好的 hooks\n  const {\n    todos,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n  } = useTodos();\n  console.log('todos',todos)\n  return (\n    <Container className=\"my-5\">\n      <TodoContainer>\n        <Title>Todo List</Title>\n        {/* 輸入列 */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"請輸入待辦事項\"\n            value={value}\n            onChange={handleInputChange}\n          />\n          <InputGroup.Append>\n            <Button onClick={handleButtonAddTodo}>送出</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {/* 資訊及篩選列 */}\n        <InfoAndFilterBar\n          todos={todos}\n          todosFilter={todosFilter}\n          setTodosFilter={setTodosFilter}\n          handleClearDoneTodos={handleClearDoneTodos}\n        />\n        {/* Todos */}\n        {todos.map((todo) => {\n          if (todosFilter === \"active\" && todo.isDone) {\n            return \"\";\n          }\n          if (todosFilter === \"completed\" && !todo.isDone) {\n            return \"\";\n          }\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleToggleIsDone={handleToggleIsDone}\n              handleUpdateClick={handleUpdateClick}\n              updatingTodo={updatingTodo}\n              setUpdatingTodo={setUpdatingTodo}\n              updateValue={updateValue}\n              handleUpdateChange={handleUpdateChange}\n            />\n          );\n        })}\n      </TodoContainer>\n    </Container>\n  );\n}\n\nexport default TodosApp;\n","const size = 19;\nconst minNumberForWin = 5;\nconst initialBoard = Array(size).fill(Array(size).fill(null));\n\nexport {size, minNumberForWin, initialBoard}","import { memo } from \"react\";\nimport { size } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\nconst stoneRows = Array.from({ length: size });\nconst stoneColumns = Array.from({ length: size });\nconst squareRows = Array.from({ length: size - 1 });\nconst squareColumns = Array.from({ length: size - 1 });\n\nconst Stone = ({ handleClickPlacing, X, Y, stone }) => {\n  let color = \"\";\n  if (stone) {\n    color =\n      stone === \"B\"\n        ? \"radial-gradient(5px 5px at 5px 5px,#fff,#333)\"\n        : \"radial-gradient(5px 5px at 5px 5px,#fff,#e2e2e2)\";\n  }\n  return (\n    <div\n      className=\"stone\"\n      onClick={() => {\n        handleClickPlacing(X, Y);\n      }}\n      style={{\n        background: color,\n        boxShadow: stone !== null ? \"2px 2px 4px rgba(0,0,0,0.3)\" : \"\",\n      }}\n    ></div>\n  );\n};\n\n// 背景不需 re-render\nconst MemoSquaresBackgroundWrapper = memo(() => {\n  return (\n    <div className=\"squares-background-wrapper\">\n      {squareColumns.map((el, index_X) => (\n        <div key={index_X} className=\"squares-columns\">\n          {squareRows.map((EL, index_Y) => (\n            <div key={index_Y} className=\"square-background\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nconst Board = ({ handleClickPlacing, board }) => {\n  return (\n    <div className=\"stones-wrapper\">\n      {stoneColumns.map((EL, index_X) => (\n        <div key={index_X} className=\"stone-columns\">\n          {stoneRows.map((el, index_Y) => {\n            return (\n              <Stone\n                key={index_Y}\n                X={index_X}\n                Y={index_Y}\n                handleClickPlacing={handleClickPlacing}\n                stone={board[index_Y][index_X]}\n              />\n            );\n          })}\n        </div>\n      ))}\n      <MemoSquaresBackgroundWrapper />\n    </div>\n  );\n};\n\nexport default Board;\n\nStone.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  X: PropTypes.number,\n  Y: PropTypes.number,\n  stone: PropTypes.string,\n};\n\nBoard.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  board: PropTypes.array,\n};\n","import { Pagination } from \"react-bootstrap\";\nimport { initialBoard } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\n// 合併包成完整的 component，設定參數傳入位置\nconst HistoryBar = ({ history, setHistory, setBoard, nowStep }) => {\n  const handleRestartClick = () => {\n    setHistory([initialBoard]);\n  };\n\n  const handleClickPrev = () => {\n    nowStep.current--;\n    const prevBoard = history[nowStep.current];\n    setBoard(prevBoard);\n  };\n  const handleClickStep = (step) => {\n    nowStep.current = step;\n    const prevBoard = history[step];\n    setBoard(prevBoard);\n  };\n  const PaginationCounters = Array.from({ length: history.length - 1 });\n  return (\n    <Pagination>\n      <Pagination.Item\n        onClick={() => {\n          handleRestartClick();\n        }}\n      >\n        Restart\n      </Pagination.Item>\n\n      {nowStep.current > 0 && (\n        <Pagination.Prev\n          onClick={() => {\n            handleClickPrev();\n          }}\n        />\n      )}\n\n      {nowStep.current > 0 &&\n        PaginationCounters.map((item, index) => (\n          <Pagination.Item\n            key={index}\n            onClick={() => {\n              handleClickStep(index + 1);\n            }}\n            active={index + 1 === nowStep.current ? \"true\" : null}\n          >\n            {index + 1}\n          </Pagination.Item>\n        ))}\n    </Pagination>\n  );\n};\n\nexport default HistoryBar;\nHistoryBar.propTypes = {\n  history: PropTypes.array,\n  setHistory: PropTypes.func,\n  setBoard: PropTypes.func,\n  nowStep: PropTypes.object,\n};","function countTotal(currentX, currentY, directionX, directionY, board) {\n  // 起點的棋子顏色 = 檢查的顏色\n  const now = board[currentY][currentX];\n  let tempX = currentX;\n  let tempY = currentY;\n  let total = 0;\n  do {\n    // 依照方向檢查下個棋子\n    tempX += directionX;\n    tempY += directionY;\n    // 如果下個棋子等於檢查的顏色\n    if (tempX <= 18 && tempX >= 0 && tempY >= 0 && tempY <= 18 ) {\n      if (board[tempY][tempX] === now) {\n        console.log(\"tempY\", tempY)\n        console.log(\"tempX\", tempX)\n        console.log(board[tempY][tempX])\n        // 連續的棋子數 + 1\n        total++;\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  } while (total < 5); // 至少找到四顆為止，加上起點本身就達成五顆連線\n  return total;\n}\n\nexport function calculateWinner(lastStone, board) {\n  const { X, Y } = lastStone;\n  const now = board[Y][X];\n  if (\n    countTotal(X, Y, 1, 0, board) + countTotal(X, Y, -1, 0, board) >= 4 ||\n    countTotal(X, Y, 0, 1, board) + countTotal(X, Y, 0, -1, board) >= 4 ||\n    countTotal(X, Y, 1, 1, board) + countTotal(X, Y, -1, -1, board) >= 4 ||\n    countTotal(X, Y, 1, -1, board) + countTotal(X, Y, -1, 1, board) >= 4\n  ) {\n    return now;\n  }\n  // 都沒找到就回傳 null\n  return null;\n}\n","import { useState, useLayoutEffect, useRef } from \"react\";\n// 引入相關函式及參數\nimport { calculateWinner } from \"./utils\";\nimport { initialBoard } from \"./setting\";\n\nexport default function useGobang() {\n  const [board, setBoard] = useState(initialBoard);\n  const [history, setHistory] = useState([initialBoard]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [blackIsNext, setBlackIsNext] = useState(true);\n\n  // 與畫面無關的狀態\n  const nowStep = useRef(0);\n  const lastStone = useRef(null);\n\n  // paint 前進行下棋順序判斷\n  useLayoutEffect(() => {\n    // 依據現在步數是否為偶數決定\n    setBlackIsNext(nowStep.current % 2 === 0 ? true : false);\n  }, [board]);\n\n  // paint 前找出是否已有勝利者\n  useLayoutEffect(() => {\n    // 第 9 次下棋後再進行判斷\n    if (nowStep.current >= 9 && nowStep.current === history.length - 1) {\n      let result = calculateWinner(lastStone.current, board);\n      if (result !== null) {\n        setIsGameOver(result === \"B\" ? \"黑色\" : \"白色\");\n      } else {\n        setIsGameOver(false);\n      }\n    } else {\n      setIsGameOver(false);\n    }\n  }, [lastStone, board, history.length]);\n\n  // restart 時重置相關 state\n  useLayoutEffect(() => {\n    if (history.length === 1) {\n      setBoard(initialBoard);\n      setIsGameOver(null);\n      nowStep.current = 0;\n    }\n  }, [history]);\n\n  const handleClickPlacing = (X, Y) => {\n    // 該格沒東西 且 遊戲未結束 才可放棋子\n    if (!board[Y][X] && !isGameOver) {\n      nowStep.current++;\n      const newBoard = JSON.parse(JSON.stringify(board));\n      newBoard[Y][X] = blackIsNext ? \"B\" : \"W\";\n      setBoard(newBoard);\n\n      // 更新棋譜紀錄\n      const newHistory = history.slice(0, nowStep.current);\n      newHistory.push(newBoard);\n      setHistory(newHistory);\n\n      // 更新最後一子的位置\n      lastStone.current = { X, Y };\n    } else {\n      return;\n    }\n  };\n\n  return {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    setBlackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  };\n}\n","import \"./App.css\";\n// Components\nimport Board from \"./Board\";\nimport HistoryBar from \"./HistoryBar\";\n// hooks & func\nimport useGobang from \"./useGobang\";\n\nfunction GobangApp() {\n  const {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  } = useGobang();\n\n  return (\n    <div className=\"game\">\n      {/* 下棋順序及勝利提示 */}\n      <div className=\"game-status\" style={{ color: isGameOver ? \"red\" : \"\" }}>\n        {!isGameOver && (blackIsNext ? \"下一步輪到：黑色\" : \"下一步輪到：白色\")}\n        {isGameOver && isGameOver + \"贏了，遊戲結束!\"}\n      </div>\n\n      {/* 棋盤（含棋子本體及棋盤背景） */}\n      <div className=\"game-board\">\n        <Board handleClickPlacing={handleClickPlacing} board={board} />\n      </div>\n\n      {/* 歷史步驟 bar */}\n      {history.length >= 1 && (\n        <HistoryBar\n          history={history}\n          setHistory={setHistory}\n          setBoard={setBoard}\n          blackIsNext={blackIsNext}\n          nowStep={nowStep}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default GobangApp;\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable import/no-unresolved */\nimport { createContext } from 'react';\n\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","export const MEDIA_QUERY_MOBILE_M = '@media screen and (min-width: 375px)';\nexport const MEDIA_QUERY_MOBILE_L = '@media screen and (min-width: 425px)';\nexport const MEDIA_QUERY_TABLET = '@media screen and (min-width: 768px)';\nexport const MEDIA_QUERY_LAPTOP = '@media screen and (min-width: 1024px)';\n","/* eslint-disable import/no-unresolved */\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context';\nimport { setAuthToken } from '../utils';\n\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_MOBILE_L,\n  MEDIA_QUERY_TABLET,\n} from '../../../constants/breakpoint';\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n  background: floralwhite;\n  display: flex;\n  position: sticky;\n  z-index: 1;\n  top: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 10px 20px;\n  ${MEDIA_QUERY_MOBILE_M} {\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    flex-direction: row;\n    padding: 10px;\n  }\n`;\nconst Brand = styled.div`\n  font-weight: bold;\n  margin: 10px auto;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 50px;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    width: 150px;\n    font-size: 24px;\n    margin: auto 10px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    width: 350px;\n    font-size: 40px;\n  }\n`;\nconst NavbarListContainer = styled.div`\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    margin: auto 10px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 24px;\n    flex-direction: column;\n    align-items: center;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    font-size: 18px;\n    flex-direction: row;\n    & + & {\n      margin-top: 0px;\n    }\n  }\n`;\nconst Nav = styled(Link)`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  font-weight: bold;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${props => props.$active\n    && `\n    background: rgba(0, 0, 0, 0.1);\n  `}\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    padding: 5px 10px;\n    width: auto;\n    & + & {\n      margin-top: 0px;\n      margin-left: 6px;\n    }\n  }\n  ${MEDIA_QUERY_TABLET} {\n    font-size: 24px;\n  }\n`;\n\nexport default function Header() {\n  console.log('render header');\n  const { pathname } = useLocation();\n  console.log('pathname', pathname);\n  // 取得當下 user 的狀態(未登入:null, 已登入：帳號資料物件)\n  const { user, setUser } = useContext(AuthContext);\n  console.log('now user is', user);\n\n  const handleLogout = () => {\n    // 登出：清空 Token 並導回首頁\n    setAuthToken('');\n    setUser(false);\n    // 父層 user state 改變，重新 re-render\n    console.log('pathname', pathname);\n  };\n  return (\n    <HeaderContainer>\n      <Brand>My Blog</Brand>\n      <NavbarListContainer>\n        <NavbarList>\n          <Nav $active={pathname === '/BlogApp'} to=\"/BlogApp\">\n            首頁\n          </Nav>\n          <Nav $active={pathname === '/BlogApp/About'} to=\"/BlogApp/About\">\n            關於我\n          </Nav>\n          <Nav\n            $active={pathname.includes('/BlogApp/pagination')}\n            to=\"/BlogApp/pagination/1\"\n          >\n            文章分頁\n          </Nav>\n          {user && (\n            <Nav\n              $active={pathname === '/BlogApp/new-post'}\n              to=\"/BlogApp/new-post\"\n            >\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n        <NavbarList>\n          {/* 初始化會先依據 user 的初始值顯示，等 call API 後才會改變 */}\n          {user === false && (\n            <>\n              <Nav\n                $active={pathname === '/BlogApp/register'}\n                to=\"/BlogApp/register\"\n              >\n                註冊\n              </Nav>\n              <Nav $active={pathname === '/BlogApp/login'} to=\"/BlogApp/login\">\n                登入\n              </Nav>\n            </>\n          )}\n          {user && (\n            <Nav onClick={handleLogout} to=\"/BlogApp\">\n              登出\n            </Nav>\n          )}\n        </NavbarList>\n      </NavbarListContainer>\n    </HeaderContainer>\n  );\n}\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\n\nexport const getPostsByPage = page => fetch(\n  `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`,\n);\n\nexport const getSinglePost = id => fetch(`${BASE_URL}/posts?id=${id}`).then(res => res.json());\n\nexport const register = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const login = (username, password) => fetch(`${BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\nexport const addPost = (data) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(res => res.json());\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../../WebAPI';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\nconst PostContainer = styled.div`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n`;\nconst PostTitle = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/BlogApp/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nfunction HomePage() {\n  console.log('render HomePage');\n  const [posts, setPosts] = useState(null);\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    console.log('useEffect just init to setPosts');\n    getPosts().then(newPosts => setPosts(newPosts));\n  }, []);\n\n  return (\n    <Wrapper>\n      {posts && posts.map(post => <Post key={post.id} post={post} />)}\n    </Wrapper>\n  );\n}\n\nexport default memo(HomePage);\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../context';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  console.log('render loginPage');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  // 取出上層 contextProvider 提供的 context\n  const { setUser } = useContext(AuthContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(username, password).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      // 登入成功將回傳的 token 儲存在 localStorage\n      setAuthToken(res.token);\n      // 取得該使用者資料\n      getMe().then((resp) => {\n        if (resp.ok !== 1) {\n          // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken(null);\n          return setErrorMessage(resp.message);\n        }\n        // 查詢資料成功，將回傳的帳號資料(物件)存入 user\n        setUser(resp.data);\n        return history.push('/BlogApp');\n      });\n      return true;\n    });\n  };\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n          登入\n        </Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { getMe, register } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../context';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function RegisterPage() {\n  console.log('render RegisterPage');\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  // 取出上層 contextProvider 提供的 context\n  const { setUser } = useContext(AuthContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    register(nickname, username, password).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      // 註冊成功將回傳的 token 儲存在 localStorage\n      setAuthToken(res.token);\n      // 取得該使用者資料\n      getMe().then((resp) => {\n        if (resp.ok !== 1) {\n          // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken(null);\n          return setErrorMessage(resp.message);\n        }\n        // 查詢資料成功，將回傳的帳號資料(物件)存入 user\n        setUser(resp.data);\n        return history.push('/BlogApp');\n      });\n      return true;\n    });\n  };\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicNickname\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Nickname\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"nickname\"\n              placeholder=\"Enter nickname\"\n              value={nickname}\n              onChange={e => setNickname(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n          註冊\n        </Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { getSinglePost } from '../../WebAPI';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostContainer = styled.div`\n  padding: 16px;\n`;\nconst PostTitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  text-align: end;\n`;\nconst PostBody = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nfunction Post({ post }) {\n  console.log('render post');\n  return (\n    <PostContainer>\n      <PostTitle>{post[0].title}</PostTitle>\n      <PostDate>{new Date(post[0].createdAt).toLocaleString()}</PostDate>\n      <PostBody>{post[0].body}</PostBody>\n    </PostContainer>\n  );\n}\n\nexport default function SinglePost() {\n  console.log('render single post');\n  // 取得在 Route 中設定的 URL 參數\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    getSinglePost(id).then(newPosts => setPost(newPosts));\n  }, []);\n  return <Wrapper>{post && <Post post={post} />}</Wrapper>;\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { addPost } from '../../WebAPI';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostForm = styled.form``;\nconst PostTitle = styled.input`\n  padding: 8px;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 50%;\n`;\nconst PostBody = styled.textarea`\n  padding: 8px;\n  font-size: 16px;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 100%;\n  resize: none;\n`;\nconst PostErrorMessage = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: 1rem;\n`;\n\nexport default function AddPost() {\n  const [titleValue, setTitleValue] = useState('');\n  const [bodyValue, setBodyValue] = useState('');\n  const [postError, setPostError] = useState(null);\n\n  const history = useHistory();\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      title: titleValue,\n      body: bodyValue,\n    };\n    addPost(data).then((res) => {\n      if (res.ok === 0) {\n        return setPostError(res.message);\n      }\n      return history.push('/BlogApp');\n    });\n  };\n\n  return (\n    <Wrapper>\n      <PostForm onSubmit={handleFormSubmit}>\n        <div>\n          <div>文章標題：</div>\n          <PostTitle\n            value={titleValue}\n            onChange={(e) => {\n              setTitleValue(e.target.value);\n            }}\n            onFocus={() => {\n              setPostError(null);\n            }}\n          />\n        </div>\n        <div>\n          <div>文章內容：</div>\n          <PostBody\n            rows={6}\n            value={bodyValue}\n            onChange={(e) => {\n              setBodyValue(e.target.value);\n            }}\n            onFocus={() => {\n              setPostError(null);\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n            送出\n          </Button>\n        </div>\n        {postError && (\n          <PostErrorMessage>\n            新增文章失敗：\n            {' '}\n            {postError}\n          </PostErrorMessage>\n        )}\n      </PostForm>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\n\nconst AboutContainer = styled.div`\n  padding: 16px;\n`;\nconst Aboutitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nconst AbouContent = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Wrapper>\n      <AboutContainer>\n        <Aboutitle>關於我</Aboutitle>\n        <AbouContent>\n          漢皇重色思傾國，御宇多年求不得。 楊家有女初長成，養在深閨人未識。\n          天生麗質難自棄，一朝選在君王側。 回眸一笑百媚生，六宮粉黛無顏色。\n          春寒賜浴華清池，溫泉水滑洗凝脂。 侍兒扶起嬌無力，始是新承恩澤時。\n          雲鬢花顏金步搖，芙蓉帳暖度春宵。 春宵苦短日高起，從此君王不早朝。\n          承歡侍宴無閒暇，春從春遊夜專夜。 後宮佳麗三千人，三千寵愛在一身。\n          金屋妝成嬌侍夜，玉樓宴罷醉和春。 姊妹弟兄皆列土，可憐光彩生門戶。\n          遂令天下父母心，不重生男重生女。 驪宮高處入青雲，仙樂風飄處處聞。\n          緩歌慢舞凝絲竹，盡日君王看不足。 漁陽鼙鼓動地來，驚破霓裳羽衣曲。\n          九重城闕煙塵生，千乘萬騎西南行。 翠華搖搖行復止，西出都門百餘里。\n          六軍不發無奈何，宛轉蛾眉馬前死。 花鈿委地無人收，翠翹金雀玉搔頭。\n          君王掩面救不得，回看血淚相和流。 黃埃散漫風蕭索，雲棧縈紆登劍閣。\n          峨嵋山下少人行，旌旗無光日色薄。 蜀江水碧蜀山青，聖主朝朝暮暮情。\n          行宮見月傷心色，夜雨聞鈴腸斷聲。 天旋日轉迴龍馭，到此躊躇不能去。\n          馬嵬坡下泥土中，不見玉顏空死處。 君臣相顧盡沾衣，東望都門信馬歸。\n          歸來池苑皆依舊，太液芙蓉未央柳。 芙蓉如面柳如眉，對此如何不淚垂。\n          春風桃李花開日，秋雨梧桐葉落時。 西宮南內多秋草，落葉滿階紅不掃。\n          梨園子弟白髮新，椒房阿監青娥老。 夕殿螢飛思悄然，孤燈挑盡未成眠。\n          遲遲鐘鼓初長夜，耿耿星河欲曙天。 鴛鴦瓦冷霜華重，翡翠衾寒誰與共。\n          悠悠生死別經年，魂魄不曾來入夢。 臨邛道士鴻都客，能以精誠致魂魄。\n          為感君王輾轉思，遂教方士殷勤覓。 排空馭氣奔如電，升天入地求之遍。\n          上窮碧落下黃泉，兩處茫茫皆不見。 忽聞海上有仙山，山在虛無縹緲間。\n          樓閣玲瓏五雲起，其中綽約多仙子。 中有一人字太真，雪膚花貌參差是。\n          金闕西廂叩玉扃，轉教小玉報雙成。 聞道漢家天子使，九華帳裏夢魂驚。\n          攬衣推枕起徘徊，珠箔銀屏迤邐開。 雲髻半偏新睡覺，花冠不整下堂來。\n          風吹仙袂飄颻舉，猶似霓裳羽衣舞。 玉容寂寞淚闌干，梨花一枝春帶雨。\n          含情凝睇謝君王，一別音容兩渺茫。 昭陽殿裏恩愛絕，蓬萊宮中日月長。\n          回頭下望人寰處，不見長安見塵霧。 唯將舊物表深情，鈿合金釵寄將去。\n          釵留一股合一扇，釵擘黃金合分鈿。 但教心似金鈿堅，天上人間會相見。\n          臨別殷勤重寄詞，詞中有誓兩心知。 七月七日長生殿，夜半無人私語時。\n          在天願作比翼鳥，在地願為連理枝。 天長地久有時盡，此恨綿綿無絕期。\n        </AbouContent>\n      </AboutContainer>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { Link, useParams } from 'react-router-dom';\nimport { Pagination } from 'react-bootstrap';\nimport { getPostsByPage } from '../../WebAPI';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\nconst PostContainer = styled.div`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n`;\nconst PostTitle = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction PaginationWrapper({ postsCount, currentPage }) {\n  const postsPerPage = 5;\n  const totalPage = Math.ceil(postsCount / postsPerPage);\n  console.log('totalPage: ', totalPage);\n  const items = [];\n  for (let number = 1; number <= totalPage; number += 1) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === Number(currentPage)}\n        href={`#/BlogApp/pagination/${number}`}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <Pagination className=\"d-flex justify-content-center\" size=\"lg\">\n      {items}\n    </Pagination>\n  );\n}\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/BlogApp/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nfunction PaginationPage() {\n  const { page } = useParams();\n  const [posts, setPosts] = useState(null);\n  const [postsCount, setPostsCount] = useState(null);\n\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    console.log('useEffect just init to setPosts');\n    getPostsByPage(page)\n      .then((res) => {\n        // 從 response 的 header 拿到目前所有文章數量\n        const count = Number(res.headers.get('x-total-count'));\n        setPostsCount(count);\n        return res.json();\n      })\n      .then(newPosts => setPosts(newPosts));\n  }, [page]);\n\n  return (\n    <Wrapper>\n      {postsCount > 0\n        && posts\n        && posts.map(post => <Post key={post.id} post={post} />)}\n      {/* 當非同步的 fetch 回來後 postsCount 的狀態從原本的 null 被更新，此時才會開始 render PaginationWrapper */}\n      {postsCount > 0 && (\n        <PaginationWrapper postsCount={postsCount} currentPage={page} />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default memo(PaginationPage);\n","/* eslint-disable import/no-unresolved */\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport HomePage from './Pages/HomePage';\nimport LoginPage from './Pages/LoginPage';\nimport RegisterPage from './Pages/RegisterPage';\nimport SinglePost from './Pages/SinglePost';\nimport AddPost from './Pages/AddPost';\nimport AboutPage from './Pages/AboutPage';\nimport PaginationPage from './Pages/PaginationPage';\nimport { AuthContext } from './context';\nimport { getMe } from './WebAPI';\nimport { setAuthToken, getAuthToken } from './utils';\n\nfunction BlogApp() {\n  console.log('render BlogApp');\n  // 登入狀態\n\n  // user 預設值會先被 render 出來\n  const [user, setUser] = useState(null);\n\n  // 每次 mount 時先確認登入狀態，檢查 local storage 內有無 token，有的話再以 getMe 確認身分\n  useEffect(() => {\n    console.log('useEffect in first render');\n    // 沒 token 直接 return\n    if (!getAuthToken()) {\n      setUser(false);\n      return;\n    }\n    getMe().then((res) => {\n      if (res.ok !== 1) {\n        console.log('no ok');\n        // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n        setAuthToken('');\n        setUser(false);\n        return;\n        // return setErrorMessage(res.message);\n      }\n      console.log('ok');\n      setUser(res.data);\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Router>\n        <Header>header</Header>\n        <Switch>\n          <Route exact path=\"/BlogApp\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/BlogApp/about\">\n            <AboutPage />\n          </Route>\n          <Route exact path=\"/BlogApp/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/BlogApp/register\">\n            <RegisterPage />\n          </Route>\n          <Route exact path=\"/BlogApp/pagination/:page\">\n            <PaginationPage />\n          </Route>\n          <Route exact path=\"/BlogApp/posts/:id\">\n            <SinglePost />\n          </Route>\n          <Route exact path=\"/BlogApp/new-post\">\n            <AddPost />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default BlogApp;\n","/* eslint-disable import/no-unresolved */\n// 引入 bootstrap 的 CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n// 引入主題(可設定類似 mixin 的全域變數供使用\n//  import { ThemeProvider } from \"styled-components\";\nimport BoardApp from './components/Board/App'\n// week21\nimport TodosApp from \"./components/Todos/App\";\nimport GobangApp from \"./components/Gobang/App\";\n//  import FormApp from \"./components/Form/App\";\n// week22\nimport BlogApp from './components/Blog/App';\n\n// <React.StrictMode> 嚴格模式可能會造成偵錯問題，可先取消\nReactDOM.render(\n  <Router>\n    <Switch>\n      {/* blog 下層會再使用 router ，此層不可設為 exact，因會由上往下逐層篩選 */}\n      <Route exact path=\"/BoardApp\">\n        <BlogApp />\n      </Route>\n      <Route exact path=\"/TodosApp\">\n        <GobangApp />\n      </Route>\n      <Route exact path=\"/GobangApp\">\n        <GobangApp />\n      </Route>\n      <Route path=\"/BlogApp\">\n        <BlogApp />\n      </Route>\n    </Switch>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}