{"version":3,"sources":["components/Todos/TodoItem.js","components/Todos/InfoAndFilterBar.js","components/Todos/useTodos.js","components/Todos/useInput.js","components/Todos/App.js","components/Gobang/setting.js","components/Gobang/Board.js","components/Gobang/HistoryBar.js","components/Gobang/utils.js","components/Gobang/useGobang.js","components/Gobang/App.js","components/Form/utils.js","components/Form/useInput.js","components/Form/App.js","components/Form/useForm.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","$isDone","TodoContentEditing","input","TodoButtonWrapper","TodoItem","className","todo","handleDeleteTodo","handleToggleIsDone","updatingTodo","setUpdatingTodo","handleUpdateClick","updateValue","handleUpdateChange","data-todo-id","id","Number","isDone","onDoubleClick","value","onChange","onBlur","content","Button","onClick","variant","InfoAndFilterBar","memo","todos","todosFilter","setTodosFilter","handleClearDoneTodos","countResult","useMemo","console","log","count","forEach","useTodos","useState","setValue","handleInputChange","e","target","useInput","useRef","todoData","window","localStorage","getItem","JSON","parse","current","setTodos","setUpdateValue","useEffect","setItem","length","stringify","writeTodosToLocalStorage","document","querySelector","focus","handleButtonAddTodo","useCallback","filter","map","innerText","getAttribute","TodoContainer","Title","TodosApp","Container","InputGroup","FormControl","placeholder","Append","size","initialBoard","Array","fill","stoneRows","from","stoneColumns","squareRows","squareColumns","Stone","handleClickPlacing","X","Y","stone","color","style","background","boxShadow","MemoSquaresBackgroundWrapper","el","index_X","EL","index_Y","Board","board","HistoryBar","history","setHistory","setBoard","nowStep","PaginationCounters","Pagination","Item","Prev","prevBoard","handleClickPrev","item","index","step","handleClickStep","active","countTotal","currentX","currentY","directionX","directionY","now","tempX","tempY","total","useGobang","isGameOver","setIsGameOver","blackIsNext","setBlackIsNext","lastStone","useLayoutEffect","result","calculateWinner","newBoard","newHistory","slice","push","GobangApp","getErrorMessage","inputName","inputValue","test","name","data","title","email","phone","option","howToKnow","suggest","loadFromLocalStorage","setInputValue","inputErrorMessage","setInputErrorMessage","key","FormApp","handleClickButtonSave","handleFormSubmit","preventDefault","hasRequiredInputEmpty","alert","useForm","onSubmit","type","checked","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","exact","path","getElementById"],"mappings":"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","file":"static/js/main.0557c7e1.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nconst TodoContent = styled.div`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoContentEditing = styled.input`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  outline: 1px solid grey;\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoButtonWrapper = styled.div``;\n\n// 合併包成完整的 component，設定參數傳入位置\nconst TodoItem = ({\n  className,\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  updatingTodo,\n  setUpdatingTodo,\n  handleUpdateClick,\n  updateValue,\n  handleUpdateChange,\n}) => {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper className={className} data-todo-id={todo.id}>\n      {/* 更新觸發時，比對更新的 ID 與該 todo 的 ID，相符則 render 輸入框，不相符則 render div */}\n      {updatingTodo && Number(updatingTodo.id) === todo.id ? (\n        <TodoContentEditing\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n          value={updateValue}\n          onChange={handleUpdateChange}\n          onBlur={() => {\n            setUpdatingTodo(false);\n          }}\n          className={\"editing\"}\n        ></TodoContentEditing>\n      ) : (\n        <TodoContent\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n        >\n          {todo.content}\n        </TodoContent>\n      )}\n\n      <TodoButtonWrapper>\n        <Button\n          onClick={handleToggleClick}\n          variant={todo.isDone ? \"secondary\" : \"success\"}\n        >\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>{\" \"}\n        <Button variant=\"danger\" onClick={handleDeleteClick}>\n          刪除\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n};\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  className: PropTypes.string,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  updatingTodo: PropTypes.bool,\n  setUpdatingTodo: PropTypes.func,\n  handleUpdateClick: PropTypes.func,\n  updateValue: PropTypes.string,\n  handleUpdateChange: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport React, {\n  memo,\n  useMemo,\n} from \"react\";\n\nconst InfoAndFilterBar = memo(({\n  todos,\n  todosFilter,\n  setTodosFilter,\n  handleClearDoneTodos,\n}) => {\n  // 未完成數量：只在 todos 有變化時才計算\n  const countResult = useMemo(() => {\n    console.log('calculating!')\n    let count = 0;\n    todos.forEach((todo) => {\n      if (!todo.isDone) {\n        count = count + 1;\n      }\n    });\n    return count;\n  }, [todos])\n\n  return (\n    <>\n      {/* 資訊及篩選列 */}\n      <div className=\"d-flex justify-content-between my-3 px-3\">\n        <h3>\n          <span>{countResult}</span> 個未完成\n        </h3>\n        <div className=\"options\">\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(null);\n            }}\n            className={todosFilter === null && \"active\"}\n          >\n            All\n          </Button>{\" \"}\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(\"active\");\n            }}\n            className={todosFilter === \"active\" && \"active\"}\n          >\n            Active\n          </Button>{\" \"}\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(\"completed\");\n            }}\n            className={todosFilter === \"completed\" && \"active\"}\n          >\n            Completed\n          </Button>{\" \"}\n        </div>\n        <Button variant=\"warning\" onClick={handleClearDoneTodos}>\n          Clear completed\n        </Button>\n      </div>\n    </>\n  );\n});\n\nexport default InfoAndFilterBar;\n\nInfoAndFilterBar.propTypes = {\n  todos: PropTypes.array,\n  todosFilter: PropTypes.string,\n  setTodosFilter: PropTypes.func,\n  handleClearDoneTodos: PropTypes.func\n}","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport useInput from \"./useInput\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\n    \"todos\",\n    todos.length === 0 ? [] : JSON.stringify(todos)\n  );\n}\n\nexport default function useTodos() {\n  // 引入已打包好的 hooks\n  const { value, setValue, handleInputChange } = useInput();\n\n  // ID 與畫面無關不需放入 state 以減少 render 次數，可宣告於外層或以 useRef 方式儲存(改變時不會 rerender)\n  const id = useRef(1);\n\n  // 只有初始化時要取出資料，但後續 render 時都還是會執行造成效能浪費，改為傳入函式就只會執行一次\n  const [todos, setTodos] = useState(() => {\n    console.log(\"todos init\");\n    let todoData = window.localStorage.getItem(\"todos\"); //初始空值錯誤處理(null)\n    if (todoData) {\n      todoData = JSON.parse(todoData);\n      // 已有資料時 id 接續原 local 內最後一筆資料嚴格遞增\n      id.current = todoData[0].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n\n  const [todosFilter, setTodosFilter] = useState(null);\n  const [updatingTodo, setUpdatingTodo] = useState(null);\n  const [updateValue, setUpdateValue] = useState(null);\n\n  // useEffect 第一個參數為函式，當第二個參數關注目標改變時才會執行(傳入[]時因不會改變故只在第一次 render 後執行，如 call API)\n\n  // 關注 todos，改變時就執行函式(含初始化)\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n    console.log(\"useEffect: todos\", JSON.stringify(todos));\n    // (return clean up function)\n  }, [todos]);\n\n  // 關注 updatingTodo，改變時就執行函式(含初始化)\n  useEffect(() => {\n    // 將輸入游標移到該 DOM 元素\n    if (updatingTodo) {\n      document.querySelector(\".editing\").focus();\n    }\n  }, [updatingTodo]);\n\n  const handleButtonAddTodo = useCallback(() => {\n    setTodos([\n      {\n        // 讀取 useRef 時以 current 取得\n        id: id.current,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    // 改變 useRef 時一樣以 current 進行操作\n    id.current++;\n  }, [setValue, todos, value]);\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        // 不符合指定刪除 ID 的保留\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n  const handleUpdateClick = (e) => {\n    setUpdateValue(e.target.innerText);\n    setUpdatingTodo({\n      id: e.target.getAttribute(\"data-todo-id\"),\n    });\n  };\n\n  const handleUpdateChange = (e) => {\n    setUpdateValue(e.target.value);\n    setTodos(\n      todos.map((todo) => {\n        // 不符合指定刪除 ID 的保留\n        if (todo.id !== Number(e.target.getAttribute(\"data-todo-id\")))\n          return todo;\n        return {\n          ...todo,\n          content: e.target.value,\n        };\n      })\n    );\n  };\n\n  const handleClearDoneTodos = useCallback(() => {\n    // 未完成的才保留\n    setTodos(todos.filter((todo) => !todo.isDone));\n  }, [todos]);\n\n  //回傳打包好的函式與需要變數\n  return {\n    todos,\n    setTodos,\n    id,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n  };\n}\n","import { useState } from \"react\";\n\nexport default function useInput() {\n  // 初始化輸入框的值\n  const [value, setValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n  //回傳打包好的工具\n  return {\n    value,\n    setValue,\n    handleInputChange,\n  };\n}\n","import \"./App.css\";\nimport React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport TodoItem from \"./TodoItem\";\nimport InfoAndFilterBar from \"./InfoAndFilterBar\";\nimport useTodos from \"./useTodos\";\n\nconst TodoContainer = styled.div`\n  border-radius: 8px;\n  padding: 16px;\n  background: white;\n`;\nconst Title = memo(styled.div`\n  color: orange;\n  text-align: center;\n  font-size: 60px;\n  font-weight: bold;\n  padding: 20px;\n  margin-bottom: 10px;\n`);\n\nfunction TodosApp() {\n  // 引入已打包好的 hooks\n  const {\n    todos,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n  } = useTodos();\n\n  return (\n    <Container className=\"my-5\">\n      <TodoContainer>\n        <Title>Todo List</Title>\n        {/* 輸入列 */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"請輸入待辦事項\"\n            value={value}\n            onChange={handleInputChange}\n          />\n          <InputGroup.Append>\n            <Button onClick={handleButtonAddTodo}>送出</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {/* 資訊及篩選列 */}\n        <InfoAndFilterBar\n          todos={todos}\n          todosFilter={todosFilter}\n          setTodosFilter={setTodosFilter}\n          handleClearDoneTodos={handleClearDoneTodos}\n        />\n        {/* Todos */}\n        {todos.map((todo) => {\n          if (todosFilter === \"active\" && todo.isDone) {\n            return \"\";\n          }\n          if (todosFilter === \"completed\" && !todo.isDone) {\n            return \"\";\n          }\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleToggleIsDone={handleToggleIsDone}\n              handleUpdateClick={handleUpdateClick}\n              updatingTodo={updatingTodo}\n              setUpdatingTodo={setUpdatingTodo}\n              updateValue={updateValue}\n              handleUpdateChange={handleUpdateChange}\n            />\n          );\n        })}\n      </TodoContainer>\n    </Container>\n  );\n}\n\nexport default TodosApp;\n","const size = 19;\nconst minNumberForWin = 5;\nconst initialBoard = Array(size).fill(Array(size).fill(null));\n\nexport {size, minNumberForWin, initialBoard}","import { memo } from \"react\";\nimport { size } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\nconst stoneRows = Array.from({ length: size });\nconst stoneColumns = Array.from({ length: size });\nconst squareRows = Array.from({ length: size - 1 });\nconst squareColumns = Array.from({ length: size - 1 });\n\nconst Stone = ({ handleClickPlacing, X, Y, stone }) => {\n  let color = \"\";\n  if (stone) {\n    color =\n      stone === \"B\"\n        ? \"radial-gradient(5px 5px at 5px 5px,#fff,#333)\"\n        : \"radial-gradient(5px 5px at 5px 5px,#fff,#e2e2e2)\";\n  }\n  return (\n    <div\n      className=\"stone\"\n      onClick={() => {\n        handleClickPlacing(X, Y);\n      }}\n      style={{\n        background: color,\n        boxShadow: stone !== null ? \"2px 2px 4px rgba(0,0,0,0.3)\" : \"\",\n      }}\n    ></div>\n  );\n};\n\n// 背景不需 re-render\nconst MemoSquaresBackgroundWrapper = memo(() => {\n  return (\n    <div className=\"squares-background-wrapper\">\n      {squareColumns.map((el, index_X) => (\n        <div key={index_X} className=\"squares-columns\">\n          {squareRows.map((EL, index_Y) => (\n            <div key={index_Y} className=\"square-background\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nconst Board = ({ handleClickPlacing, board }) => {\n  return (\n    <div className=\"stones-wrapper\">\n      {stoneColumns.map((EL, index_X) => (\n        <div key={index_X} className=\"stone-columns\">\n          {stoneRows.map((el, index_Y) => {\n            return (\n              <Stone\n                key={index_Y}\n                X={index_X}\n                Y={index_Y}\n                handleClickPlacing={handleClickPlacing}\n                stone={board[index_Y][index_X]}\n              />\n            );\n          })}\n        </div>\n      ))}\n      <MemoSquaresBackgroundWrapper />\n    </div>\n  );\n};\n\nexport default Board;\n\nStone.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  X: PropTypes.number,\n  Y: PropTypes.number,\n  stone: PropTypes.string,\n};\n\nBoard.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  board: PropTypes.array,\n};\n","import { Pagination } from \"react-bootstrap\";\nimport { initialBoard } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\n// 合併包成完整的 component，設定參數傳入位置\nconst HistoryBar = ({ history, setHistory, setBoard, nowStep }) => {\n  const handleRestartClick = () => {\n    setHistory([initialBoard]);\n  };\n\n  const handleClickPrev = () => {\n    nowStep.current--;\n    const prevBoard = history[nowStep.current];\n    setBoard(prevBoard);\n  };\n  const handleClickStep = (step) => {\n    nowStep.current = step;\n    const prevBoard = history[step];\n    setBoard(prevBoard);\n  };\n  const PaginationCounters = Array.from({ length: history.length - 1 });\n  return (\n    <Pagination>\n      <Pagination.Item\n        onClick={() => {\n          handleRestartClick();\n        }}\n      >\n        Restart\n      </Pagination.Item>\n\n      {nowStep.current > 0 && (\n        <Pagination.Prev\n          onClick={() => {\n            handleClickPrev();\n          }}\n        />\n      )}\n\n      {nowStep.current > 0 &&\n        PaginationCounters.map((item, index) => (\n          <Pagination.Item\n            key={index}\n            onClick={() => {\n              handleClickStep(index + 1);\n            }}\n            active={index + 1 === nowStep.current ? \"true\" : null}\n          >\n            {index + 1}\n          </Pagination.Item>\n        ))}\n    </Pagination>\n  );\n};\n\nexport default HistoryBar;\nHistoryBar.propTypes = {\n  history: PropTypes.array,\n  setHistory: PropTypes.func,\n  setBoard: PropTypes.func,\n  nowStep: PropTypes.object,\n};","function countTotal(currentX, currentY, directionX, directionY, board) {\n  // 起點的棋子顏色 = 檢查的顏色\n  const now = board[currentY][currentX];\n  let tempX = currentX;\n  let tempY = currentY;\n  let total = 0;\n  do {\n    // 依照方向檢查下個棋子\n    tempX += directionX;\n    tempY += directionY;\n    // 如果下個棋子等於檢查的顏色\n    if (board[tempY][tempX] === now) {\n      // 連續的棋子數 + 1\n      total++;\n    } else {\n      break;\n    }\n  } while (total < 5); // 至少找到四顆為止，加上起點本身就達成五顆連線\n  return total;\n}\n\nexport function calculateWinner(lastStone, board) {\n  const { X, Y } = lastStone;\n  const now = board[Y][X];\n  if (\n    countTotal(X, Y, 1, 0, board) + countTotal(X, Y, -1, 0, board) >= 4 ||\n    countTotal(X, Y, 0, 1, board) + countTotal(X, Y, 0, -1, board) >= 4 ||\n    countTotal(X, Y, 1, 1, board) + countTotal(X, Y, -1, -1, board) >= 4 ||\n    countTotal(X, Y, 1, -1, board) + countTotal(X, Y, -1, 1, board) >= 4\n  ) {\n    return now;\n  }\n  // 都沒找到就回傳 null\n  return null;\n}\n","import { useState, useLayoutEffect, useRef } from \"react\";\n// 引入相關函式及參數\nimport { calculateWinner } from \"./utils\";\nimport { initialBoard } from \"./setting\";\n\nexport default function useGobang() {\n  const [board, setBoard] = useState(initialBoard);\n  const [history, setHistory] = useState([initialBoard]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [blackIsNext, setBlackIsNext] = useState(true);\n\n  // 與畫面無關的狀態\n  const nowStep = useRef(0);\n  const lastStone = useRef(null);\n\n  // paint 前進行下棋順序判斷\n  useLayoutEffect(() => {\n    // 依據現在步數是否為偶數決定\n    setBlackIsNext(nowStep.current % 2 === 0 ? true : false);\n  }, [board]);\n\n  // paint 前找出是否已有勝利者\n  useLayoutEffect(() => {\n    // 第 9 次下棋後再進行判斷\n    if (nowStep.current >= 9 && nowStep.current === history.length - 1) {\n      let result = calculateWinner(lastStone.current, board);\n      if (result !== null) {\n        setIsGameOver(result === \"B\" ? \"黑色\" : \"白色\");\n      } else {\n        setIsGameOver(false);\n      }\n    } else {\n      setIsGameOver(false);\n    }\n  }, [lastStone, board, history.length]);\n\n  // restart 時重置相關 state\n  useLayoutEffect(() => {\n    if (history.length === 1) {\n      setBoard(initialBoard);\n      setIsGameOver(null);\n      nowStep.current = 0;\n    }\n  }, [history]);\n\n  const handleClickPlacing = (X, Y) => {\n    // 該格沒東西 且 遊戲未結束 才可放棋子\n    if (!board[Y][X] && !isGameOver) {\n      nowStep.current++;\n      const newBoard = JSON.parse(JSON.stringify(board));\n      newBoard[Y][X] = blackIsNext ? \"B\" : \"W\";\n      setBoard(newBoard);\n\n      // 更新棋譜紀錄\n      const newHistory = history.slice(0, nowStep.current);\n      newHistory.push(newBoard);\n      setHistory(newHistory);\n\n      // 更新最後一子的位置\n      lastStone.current = { X, Y };\n    } else {\n      return;\n    }\n  };\n\n  return {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    setBlackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  };\n}\n","import \"./App.css\";\n// Components\nimport Board from \"./Board\";\nimport HistoryBar from \"./HistoryBar\";\n// hooks & func\nimport useGobang from \"./useGobang\";\n\nfunction GobangApp() {\n  const {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  } = useGobang();\n\n  return (\n    <div className=\"game\">\n      {/* 下棋順序及勝利提示 */}\n      <div className=\"game-status\" style={{ color: isGameOver ? \"red\" : \"\" }}>\n        {!isGameOver && (blackIsNext ? \"下一步輪到：黑色\" : \"下一步輪到：白色\")}\n        {isGameOver && isGameOver + \"贏了，遊戲結束!\"}\n      </div>\n\n      {/* 棋盤（含棋子本體及棋盤背景） */}\n      <div className=\"game-board\">\n        <Board handleClickPlacing={handleClickPlacing} board={board} />\n      </div>\n\n      {/* 歷史步驟 bar */}\n      {history.length >= 1 && (\n        <HistoryBar\n          history={history}\n          setHistory={setHistory}\n          setBoard={setBoard}\n          blackIsNext={blackIsNext}\n          nowStep={nowStep}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default GobangApp;\n","// 讀取 local 暫存資料，沒有就回傳空值作為初始化資料\nexport function loadFromLocalStorage(name) {\n  let data = window.localStorage.getItem(name);\n  // 初始空值錯誤處理(null)\n  if (!data) {\n    return {\n      title: \"\",\n      email: \"\",\n      phone: \"\",\n      option: \"\",\n      howToKnow: \"\",\n      suggest: \"\",\n    };\n  }\n  return JSON.parse(data);\n}\n// 依據 html 中設定的 name 做分類，並依據空值及格式做驗證，回傳錯誤訊息\nexport function getErrorMessage(inputName, inputValue) {\n  switch (inputName) {\n    case \"title\":\n      if (!inputValue) {\n        return \"請輸入暱稱\";\n      } else if (!/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/.test(inputValue)) {\n        return \"限使用中文/英文/數字/底線\";\n      } else {\n        return \"\";\n      }\n    case \"email\":\n      if (!inputValue) {\n        return \"請輸入電子郵件\";\n      } else if (\n        !/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/.test(\n          inputValue\n        )\n      ) {\n        return \"電子郵件格式錯誤\";\n      } else {\n        return \"\";\n      }\n    case \"phone\":\n      if (!inputValue) {\n        return \"請輸入手機號碼\";\n      } else if (!/^09\\d{8}$/.test(inputValue)) {\n        return \"手機號碼格式錯誤\";\n      } else {\n        return \"\";\n      }\n    case \"option\":\n      if (!inputValue) {\n        return \"請勾選報名類型\";\n      } else {\n        return \"\";\n      }\n    case \"howToKnow\":\n      if (!inputValue) {\n        return \"請勿留空\";\n      } else if (!/^[\\u4e00-\\u9fa5a-zA-Z]+$/.test(inputValue)) {\n        return \"限使用中文/英文\";\n      } else {\n        return \"\";\n      }\n    default:\n      return \"\";\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { loadFromLocalStorage, getErrorMessage } from \"./utils\";\n\nexport function useInput() {\n  // 初始化輸入框，如果 localStorage 內有資料就寫入\n  const [inputValue, setInputValue] = useState(\n    loadFromLocalStorage(\"inputValue\")\n  );\n  const [inputErrorMessage, setInputErrorMessage] = useState({});\n\n  // 載入暫存資料在初始化後先執行驗證，顯示提示訊息\n  useEffect(() => {\n    for (const key in inputValue) {\n      // 非空值再做驗證\n      if (inputValue[key] !== \"\") {\n        // 驗證，使用 functional update 確保按順序同步執行更新\n        setInputErrorMessage((inputErrorMessage) => ({\n          ...inputErrorMessage,\n          [key]: getErrorMessage(key, inputValue[key]),\n        }));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleInputChange = (e) => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    setInputValue({\n      ...inputValue,\n      [name]: value,\n    });\n    // 驗證\n    setInputErrorMessage({\n      ...inputErrorMessage,\n      [name]: getErrorMessage(name, value),\n    });\n  };\n  //回傳打包好的工具\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    setInputErrorMessage,\n  };\n}\n","import \"./App.css\";\nimport useForm from \"./useForm\";\n\nfunction FormApp() {\n  // 引入已打包好的 hooks\n  const {\n    inputValue,\n    handleInputChange,\n    inputErrorMessage,\n    handleClickButtonSave,\n    handleFormSubmit,\n  } = useForm();\n  // memo\n  return (\n    <>\n      <div className=\"form__wrapper\">\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"form__title\">新拖延運動報名表單</div>\n          <div className=\"form__info\">\n            <p>活動日期：2020/12/10 ~ 2020/12/11</p>\n            <p>活動地點：台北市大安區新生南路二段1號</p>\n          </div>\n          <div className=\"form__notice\">*必填</div>\n          <div className=\"input-block\">\n            <div className=\"input-block__title\">暱稱</div>\n            {/* input title */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.title}\n              className=\"placebar\"\n              name=\"title\"\n              placeholder=\"您的回答\"\n              type=\"text\"\n            />\n            {/* input title error */}\n            <div className=\"input-block__error\" value=\"請輸入暱稱!\">\n              {inputErrorMessage.title && inputErrorMessage.title}\n            </div>\n          </div>\n          <div className=\"input-block\">\n            <div className=\"input-block__title\">電子郵件</div>\n            {/* input email */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.email}\n              className=\"placebar\"\n              name=\"email\"\n              placeholder=\"您的電子郵件\"\n              type=\"text\"\n            />\n            {/* input email error */}\n            <div className=\"input-block__error\" value=\"請輸入電子郵件!\">\n              {inputErrorMessage.email && inputErrorMessage.email}\n            </div>\n          </div>\n          <div className=\"input-block\">\n            <div className=\"input-block__title\">手機號碼</div>\n            {/* input phone */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.phone}\n              className=\"placebar\"\n              name=\"phone\"\n              placeholder=\"您的手機號碼\"\n              type=\"text\"\n            />\n            {/* input phone error */}\n            <div className=\"input-block__error\" value=\"請輸入手機號碼!\">\n              {inputErrorMessage.phone && inputErrorMessage.phone}\n            </div>\n          </div>\n          <div className=\"input-block\">\n            <div className=\"input-block__title\">報名類型</div>\n            <div>\n              <label>\n                {/* input option */}\n                <input\n                  onChange={handleInputChange}\n                  type=\"radio\"\n                  name=\"option\"\n                  value=\"躺在床上用想像力實作\"\n                  checked={inputValue.option === \"躺在床上用想像力實作\"}\n                />\n                躺在床上用想像力實作\n              </label>\n              <label>\n                {/* input option */}\n                <input\n                  onChange={handleInputChange}\n                  type=\"radio\"\n                  name=\"option\"\n                  value=\"趴在地上滑手機找現成的\"\n                  checked={inputValue.option === \"趴在地上滑手機找現成的\"}\n                />\n                趴在地上滑手機找現成的\n              </label>\n            </div>\n            {/* input option error */}\n            <div className=\"input-block__error\" value=\"請選擇報名類型!\">\n              {inputErrorMessage.option && inputErrorMessage.option}\n            </div>\n          </div>\n          <div className=\"input-block\">\n            <div className=\"input-block__title\">怎麼知道這個活動的？</div>\n            {/* input howToKnow */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.howToKnow}\n              className=\"placebar\"\n              placeholder=\"您的回答\"\n              name=\"howToKnow\"\n              type=\"text\"\n            />\n            {/* input howToKnow error */}\n            <div className=\"input-block__error answer__check\" value=\"請勿留空!\">\n              {inputErrorMessage.howToKnow && inputErrorMessage.howToKnow}\n            </div>\n          </div>\n          <div className=\"input-block\">\n            <div className=\"input-block__title\">其他</div>\n            <div className=\"input-block__desc\">對活動的一些建議</div>\n            {/* input suggest */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.suggest}\n              className=\"placebar\"\n              placeholder=\"您的回答\"\n              name=\"suggest\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"buttons__block\">\n            {/* button save （react 表單內的 button 會自動綁定 submit ，取消需要更改 type） */}\n            <button\n              onClick={handleClickButtonSave}\n              type=\"button\"\n              className=\"buttons__block-save\"\n            >\n              暫存\n            </button>\n            {/* button submit */}\n            <button className=\"buttons__block-summit\">送出</button>\n          </div>\n          <div className=\"form__info\">請勿透過表單送出您的密碼。</div>\n        </form>\n      </div>\n      <div className=\"footer\">© 2020 © Copyright. All rights Reserved.</div>\n    </>\n  );\n}\n\nexport default FormApp;\n","import { useInput } from \"./useInput\";\nimport { getErrorMessage } from \"./utils\";\n\nexport default function useForm() {\n  // 引入已打包好的 hooks\n  const {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    setInputErrorMessage,\n  } = useInput();\n\n  // 暫存按鈕\n  const handleClickButtonSave = () => {\n    localStorage.setItem(\"inputValue\", JSON.stringify(inputValue));\n  };\n\n  // 送出表單前驗證\n  const handleFormSubmit = (e) => {\n    // 取消送出表單動作\n    e.preventDefault();\n    let hasRequiredInputEmpty = false;\n\n    // 先驗證後更新錯誤訊息\n    for (const key in inputValue) {\n      // 空值判斷，排除非必要項目\n      if (inputValue[key] === \"\" && key !== \"suggest\") {\n        hasRequiredInputEmpty = true;\n      }\n      // radio 未勾選判斷\n      if (key === \"options\" && inputValue[key] === \"\") {\n        setInputErrorMessage((inputErrorMessage) => ({\n          ...inputErrorMessage,\n          [key]: getErrorMessage(key, inputValue[key]),\n        }));\n      }\n      // 使用 functional update 確保按順序同步更新\n      setInputErrorMessage((inputErrorMessage) => ({\n        ...inputErrorMessage,\n        [key]: getErrorMessage(key, inputValue[key]),\n      }));\n    }\n\n    // 如 input 的 state 有空值則提前 return （因為前面驗證後的錯誤訊息還在更新中）\n    if (hasRequiredInputEmpty) {\n      alert(\"資料輸入不完全\");\n      return;\n    }\n\n    // 從是否有錯誤訊息判斷是否全數通過驗證\n    for (const key in inputErrorMessage) {\n      if (inputErrorMessage[key] !== \"\") {\n        // eslint-disable-next-line\n        alert(\"資料輸入不完全\");\n        return;\n      }\n    }\n    // 全數通過驗證，顯示輸入資料\n    // eslint-disable-next-line\n    alert(` \n      以下為您所填寫的資料：\n      您的暱稱：${inputValue.title}\n      您的電子郵件：${inputValue.email}\n      您的手機號碼：${inputValue.phone}\n      您的報名類型：${inputValue.option}\n      您怎麼知道這個活動的：${inputValue.howToKnow}\n      其他：${inputValue.suggest}\n    `);\n  };\n\n  //回傳打包好的函式與需要變數\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    handleClickButtonSave,\n    handleFormSubmit,\n  };\n}\n","// 引入 bootstrap 的 CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n// 引入主題(可設定類似 mixin 的全域變數供使用\nimport { ThemeProvider } from \"styled-components\";\n\n//import BlogApp from './components/Blog/App';\n//import BoardApp from './components/Board/App'\n\n// week21\nimport TodosApp from \"./components/Todos/App\";\nimport GobangApp from \"./components/Gobang/App\";\nimport FormApp from \"./components/Form/App\";\n\n// 設定常用/指定屬性\nconst theme = {\n  colors: {\n    primary_300: \"#ff7979\",\n    primary_400: \"#e33e3e\",\n    primary_500: `#af0505`,\n  },\n};\n\n// <React.StrictMode> 嚴格模式可能會造成偵錯問題，可先取消\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/TodosApp\">\n          <TodosApp />\n        </Route>\n        <Route exact path=\"/GobangApp\">\n          <GobangApp />\n        </Route>\n        <Route exact path=\"/FormApp\">\n          <FormApp />\n        </Route>\n      </Switch>\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}