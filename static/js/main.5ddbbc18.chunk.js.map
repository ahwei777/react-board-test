{"version":3,"sources":["components/Board/App.js","components/Todos/TodoItem.js","components/Todos/InfoAndFilterBar.js","components/Todos/useTodos.js","components/Todos/useInput.js","components/Todos/App.js","components/Gobang/setting.js","components/Gobang/Board.js","components/Gobang/HistoryBar.js","components/Gobang/utils.js","components/Gobang/useGobang.js","components/Gobang/App.js","components/Form/utils.js","components/Form/useInput.js","components/Form/App.js","components/Form/useForm.js","components/Blog/context.js","components/Blog/utils.js","constants/breakpoint.js","components/Blog/Header/Header.js","components/Blog/WebAPI.js","components/Blog/Pages/HomePage/HomePage.js","components/Blog/Pages/LoginPage/LoginPage.js","components/Blog/Pages/RegisterPage/RegisterPage.js","components/Blog/Pages/SinglePost/SinglePost.js","components/Blog/Pages/AddPost/AddPost.js","components/Blog/Pages/AboutPage/AboutPage.js","components/Blog/Pages/PaginationPage/PaginationPage.js","components/Blog/App.js","index.js"],"names":["styled","div","h1","form","textarea","button","App","TodoItemWrapper","TodoContent","props","$isDone","TodoContentEditing","input","TodoButtonWrapper","TodoItem","className","todo","handleDeleteTodo","handleToggleIsDone","updatingTodo","setUpdatingTodo","handleUpdateClick","updateValue","handleUpdateChange","data-todo-id","id","Number","isDone","onDoubleClick","value","onChange","onBlur","content","Button","onClick","variant","InfoAndFilterBar","memo","todos","todosFilter","setTodosFilter","handleClearDoneTodos","countResult","useMemo","console","log","count","forEach","useTodos","useState","setValue","handleInputChange","e","target","useInput","useRef","todoData","window","localStorage","getItem","JSON","parse","current","setTodos","setUpdateValue","useEffect","setItem","length","stringify","writeTodosToLocalStorage","document","querySelector","focus","handleButtonAddTodo","useCallback","filter","map","innerText","getAttribute","TodoContainer","Title","TodosApp","Container","InputGroup","FormControl","placeholder","Append","size","initialBoard","Array","fill","stoneRows","from","stoneColumns","squareRows","squareColumns","Stone","handleClickPlacing","X","Y","stone","color","style","background","boxShadow","MemoSquaresBackgroundWrapper","el","index_X","EL","index_Y","Board","board","HistoryBar","history","setHistory","setBoard","nowStep","PaginationCounters","Pagination","Item","Prev","prevBoard","handleClickPrev","item","index","step","handleClickStep","active","countTotal","currentX","currentY","directionX","directionY","now","tempX","tempY","total","useGobang","isGameOver","setIsGameOver","blackIsNext","setBlackIsNext","lastStone","useLayoutEffect","result","calculateWinner","newBoard","newHistory","slice","push","GobangApp","getErrorMessage","inputName","inputValue","test","name","data","title","email","phone","option","howToKnow","suggest","loadFromLocalStorage","setInputValue","inputErrorMessage","setInputErrorMessage","key","FormApp","handleClickButtonSave","handleFormSubmit","preventDefault","hasRequiredInputEmpty","alert","useForm","onSubmit","type","checked","AuthContext","createContext","TOKEN_NAME","setAuthToken","token","getAuthToken","MEDIA_QUERY_MOBILE_M","MEDIA_QUERY_MOBILE_L","MEDIA_QUERY_TABLET","HeaderContainer","Brand","NavbarListContainer","NavbarList","Nav","Link","$active","Header","pathname","useLocation","useContext","user","setUser","to","includes","BASE_URL","getMe","fetch","headers","authorization","then","res","json","Wrapper","PostContainer","PostTitle","PostDate","Post","post","Date","createdAt","toLocaleString","HomePage","posts","setPosts","newPosts","ErrorMessage","LoginPage","username","setUsername","password","setPassword","errorMessage","setErrorMessage","useHistory","handleInputFocus","Form","method","body","login","ok","message","resp","Group","controlId","as","Row","Label","column","sm","Col","Control","onFocus","RegisterPage","nickname","setNickname","register","PostBody","SinglePost","useParams","setPost","getSinglePost","PostForm","PostErrorMessage","AddPost","titleValue","setTitleValue","bodyValue","setBodyValue","postError","setPostError","addPost","rows","AboutContainer","Aboutitle","AbouContent","AboutPage","PaginationWrapper","postsCount","currentPage","totalPage","Math","ceil","items","number","href","PaginationPage","page","setPostsCount","getPostsByPage","get","BlogApp","Provider","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ddbbc18.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  & + & {\n    margin-top: 16px;\n  }\n`;\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 6px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78 , 55, 0.3)\n  font-size: 14px;\n`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  font-size: 16px;\n  margin-top: 16px;\n`;\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  aligin-items: center;\n  justify-content: center;\n`\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  console.log('render app')\n  const [messages, setMessages] = useState(null);\n  const [apiMessageError, setMessageApiError] = useState(null);\n  const [textareaValue, setTextareaValue] = useState();\n  const [postMessageError, setPostMessageError] = useState(null);\n  // 避免多次送出留言，設定間隔\n  const [isLoadingPostMessage, setLoadingPostMessage] = useState(false)\n\n  const fetchMessages = () => {\n    console.log('start fetch!')\n    return (\n      fetch(API_ENDPOINT)\n        // 轉為 json 格式\n        .then((res) => res.json())\n        .then((data) => {\n          setMessages(data);\n        })\n        .catch((err) => {\n          setMessageApiError(err.message);\n        })\n    );\n  };\n\n  const handleTextareaChange = (e) => {\n    setTextareaValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null)\n  }\n\n  const handleFormSubmit = (e) => {\n    // 先阻止表單發送行為\n    e.preventDefault();\n    // 如果還在送出的冷卻時間內就取消\n    if (isLoadingPostMessage) {\n      return\n    }\n    // 正要發送，進入冷卻\n    setLoadingPostMessage(true)\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"hello\",\n        body: textareaValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // 收到回傳結果，重置送出留言的冷卻\n        setLoadingPostMessage(false)\n        // 針對後端回覆錯誤處理\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        // 成功新增留言，清空輸入框\n        setTextareaValue('')\n        fetchMessages();\n      })\n      // 捕捉 fetch 失敗的錯誤\n      .catch((err) => {\n        setLoadingPostMessage(false)\n        setPostMessageError(err.message);\n      });\n  };\n  // 在 render 結束後 call API，並且第二個參數傳空值表示只在此 component mount 時執行\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          rows={10}\n          value={textareaValue}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>\n            新增留言失敗: {postMessageError}\n          </ErrorMessage>\n        )}\n      </MessageForm>\n      {apiMessageError && (\n        <ErrorMessage>\n          Something went wrong: {apiMessageError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Message yet!</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nconst TodoContent = styled.div`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoContentEditing = styled.input`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  outline: 1px solid grey;\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoButtonWrapper = styled.div``;\n\n// 合併包成完整的 component，設定參數傳入位置\nconst TodoItem = ({\n  className,\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  updatingTodo,\n  setUpdatingTodo,\n  handleUpdateClick,\n  updateValue,\n  handleUpdateChange,\n}) => {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper className={className} data-todo-id={todo.id}>\n      {/* 更新觸發時，比對更新的 ID 與該 todo 的 ID，相符則 render 輸入框，不相符則 render div */}\n      {updatingTodo && Number(updatingTodo.id) === todo.id ? (\n        <TodoContentEditing\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n          value={updateValue}\n          onChange={handleUpdateChange}\n          onBlur={() => {\n            setUpdatingTodo(false);\n          }}\n          className={\"editing\"}\n        ></TodoContentEditing>\n      ) : (\n        <TodoContent\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n        >\n          {todo.content}\n        </TodoContent>\n      )}\n\n      <TodoButtonWrapper>\n        <Button\n          onClick={handleToggleClick}\n          variant={todo.isDone ? \"secondary\" : \"success\"}\n        >\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>{\" \"}\n        <Button variant=\"danger\" onClick={handleDeleteClick}>\n          刪除\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n};\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  className: PropTypes.string,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  updatingTodo: PropTypes.bool,\n  setUpdatingTodo: PropTypes.func,\n  handleUpdateClick: PropTypes.func,\n  updateValue: PropTypes.string,\n  handleUpdateChange: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport React, {\n  memo,\n  useMemo,\n} from \"react\";\n\nconst InfoAndFilterBar = memo(({\n  todos,\n  todosFilter,\n  setTodosFilter,\n  handleClearDoneTodos,\n}) => {\n  // 未完成數量：只在 todos 有變化時才計算\n  const countResult = useMemo(() => {\n    console.log('calculating!')\n    let count = 0;\n    todos.forEach((todo) => {\n      if (!todo.isDone) {\n        count = count + 1;\n      }\n    });\n    return count;\n  }, [todos])\n\n  return (\n    <>\n      {/* 資訊及篩選列 */}\n      <div className=\"d-flex justify-content-between my-3 px-3\">\n        <h3>\n          <span>{countResult}</span> 個未完成\n        </h3>\n        <div className=\"options\">\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(null);\n            }}\n            className={todosFilter === null && \"active\"}\n          >\n            All\n          </Button>{\" \"}\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(\"active\");\n            }}\n            className={todosFilter === \"active\" && \"active\"}\n          >\n            Active\n          </Button>{\" \"}\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(\"completed\");\n            }}\n            className={todosFilter === \"completed\" && \"active\"}\n          >\n            Completed\n          </Button>{\" \"}\n        </div>\n        <Button variant=\"warning\" onClick={handleClearDoneTodos}>\n          Clear completed\n        </Button>\n      </div>\n    </>\n  );\n});\n\nexport default InfoAndFilterBar;\n\nInfoAndFilterBar.propTypes = {\n  todos: PropTypes.array,\n  todosFilter: PropTypes.string,\n  setTodosFilter: PropTypes.func,\n  handleClearDoneTodos: PropTypes.func\n}","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport useInput from \"./useInput\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\n    \"todos\",\n    todos.length === 0 ? [] : JSON.stringify(todos)\n  );\n}\n\nexport default function useTodos() {\n  // 引入已打包好的 hooks\n  const { value, setValue, handleInputChange } = useInput();\n\n  // ID 與畫面無關不需放入 state 以減少 render 次數，可宣告於外層或以 useRef 方式儲存(改變時不會 rerender)\n  const id = useRef(1);\n\n  // 只有初始化時要取出資料，但後續 render 時都還是會執行造成效能浪費，改為傳入函式就只會執行一次\n  const [todos, setTodos] = useState(() => {\n    console.log(\"todos init\");\n    let todoData = window.localStorage.getItem(\"todos\"); //初始空值錯誤處理(null)\n    if (todoData) {\n      todoData = JSON.parse(todoData);\n      // 已有資料時 id 接續原 local 內最後一筆資料嚴格遞增\n      id.current = todoData[0].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  console.log(todos)\n  const [todosFilter, setTodosFilter] = useState(null);\n  const [updatingTodo, setUpdatingTodo] = useState(null);\n  const [updateValue, setUpdateValue] = useState(null);\n\n  // useEffect 第一個參數為函式，當第二個參數關注目標改變時才會執行(傳入[]時因不會改變故只在第一次 render 後執行，如 call API)\n\n  // 關注 todos，改變時就執行函式(含初始化)\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n    console.log(\"useEffect: todos\", JSON.stringify(todos));\n    // (return clean up function)\n  }, [todos]);\n\n  // 關注 updatingTodo，改變時就執行函式(含初始化)\n  useEffect(() => {\n    // 將輸入游標移到該 DOM 元素\n    if (updatingTodo) {\n      document.querySelector(\".editing\").focus();\n    }\n  }, [updatingTodo]);\n\n  const handleButtonAddTodo = useCallback(() => {\n    setTodos([\n      {\n        // 讀取 useRef 時以 current 取得\n        id: id.current,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    // 改變 useRef 時一樣以 current 進行操作\n    id.current++;\n  }, [setValue, todos, value]);\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        // 不符合指定刪除 ID 的保留\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n  const handleUpdateClick = (e) => {\n    setUpdateValue(e.target.innerText);\n    setUpdatingTodo({\n      id: e.target.getAttribute(\"data-todo-id\"),\n    });\n  };\n\n  const handleUpdateChange = (e) => {\n    setUpdateValue(e.target.value);\n    setTodos(\n      todos.map((todo) => {\n        // 不符合指定刪除 ID 的保留\n        if (todo.id !== Number(e.target.getAttribute(\"data-todo-id\")))\n          return todo;\n        return {\n          ...todo,\n          content: e.target.value,\n        };\n      })\n    );\n  };\n\n  const handleClearDoneTodos = useCallback(() => {\n    // 未完成的才保留\n    setTodos(todos.filter((todo) => !todo.isDone));\n  }, [todos]);\n\n  //回傳打包好的函式與需要變數\n  return {\n    todos,\n    setTodos,\n    id,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useInput() {\n  // 初始化輸入框的值\n  const [value, setValue] = useState('');\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n  //回傳打包好的工具\n  return {\n    value,\n    setValue,\n    handleInputChange,\n  };\n}\n","import \"./App.css\";\nimport React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport TodoItem from \"./TodoItem\";\nimport InfoAndFilterBar from \"./InfoAndFilterBar\";\nimport useTodos from \"./useTodos\";\n\nconst TodoContainer = styled.div`\n  border-radius: 8px;\n  padding: 16px;\n  background: white;\n`;\nconst Title = memo(styled.div`\n  color: orange;\n  text-align: center;\n  font-size: 60px;\n  font-weight: bold;\n  padding: 20px;\n  margin-bottom: 10px;\n`);\n\nfunction TodosApp() {\n  // 引入已打包好的 hooks\n  const {\n    todos,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n  } = useTodos();\n  console.log('todos',todos)\n  return (\n    <Container className=\"my-5\">\n      <TodoContainer>\n        <Title>Todo List</Title>\n        {/* 輸入列 */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"請輸入待辦事項\"\n            value={value}\n            onChange={handleInputChange}\n          />\n          <InputGroup.Append>\n            <Button onClick={handleButtonAddTodo}>送出</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {/* 資訊及篩選列 */}\n        <InfoAndFilterBar\n          todos={todos}\n          todosFilter={todosFilter}\n          setTodosFilter={setTodosFilter}\n          handleClearDoneTodos={handleClearDoneTodos}\n        />\n        {/* Todos */}\n        {todos.map((todo) => {\n          if (todosFilter === \"active\" && todo.isDone) {\n            return \"\";\n          }\n          if (todosFilter === \"completed\" && !todo.isDone) {\n            return \"\";\n          }\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleToggleIsDone={handleToggleIsDone}\n              handleUpdateClick={handleUpdateClick}\n              updatingTodo={updatingTodo}\n              setUpdatingTodo={setUpdatingTodo}\n              updateValue={updateValue}\n              handleUpdateChange={handleUpdateChange}\n            />\n          );\n        })}\n      </TodoContainer>\n    </Container>\n  );\n}\n\nexport default TodosApp;\n","const size = 19;\nconst minNumberForWin = 5;\nconst initialBoard = Array(size).fill(Array(size).fill(null));\n\nexport {size, minNumberForWin, initialBoard}","import { memo } from \"react\";\nimport { size } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\nconst stoneRows = Array.from({ length: size });\nconst stoneColumns = Array.from({ length: size });\nconst squareRows = Array.from({ length: size - 1 });\nconst squareColumns = Array.from({ length: size - 1 });\n\nconst Stone = ({ handleClickPlacing, X, Y, stone }) => {\n  let color = \"\";\n  if (stone) {\n    color =\n      stone === \"B\"\n        ? \"radial-gradient(5px 5px at 5px 5px,#fff,#333)\"\n        : \"radial-gradient(5px 5px at 5px 5px,#fff,#e2e2e2)\";\n  }\n  return (\n    <div\n      className=\"stone\"\n      onClick={() => {\n        handleClickPlacing(X, Y);\n      }}\n      style={{\n        background: color,\n        boxShadow: stone !== null ? \"2px 2px 4px rgba(0,0,0,0.3)\" : \"\",\n      }}\n    ></div>\n  );\n};\n\n// 背景不需 re-render\nconst MemoSquaresBackgroundWrapper = memo(() => {\n  return (\n    <div className=\"squares-background-wrapper\">\n      {squareColumns.map((el, index_X) => (\n        <div key={index_X} className=\"squares-columns\">\n          {squareRows.map((EL, index_Y) => (\n            <div key={index_Y} className=\"square-background\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nconst Board = ({ handleClickPlacing, board }) => {\n  return (\n    <div className=\"stones-wrapper\">\n      {stoneColumns.map((EL, index_X) => (\n        <div key={index_X} className=\"stone-columns\">\n          {stoneRows.map((el, index_Y) => {\n            return (\n              <Stone\n                key={index_Y}\n                X={index_X}\n                Y={index_Y}\n                handleClickPlacing={handleClickPlacing}\n                stone={board[index_Y][index_X]}\n              />\n            );\n          })}\n        </div>\n      ))}\n      <MemoSquaresBackgroundWrapper />\n    </div>\n  );\n};\n\nexport default Board;\n\nStone.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  X: PropTypes.number,\n  Y: PropTypes.number,\n  stone: PropTypes.string,\n};\n\nBoard.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  board: PropTypes.array,\n};\n","import { Pagination } from \"react-bootstrap\";\nimport { initialBoard } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\n// 合併包成完整的 component，設定參數傳入位置\nconst HistoryBar = ({ history, setHistory, setBoard, nowStep }) => {\n  const handleRestartClick = () => {\n    setHistory([initialBoard]);\n  };\n\n  const handleClickPrev = () => {\n    nowStep.current--;\n    const prevBoard = history[nowStep.current];\n    setBoard(prevBoard);\n  };\n  const handleClickStep = (step) => {\n    nowStep.current = step;\n    const prevBoard = history[step];\n    setBoard(prevBoard);\n  };\n  const PaginationCounters = Array.from({ length: history.length - 1 });\n  return (\n    <Pagination>\n      <Pagination.Item\n        onClick={() => {\n          handleRestartClick();\n        }}\n      >\n        Restart\n      </Pagination.Item>\n\n      {nowStep.current > 0 && (\n        <Pagination.Prev\n          onClick={() => {\n            handleClickPrev();\n          }}\n        />\n      )}\n\n      {nowStep.current > 0 &&\n        PaginationCounters.map((item, index) => (\n          <Pagination.Item\n            key={index}\n            onClick={() => {\n              handleClickStep(index + 1);\n            }}\n            active={index + 1 === nowStep.current ? \"true\" : null}\n          >\n            {index + 1}\n          </Pagination.Item>\n        ))}\n    </Pagination>\n  );\n};\n\nexport default HistoryBar;\nHistoryBar.propTypes = {\n  history: PropTypes.array,\n  setHistory: PropTypes.func,\n  setBoard: PropTypes.func,\n  nowStep: PropTypes.object,\n};","function countTotal(currentX, currentY, directionX, directionY, board) {\n  // 起點的棋子顏色 = 檢查的顏色\n  const now = board[currentY][currentX];\n  let tempX = currentX;\n  let tempY = currentY;\n  let total = 0;\n  do {\n    // 依照方向檢查下個棋子\n    tempX += directionX;\n    tempY += directionY;\n    // 如果下個棋子等於檢查的顏色\n    if (tempX <= 18 && tempX >= 0 && tempY >= 0 && tempY <= 18 ) {\n      if (board[tempY][tempX] === now) {\n        console.log(\"tempY\", tempY)\n        console.log(\"tempX\", tempX)\n        console.log(board[tempY][tempX])\n        // 連續的棋子數 + 1\n        total++;\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  } while (total < 5); // 至少找到四顆為止，加上起點本身就達成五顆連線\n  return total;\n}\n\nexport function calculateWinner(lastStone, board) {\n  const { X, Y } = lastStone;\n  const now = board[Y][X];\n  if (\n    countTotal(X, Y, 1, 0, board) + countTotal(X, Y, -1, 0, board) >= 4 ||\n    countTotal(X, Y, 0, 1, board) + countTotal(X, Y, 0, -1, board) >= 4 ||\n    countTotal(X, Y, 1, 1, board) + countTotal(X, Y, -1, -1, board) >= 4 ||\n    countTotal(X, Y, 1, -1, board) + countTotal(X, Y, -1, 1, board) >= 4\n  ) {\n    return now;\n  }\n  // 都沒找到就回傳 null\n  return null;\n}\n","import { useState, useLayoutEffect, useRef } from \"react\";\n// 引入相關函式及參數\nimport { calculateWinner } from \"./utils\";\nimport { initialBoard } from \"./setting\";\n\nexport default function useGobang() {\n  const [board, setBoard] = useState(initialBoard);\n  const [history, setHistory] = useState([initialBoard]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [blackIsNext, setBlackIsNext] = useState(true);\n\n  // 與畫面無關的狀態\n  const nowStep = useRef(0);\n  const lastStone = useRef(null);\n\n  // paint 前進行下棋順序判斷\n  useLayoutEffect(() => {\n    // 依據現在步數是否為偶數決定\n    setBlackIsNext(nowStep.current % 2 === 0 ? true : false);\n  }, [board]);\n\n  // paint 前找出是否已有勝利者\n  useLayoutEffect(() => {\n    // 第 9 次下棋後再進行判斷\n    if (nowStep.current >= 9 && nowStep.current === history.length - 1) {\n      let result = calculateWinner(lastStone.current, board);\n      if (result !== null) {\n        setIsGameOver(result === \"B\" ? \"黑色\" : \"白色\");\n      } else {\n        setIsGameOver(false);\n      }\n    } else {\n      setIsGameOver(false);\n    }\n  }, [lastStone, board, history.length]);\n\n  // restart 時重置相關 state\n  useLayoutEffect(() => {\n    if (history.length === 1) {\n      setBoard(initialBoard);\n      setIsGameOver(null);\n      nowStep.current = 0;\n    }\n  }, [history]);\n\n  const handleClickPlacing = (X, Y) => {\n    // 該格沒東西 且 遊戲未結束 才可放棋子\n    if (!board[Y][X] && !isGameOver) {\n      nowStep.current++;\n      const newBoard = JSON.parse(JSON.stringify(board));\n      newBoard[Y][X] = blackIsNext ? \"B\" : \"W\";\n      setBoard(newBoard);\n\n      // 更新棋譜紀錄\n      const newHistory = history.slice(0, nowStep.current);\n      newHistory.push(newBoard);\n      setHistory(newHistory);\n\n      // 更新最後一子的位置\n      lastStone.current = { X, Y };\n    } else {\n      return;\n    }\n  };\n\n  return {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    setBlackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  };\n}\n","import \"./App.css\";\n// Components\nimport Board from \"./Board\";\nimport HistoryBar from \"./HistoryBar\";\n// hooks & func\nimport useGobang from \"./useGobang\";\n\nfunction GobangApp() {\n  const {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  } = useGobang();\n\n  return (\n    <div className=\"game\">\n      {/* 下棋順序及勝利提示 */}\n      <div className=\"game-status\" style={{ color: isGameOver ? \"red\" : \"\" }}>\n        {!isGameOver && (blackIsNext ? \"下一步輪到：黑色\" : \"下一步輪到：白色\")}\n        {isGameOver && isGameOver + \"贏了，遊戲結束!\"}\n      </div>\n\n      {/* 棋盤（含棋子本體及棋盤背景） */}\n      <div className=\"game-board\">\n        <Board handleClickPlacing={handleClickPlacing} board={board} />\n      </div>\n\n      {/* 歷史步驟 bar */}\n      {history.length >= 1 && (\n        <HistoryBar\n          history={history}\n          setHistory={setHistory}\n          setBoard={setBoard}\n          blackIsNext={blackIsNext}\n          nowStep={nowStep}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default GobangApp;\n","// 讀取 local 暫存資料，沒有就回傳空值作為初始化資料\nexport function loadFromLocalStorage(name) {\n  let data = window.localStorage.getItem(name);\n  // 初始空值錯誤處理(null)\n  if (!data) {\n    return {\n      title: \"\",\n      email: \"\",\n      phone: \"\",\n      option: \"\",\n      howToKnow: \"\",\n      suggest: \"\",\n    };\n  }\n  return JSON.parse(data);\n}\n// 依據 html 中設定的 name 做分類，並依據空值及格式做驗證，回傳錯誤訊息\nexport function getErrorMessage(inputName, inputValue) {\n  switch (inputName) {\n    case \"title\":\n      if (!inputValue) {\n        return \"請輸入暱稱\";\n      } else if (!/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/.test(inputValue)) {\n        return \"限使用中文/英文/數字/底線\";\n      } else {\n        return \"\";\n      }\n    case \"email\":\n      if (!inputValue) {\n        return \"請輸入電子郵件\";\n      } else if (\n        !/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/.test(\n          inputValue\n        )\n      ) {\n        return \"電子郵件格式錯誤\";\n      } else {\n        return \"\";\n      }\n    case \"phone\":\n      if (!inputValue) {\n        return \"請輸入手機號碼\";\n      } else if (!/^09\\d{8}$/.test(inputValue)) {\n        return \"手機號碼格式錯誤\";\n      } else {\n        return \"\";\n      }\n    case \"option\":\n      if (!inputValue) {\n        return \"請勾選報名類型\";\n      } else {\n        return \"\";\n      }\n    case \"howToKnow\":\n      if (!inputValue) {\n        return \"請勿留空\";\n      } else if (!/^[\\u4e00-\\u9fa5a-zA-Z]+$/.test(inputValue)) {\n        return \"限使用中文/英文\";\n      } else {\n        return \"\";\n      }\n    default:\n      return \"\";\n  }\n}\n","import { useState, useLayoutEffect } from \"react\";\nimport { loadFromLocalStorage, getErrorMessage } from \"./utils\";\n\nexport function useInput() {\n  // 初始化輸入框，如果 localStorage 內有資料就寫入\n  const [inputValue, setInputValue] = useState(\n    loadFromLocalStorage(\"inputValue\")\n  );\n  const [inputErrorMessage, setInputErrorMessage] = useState({});\n\n  // 載入暫存資料在初始化後先執行驗證，並於 paint 前顯示提示訊息\n  useLayoutEffect(() => {\n    for (const key in inputValue) {\n      // 非空值再做驗證\n      if (inputValue[key] !== \"\") {\n        // 驗證，使用 functional update 確保按順序同步執行更新\n        setInputErrorMessage((data) => ({\n          ...data,\n          [key]: getErrorMessage(key, inputValue[key]),\n        }));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleInputChange = (e) => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    setInputValue({\n      ...inputValue,\n      [name]: value,\n    });\n    // 驗證\n    setInputErrorMessage({\n      ...inputErrorMessage,\n      [name]: getErrorMessage(name, value),\n    });\n  };\n  //回傳打包好的工具\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    setInputErrorMessage,\n  };\n}\n","import './App.css';\nimport useForm from './useForm';\n\nfunction FormApp() {\n  // 引入已打包好的 hooks\n  const {\n    inputValue,\n    handleInputChange,\n    inputErrorMessage,\n    handleClickButtonSave,\n    handleFormSubmit,\n  } = useForm();\n  // memo\n  return (\n    <>\n      <div className='form__wrapper'>\n        <form onSubmit={handleFormSubmit}>\n          <div className='form__title'>新拖延運動報名表單</div>\n          <div className='form__info'>\n            <p>活動日期：2020/12/10 ~ 2020/12/11</p>\n            <p>活動地點：台北市大安區新生南路二段1號</p>\n          </div>\n          <div className='form__notice'>*必填</div>\n          <div className='input-block'>\n            <div className='input-block__title'>暱稱</div>\n            {/* input title */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.title}\n              className='placebar'\n              name='title'\n              placeholder='您的回答'\n              type='text'\n            />\n            {/* input title error */}\n            <div className='input-block__error' value='請輸入暱稱!'>\n              {inputErrorMessage.title && inputErrorMessage.title}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>電子郵件</div>\n            {/* input email */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.email}\n              className='placebar'\n              name='email'\n              placeholder='您的電子郵件'\n              type='text'\n            />\n            {/* input email error */}\n            <div className='input-block__error' value='請輸入電子郵件!'>\n              {inputErrorMessage.email && inputErrorMessage.email}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>手機號碼</div>\n            {/* input phone */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.phone}\n              className='placebar'\n              name='phone'\n              placeholder='您的手機號碼'\n              type='text'\n            />\n            {/* input phone error */}\n            <div className='input-block__error' value='請輸入手機號碼!'>\n              {inputErrorMessage.phone && inputErrorMessage.phone}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>報名類型</div>\n            <div>\n              <label>\n                {/* input option */}\n                <input\n                  onChange={handleInputChange}\n                  type='radio'\n                  name='option'\n                  value='躺在床上用想像力實作'\n                  checked={inputValue.option === '躺在床上用想像力實作'}\n                />\n                躺在床上用想像力實作\n              </label>\n              <label>\n                {/* input option */}\n                <input\n                  onChange={handleInputChange}\n                  type='radio'\n                  name='option'\n                  value='趴在地上滑手機找現成的'\n                  checked={inputValue.option === '趴在地上滑手機找現成的'}\n                />\n                趴在地上滑手機找現成的\n              </label>\n            </div>\n            {/* input option error */}\n            <div className='input-block__error' value='請選擇報名類型!'>\n              {inputErrorMessage.option && inputErrorMessage.option}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>怎麼知道這個活動的？</div>\n            {/* input howToKnow */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.howToKnow}\n              className='placebar'\n              placeholder='您的回答'\n              name='howToKnow'\n              type='text'\n            />\n            {/* input howToKnow error */}\n            <div className='input-block__error answer__check' value='請勿留空!'>\n              {inputErrorMessage.howToKnow && inputErrorMessage.howToKnow}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>其他</div>\n            <div className='input-block__desc'>對活動的一些建議</div>\n            {/* input suggest */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.suggest}\n              className='placebar'\n              placeholder='您的回答'\n              name='suggest'\n              type='text'\n            />\n          </div>\n          <div className='buttons__block'>\n            {/* button save （react 表單內的 button 會自動綁定 submit ，取消需要更改 type） */}\n            <button\n              onClick={handleClickButtonSave}\n              type='button'\n              className='buttons__block-save'\n            >\n              暫存\n            </button>\n            {/* button submit */}\n            <button className='buttons__block-summit'>送出</button>\n          </div>\n          <div className='form__info'>請勿透過表單送出您的密碼。</div>\n        </form>\n      </div>\n      <div className='footer'>© 2020 © Copyright. All rights Reserved.</div>\n    </>\n  );\n}\n\nexport default FormApp;\n","import { useInput } from \"./useInput\";\nimport { getErrorMessage } from \"./utils\";\n\nexport default function useForm() {\n  // 引入已打包好的 hooks\n  const {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    setInputErrorMessage,\n  } = useInput();\n\n  // 暫存按鈕\n  const handleClickButtonSave = () => {\n    localStorage.setItem(\"inputValue\", JSON.stringify(inputValue));\n  };\n\n  // 送出表單前驗證\n  const handleFormSubmit = (e) => {\n    // 取消送出表單動作\n    e.preventDefault();\n    let hasRequiredInputEmpty = false;\n\n    // 先驗證後更新錯誤訊息\n    for (const key in inputValue) {\n      // 空值判斷，排除非必要項目\n      if (inputValue[key] === \"\" && key !== \"suggest\") {\n        hasRequiredInputEmpty = true;\n      }\n      // radio 未勾選判斷\n      if (key === \"options\" && inputValue[key] === \"\") {\n        setInputErrorMessage((inputErrorMessage) => ({\n          ...inputErrorMessage,\n          [key]: getErrorMessage(key, inputValue[key]),\n        }));\n      }\n      // 使用 functional update 確保按順序同步更新\n      setInputErrorMessage((inputErrorMessage) => ({\n        ...inputErrorMessage,\n        [key]: getErrorMessage(key, inputValue[key]),\n      }));\n    }\n\n    // 如 input 的 state 有空值則提前 return （因為前面驗證後的錯誤訊息還在更新中）\n    if (hasRequiredInputEmpty) {\n      alert(\"資料輸入不完全\");\n      return;\n    }\n\n    // 從是否有錯誤訊息判斷是否全數通過驗證\n    for (const key in inputErrorMessage) {\n      if (inputErrorMessage[key] !== \"\") {\n        // eslint-disable-next-line\n        alert(\"資料輸入不完全\");\n        return;\n      }\n    }\n    // 全數通過驗證，顯示輸入資料\n    // eslint-disable-next-line\n    alert(` \n      以下為您所填寫的資料：\n      您的暱稱：${inputValue.title}\n      您的電子郵件：${inputValue.email}\n      您的手機號碼：${inputValue.phone}\n      您的報名類型：${inputValue.option}\n      您怎麼知道這個活動的：${inputValue.howToKnow}\n      其他：${inputValue.suggest}\n    `);\n  };\n\n  //回傳打包好的函式與需要變數\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    handleClickButtonSave,\n    handleFormSubmit,\n  };\n}\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable import/no-unresolved */\nimport { createContext } from 'react';\n\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","export const MEDIA_QUERY_MOBILE_M = '@media screen and (min-width: 375px)';\nexport const MEDIA_QUERY_MOBILE_L = '@media screen and (min-width: 425px)';\nexport const MEDIA_QUERY_TABLET = '@media screen and (min-width: 768px)';\nexport const MEDIA_QUERY_LAPTOP = '@media screen and (min-width: 1024px)';\n","/* eslint-disable import/no-unresolved */\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context';\nimport { setAuthToken } from '../utils';\n\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_MOBILE_L,\n  MEDIA_QUERY_TABLET,\n} from '../../../constants/breakpoint';\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n  background: floralwhite;\n  display: flex;\n  position: sticky;\n  z-index: 1;\n  top: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 10px 20px;\n  ${MEDIA_QUERY_MOBILE_M} {\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    flex-direction: row;\n    padding: 10px;\n  }\n`;\nconst Brand = styled.div`\n  font-weight: bold;\n  margin: 10px auto;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 50px;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    width: 150px;\n    font-size: 24px;\n    margin: auto 10px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    width: 350px;\n    font-size: 40px;\n  }\n`;\nconst NavbarListContainer = styled.div`\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    margin: auto 10px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 24px;\n    flex-direction: column;\n    align-items: center;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    font-size: 18px;\n    flex-direction: row;\n    & + & {\n      margin-top: 0px;\n    }\n  }\n`;\nconst Nav = styled(Link)`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  font-weight: bold;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${props => props.$active\n    && `\n    background: rgba(0, 0, 0, 0.1);\n  `}\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    padding: 5px 10px;\n    width: auto;\n    & + & {\n      margin-top: 0px;\n      margin-left: 6px;\n    }\n  }\n  ${MEDIA_QUERY_TABLET} {\n    font-size: 24px;\n  }\n`;\n\nexport default function Header() {\n  console.log('render header');\n  const { pathname } = useLocation();\n  console.log('pathname', pathname);\n  // 取得當下 user 的狀態(未登入:null, 已登入：帳號資料物件)\n  const { user, setUser } = useContext(AuthContext);\n  console.log('now user is', user);\n\n  const handleLogout = () => {\n    // 登出：清空 Token 並導回首頁\n    setAuthToken('');\n    setUser(false);\n    // 父層 user state 改變，重新 re-render\n    console.log('pathname', pathname);\n  };\n  return (\n    <HeaderContainer>\n      <Brand>My Blog</Brand>\n      <NavbarListContainer>\n        <NavbarList>\n          <Nav $active={pathname === '/BlogApp'} to=\"/BlogApp\">\n            首頁\n          </Nav>\n          <Nav $active={pathname === '/BlogApp/About'} to=\"/BlogApp/About\">\n            關於我\n          </Nav>\n          <Nav\n            $active={pathname.includes('/BlogApp/pagination')}\n            to=\"/BlogApp/pagination/1\"\n          >\n            文章分頁\n          </Nav>\n          {user && (\n            <Nav\n              $active={pathname === '/BlogApp/new-post'}\n              to=\"/BlogApp/new-post\"\n            >\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n        <NavbarList>\n          {/* 初始化會先依據 user 的初始值顯示，等 call API 後才會改變 */}\n          {user === false && (\n            <>\n              <Nav\n                $active={pathname === '/BlogApp/register'}\n                to=\"/BlogApp/register\"\n              >\n                註冊\n              </Nav>\n              <Nav $active={pathname === '/BlogApp/login'} to=\"/BlogApp/login\">\n                登入\n              </Nav>\n            </>\n          )}\n          {user && (\n            <Nav onClick={handleLogout} to=\"/BlogApp\">\n              登出\n            </Nav>\n          )}\n        </NavbarList>\n      </NavbarListContainer>\n    </HeaderContainer>\n  );\n}\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\n\nexport const getPostsByPage = page => fetch(\n  `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`,\n);\n\nexport const getSinglePost = id => fetch(`${BASE_URL}/posts?id=${id}`).then(res => res.json());\n\nexport const register = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const login = (username, password) => fetch(`${BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\nexport const addPost = (data) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(res => res.json());\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../../WebAPI';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\nconst PostContainer = styled.div`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n`;\nconst PostTitle = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/BlogApp/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nfunction HomePage() {\n  console.log('render HomePage');\n  const [posts, setPosts] = useState(null);\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    console.log('useEffect just init to setPosts');\n    getPosts().then(newPosts => setPosts(newPosts));\n  }, []);\n\n  return (\n    <Wrapper>\n      {posts && posts.map(post => <Post key={post.id} post={post} />)}\n    </Wrapper>\n  );\n}\n\nexport default memo(HomePage);\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../context';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  console.log('render loginPage');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  // 取出上層 contextProvider 提供的 context\n  const { setUser } = useContext(AuthContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(username, password).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      // 登入成功將回傳的 token 儲存在 localStorage\n      setAuthToken(res.token);\n      // 取得該使用者資料\n      getMe().then((resp) => {\n        if (resp.ok !== 1) {\n          // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken(null);\n          return setErrorMessage(resp.message);\n        }\n        // 查詢資料成功，將回傳的帳號資料(物件)存入 user\n        setUser(resp.data);\n        return history.push('/BlogApp');\n      });\n      return true;\n    });\n  };\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n          登入\n        </Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { getMe, register } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../context';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function RegisterPage() {\n  console.log('render RegisterPage');\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  // 取出上層 contextProvider 提供的 context\n  const { setUser } = useContext(AuthContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    register(nickname, username, password).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      // 註冊成功將回傳的 token 儲存在 localStorage\n      setAuthToken(res.token);\n      // 取得該使用者資料\n      getMe().then((resp) => {\n        if (resp.ok !== 1) {\n          // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken(null);\n          return setErrorMessage(resp.message);\n        }\n        // 查詢資料成功，將回傳的帳號資料(物件)存入 user\n        setUser(resp.data);\n        return history.push('/BlogApp');\n      });\n      return true;\n    });\n  };\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicNickname\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Nickname\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"nickname\"\n              placeholder=\"Enter nickname\"\n              value={nickname}\n              onChange={e => setNickname(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n          註冊\n        </Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { getSinglePost } from '../../WebAPI';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostContainer = styled.div`\n  padding: 16px;\n`;\nconst PostTitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  text-align: end;\n`;\nconst PostBody = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nfunction Post({ post }) {\n  console.log('render post');\n  return (\n    <PostContainer>\n      <PostTitle>{post[0].title}</PostTitle>\n      <PostDate>{new Date(post[0].createdAt).toLocaleString()}</PostDate>\n      <PostBody>{post[0].body}</PostBody>\n    </PostContainer>\n  );\n}\n\nexport default function SinglePost() {\n  console.log('render single post');\n  // 取得在 Route 中設定的 URL 參數\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    getSinglePost(id).then(newPosts => setPost(newPosts));\n  }, []);\n  return <Wrapper>{post && <Post post={post} />}</Wrapper>;\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { addPost } from '../../WebAPI';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostForm = styled.form``;\nconst PostTitle = styled.input`\n  padding: 8px;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 50%;\n`;\nconst PostBody = styled.textarea`\n  padding: 8px;\n  font-size: 16px;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 100%;\n  resize: none;\n`;\nconst PostErrorMessage = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: 1rem;\n`;\n\nexport default function AddPost() {\n  const [titleValue, setTitleValue] = useState('');\n  const [bodyValue, setBodyValue] = useState('');\n  const [postError, setPostError] = useState(null);\n\n  const history = useHistory();\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      title: titleValue,\n      body: bodyValue,\n    };\n    addPost(data).then((res) => {\n      if (res.ok === 0) {\n        return setPostError(res.message);\n      }\n      return history.push('/BlogApp');\n    });\n  };\n\n  return (\n    <Wrapper>\n      <PostForm onSubmit={handleFormSubmit}>\n        <div>\n          <div>文章標題：</div>\n          <PostTitle\n            value={titleValue}\n            onChange={(e) => {\n              setTitleValue(e.target.value);\n            }}\n            onFocus={() => {\n              setPostError(null);\n            }}\n          />\n        </div>\n        <div>\n          <div>文章內容：</div>\n          <PostBody\n            rows={6}\n            value={bodyValue}\n            onChange={(e) => {\n              setBodyValue(e.target.value);\n            }}\n            onFocus={() => {\n              setPostError(null);\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n            送出\n          </Button>\n        </div>\n        {postError && (\n          <PostErrorMessage>\n            新增文章失敗：\n            {' '}\n            {postError}\n          </PostErrorMessage>\n        )}\n      </PostForm>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\n\nconst AboutContainer = styled.div`\n  padding: 16px;\n`;\nconst Aboutitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nconst AbouContent = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Wrapper>\n      <AboutContainer>\n        <Aboutitle>關於我</Aboutitle>\n        <AbouContent>\n          漢皇重色思傾國，御宇多年求不得。 楊家有女初長成，養在深閨人未識。\n          天生麗質難自棄，一朝選在君王側。 回眸一笑百媚生，六宮粉黛無顏色。\n          春寒賜浴華清池，溫泉水滑洗凝脂。 侍兒扶起嬌無力，始是新承恩澤時。\n          雲鬢花顏金步搖，芙蓉帳暖度春宵。 春宵苦短日高起，從此君王不早朝。\n          承歡侍宴無閒暇，春從春遊夜專夜。 後宮佳麗三千人，三千寵愛在一身。\n          金屋妝成嬌侍夜，玉樓宴罷醉和春。 姊妹弟兄皆列土，可憐光彩生門戶。\n          遂令天下父母心，不重生男重生女。 驪宮高處入青雲，仙樂風飄處處聞。\n          緩歌慢舞凝絲竹，盡日君王看不足。 漁陽鼙鼓動地來，驚破霓裳羽衣曲。\n          九重城闕煙塵生，千乘萬騎西南行。 翠華搖搖行復止，西出都門百餘里。\n          六軍不發無奈何，宛轉蛾眉馬前死。 花鈿委地無人收，翠翹金雀玉搔頭。\n          君王掩面救不得，回看血淚相和流。 黃埃散漫風蕭索，雲棧縈紆登劍閣。\n          峨嵋山下少人行，旌旗無光日色薄。 蜀江水碧蜀山青，聖主朝朝暮暮情。\n          行宮見月傷心色，夜雨聞鈴腸斷聲。 天旋日轉迴龍馭，到此躊躇不能去。\n          馬嵬坡下泥土中，不見玉顏空死處。 君臣相顧盡沾衣，東望都門信馬歸。\n          歸來池苑皆依舊，太液芙蓉未央柳。 芙蓉如面柳如眉，對此如何不淚垂。\n          春風桃李花開日，秋雨梧桐葉落時。 西宮南內多秋草，落葉滿階紅不掃。\n          梨園子弟白髮新，椒房阿監青娥老。 夕殿螢飛思悄然，孤燈挑盡未成眠。\n          遲遲鐘鼓初長夜，耿耿星河欲曙天。 鴛鴦瓦冷霜華重，翡翠衾寒誰與共。\n          悠悠生死別經年，魂魄不曾來入夢。 臨邛道士鴻都客，能以精誠致魂魄。\n          為感君王輾轉思，遂教方士殷勤覓。 排空馭氣奔如電，升天入地求之遍。\n          上窮碧落下黃泉，兩處茫茫皆不見。 忽聞海上有仙山，山在虛無縹緲間。\n          樓閣玲瓏五雲起，其中綽約多仙子。 中有一人字太真，雪膚花貌參差是。\n          金闕西廂叩玉扃，轉教小玉報雙成。 聞道漢家天子使，九華帳裏夢魂驚。\n          攬衣推枕起徘徊，珠箔銀屏迤邐開。 雲髻半偏新睡覺，花冠不整下堂來。\n          風吹仙袂飄颻舉，猶似霓裳羽衣舞。 玉容寂寞淚闌干，梨花一枝春帶雨。\n          含情凝睇謝君王，一別音容兩渺茫。 昭陽殿裏恩愛絕，蓬萊宮中日月長。\n          回頭下望人寰處，不見長安見塵霧。 唯將舊物表深情，鈿合金釵寄將去。\n          釵留一股合一扇，釵擘黃金合分鈿。 但教心似金鈿堅，天上人間會相見。\n          臨別殷勤重寄詞，詞中有誓兩心知。 七月七日長生殿，夜半無人私語時。\n          在天願作比翼鳥，在地願為連理枝。 天長地久有時盡，此恨綿綿無絕期。\n        </AbouContent>\n      </AboutContainer>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { Link, useParams } from 'react-router-dom';\nimport { Pagination } from 'react-bootstrap';\nimport { getPostsByPage } from '../../WebAPI';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\nconst PostContainer = styled.div`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n`;\nconst PostTitle = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction PaginationWrapper({ postsCount, currentPage }) {\n  const postsPerPage = 5;\n  const totalPage = Math.ceil(postsCount / postsPerPage);\n  console.log('totalPage: ', totalPage);\n  const items = [];\n  for (let number = 1; number <= totalPage; number += 1) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === Number(currentPage)}\n        href={`#/BlogApp/pagination/${number}`}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <Pagination className=\"d-flex justify-content-center\" size=\"lg\">\n      {items}\n    </Pagination>\n  );\n}\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/BlogApp/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nfunction PaginationPage() {\n  const { page } = useParams();\n  const [posts, setPosts] = useState(null);\n  const [postsCount, setPostsCount] = useState(null);\n\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    console.log('useEffect just init to setPosts');\n    getPostsByPage(page)\n      .then((res) => {\n        // 從 response 的 header 拿到目前所有文章數量\n        const count = Number(res.headers.get('x-total-count'));\n        setPostsCount(count);\n        return res.json();\n      })\n      .then(newPosts => setPosts(newPosts));\n  }, [page]);\n\n  return (\n    <Wrapper>\n      {postsCount > 0\n        && posts\n        && posts.map(post => <Post key={post.id} post={post} />)}\n      {/* 當非同步的 fetch 回來後 postsCount 的狀態從原本的 null 被更新，此時才會開始 render PaginationWrapper */}\n      {postsCount > 0 && (\n        <PaginationWrapper postsCount={postsCount} currentPage={page} />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default memo(PaginationPage);\n","/* eslint-disable import/no-unresolved */\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport HomePage from './Pages/HomePage';\nimport LoginPage from './Pages/LoginPage';\nimport RegisterPage from './Pages/RegisterPage';\nimport SinglePost from './Pages/SinglePost';\nimport AddPost from './Pages/AddPost';\nimport AboutPage from './Pages/AboutPage';\nimport PaginationPage from './Pages/PaginationPage';\nimport { AuthContext } from './context';\nimport { getMe } from './WebAPI';\nimport { setAuthToken, getAuthToken } from './utils';\n\nfunction BlogApp() {\n  console.log('render BlogApp');\n  // 登入狀態\n\n  // user 預設值會先被 render 出來\n  const [user, setUser] = useState(null);\n\n  // 每次 mount 時先確認登入狀態，檢查 local storage 內有無 token，有的話再以 getMe 確認身分\n  useEffect(() => {\n    console.log('useEffect in first render');\n    // 沒 token 直接 return\n    if (!getAuthToken()) {\n      setUser(false);\n      return;\n    }\n    getMe().then((res) => {\n      if (res.ok !== 1) {\n        console.log('no ok');\n        // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n        setAuthToken('');\n        setUser(false);\n        return;\n        // return setErrorMessage(res.message);\n      }\n      console.log('ok');\n      setUser(res.data);\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Router>\n        <Header>header</Header>\n        <Switch>\n          <Route exact path=\"/BlogApp\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/BlogApp/about\">\n            <AboutPage />\n          </Route>\n          <Route exact path=\"/BlogApp/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/BlogApp/register\">\n            <RegisterPage />\n          </Route>\n          <Route exact path=\"/BlogApp/pagination/:page\">\n            <PaginationPage />\n          </Route>\n          <Route exact path=\"/BlogApp/posts/:id\">\n            <SinglePost />\n          </Route>\n          <Route exact path=\"/BlogApp/new-post\">\n            <AddPost />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default BlogApp;\n","/* eslint-disable import/no-unresolved */\n// 引入 bootstrap 的 CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n// 引入主題(可設定類似 mixin 的全域變數供使用\n//  import { ThemeProvider } from \"styled-components\";\nimport BoardApp from './components/Board/App'\n// week21\nimport TodosApp from \"./components/Todos/App\";\nimport GobangApp from \"./components/Gobang/App\";\nimport FormApp from \"./components/Form/App\";\n// week22\nimport BlogApp from './components/Blog/App';\n\n// <React.StrictMode> 嚴格模式可能會造成偵錯問題，可先取消\nReactDOM.render(\n  <Router>\n    <Switch>\n      {/* blog 下層會再使用 router ，此層不可設為 exact，因會由上往下逐層篩選 */}\n      <Route exact path=\"/BoardApp\">\n        <BlogApp />\n      </Route>\n      <Route exact path=\"/TodosApp\">\n        <TodosApp />\n      </Route>\n      <Route exact path=\"/GobangApp\">\n        <GobangApp />\n      </Route>\n      <Route exact path=\"/FormApp\">\n        <FormApp />\n      </Route>\n      <Route path=\"/BlogApp\">\n        <BlogApp />\n      </Route>\n    </Switch>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}