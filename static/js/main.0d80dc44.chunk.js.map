{"version":3,"sources":["components/Board/App.js","components/Todos/TodoItem.js","components/Todos/InfoAndFilterBar.js","components/Todos/useTodos.js","components/Todos/useInput.js","components/Todos/App.js","components/Gobang/setting.js","components/Gobang/Board.js","components/Gobang/HistoryBar.js","components/Gobang/utils.js","components/Gobang/useGobang.js","components/Gobang/App.js","components/Form/utils.js","components/Form/useInput.js","components/Form/App.js","components/Form/useForm.js","components/Blog/context.js","components/Blog/utils.js","constants/breakpoint.js","components/Blog/Header/Header.js","components/Blog/WebAPI.js","components/Blog/Pages/HomePage/HomePage.js","components/Blog/Pages/LoginPage/LoginPage.js","components/Blog/Pages/RegisterPage/RegisterPage.js","components/Blog/Pages/SinglePost/SinglePost.js","components/Blog/Pages/AddPost/AddPost.js","components/Blog/Pages/AboutPage/AboutPage.js","components/Blog/Pages/PaginationPage/PaginationPage.js","components/Blog/App.js","components/Todos-redux/components/AddTodo.js","components/Todos-redux/components/TodoItem.js","components/Todos-redux/components/FilterBar.js","components/Todos-redux/redux/selectors.js","components/Todos-redux/redux/actionTypes.js","components/Todos-redux/redux/actions.js","components/Todos-redux/useTodos.js","components/Todos-redux/App.js","components/Todos-redux/redux/reducers/todos.js","components/Todos-redux/redux/reducers/filter.js","components/Todos-redux/redux/reducers/updatingTodo.js","components/Todos-redux/redux/reducers/index.js","components/Todos-redux/redux/store.js","components/Blog-redux/utils.js","components/Blog-redux/WebAPI.js","components/Blog-redux/redux/reducers/errorMessageReducer.js","components/Blog-redux/redux/reducers/userReducer.js","components/Blog-redux/components/Header/Header.js","components/Blog-redux/redux/reducers/postReducer.js","components/Blog-redux/components/templates/Wrapper.js","components/Blog-redux/components/templates/Post.js","components/Blog-redux/components/Loaders/LoopCircleLoading.js","components/Blog-redux/components/Pages/HomePage/HomePage.js","components/Blog-redux/components/Pages/LoginPage/LoginPage.js","components/Blog-redux/components/Pages/RegisterPage/RegisterPage.js","components/Blog-redux/hooks/usePrevious.js","components/Blog-redux/components/Pages/SinglePostPage/SinglePostPage.js","components/Blog-redux/components/Pages/AddPostPage/AddPostPage.js","components/Blog-redux/components/Pages/AboutPage/AboutPage.js","components/Blog-redux/components/templates/PaginationWrapper.js","components/Blog-redux/components/Pages/PaginationPage/PaginationPage.js","components/Blog-redux/components/Pages/UpdatePostPage/UpdatePostPage.js","components/Blog-redux/App.js","components/Blog-redux/redux/store.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","console","log","useState","messages","setMessages","apiMessageError","setMessageApiError","textareaValue","setTextareaValue","postMessageError","setPostMessageError","isLoadingPostMessage","setLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","rows","value","onChange","target","onFocus","toString","length","map","Date","createdAt","toLocaleString","id","TodoItemWrapper","TodoContent","props","$isDone","TodoContentEditing","input","TodoButtonWrapper","TodoItem","className","todo","handleDeleteTodo","handleToggleIsDone","updatingTodo","setUpdatingTodo","handleUpdateClick","updateValue","handleUpdateChange","editingInput","data-todo-id","Number","isDone","onDoubleClick","onBlur","ref","content","Button","onClick","variant","InfoAndFilterBar","memo","todos","todosFilter","setTodosFilter","handleClearDoneTodos","countResult","useMemo","count","forEach","useTodos","setValue","handleInputChange","useInput","useRef","todoData","window","localStorage","getItem","parse","current","setTodos","setUpdateValue","setItem","writeTodosToLocalStorage","focus","handleButtonAddTodo","useCallback","filter","innerText","getAttribute","TodoContainer","TodosApp","Container","InputGroup","FormControl","placeholder","Append","size","initialBoard","Array","fill","stoneRows","from","stoneColumns","squareRows","squareColumns","Stone","handleClickPlacing","X","Y","stone","color","style","background","boxShadow","MemoSquaresBackgroundWrapper","el","index_X","EL","index_Y","Board","board","HistoryBar","history","setHistory","setBoard","nowStep","PaginationCounters","Pagination","Item","Prev","prevBoard","handleClickPrev","item","index","step","handleClickStep","active","countTotal","currentX","currentY","directionX","directionY","now","tempX","tempY","total","useGobang","isGameOver","setIsGameOver","blackIsNext","setBlackIsNext","lastStone","useLayoutEffect","result","calculateWinner","newBoard","newHistory","slice","push","GobangApp","getErrorMessage","inputName","inputValue","test","name","title","email","phone","option","howToKnow","suggest","loadFromLocalStorage","setInputValue","inputErrorMessage","setInputErrorMessage","key","FormApp","handleClickButtonSave","handleFormSubmit","hasRequiredInputEmpty","alert","useForm","type","checked","AuthContext","createContext","TOKEN_NAME","setAuthToken","token","getAuthToken","MEDIA_QUERY_MOBILE_M","MEDIA_QUERY_MOBILE_L","MEDIA_QUERY_TABLET","HeaderContainer","Brand","NavbarListContainer","NavbarList","Nav","Link","$active","Header","pathname","useLocation","useContext","user","setUser","to","includes","BASE_URL","getMe","authorization","Wrapper","PostContainer","PostTitle","PostDate","Post","post","HomePage","posts","setPosts","newPosts","LoginPage","setLoggedIn","username","setUsername","password","setPassword","errorMessage","setErrorMessage","useHistory","handleInputFocus","Form","login","resp","Group","controlId","as","Row","Label","column","sm","Col","Control","RegisterPage","setNickname","register","PostBody","SinglePost","useParams","setPost","getSinglePost","PostForm","PostErrorMessage","AddPost","titleValue","setTitleValue","bodyValue","setBodyValue","postError","setPostError","addPost","AboutContainer","Aboutitle","AbouContent","AboutPage","PaginationWrapper","postsCount","currentPage","totalPage","Math","ceil","items","number","href","PaginationPage","page","setPostsCount","getPostsByPage","get","BlogApp","loggedIn","Provider","exact","path","AddTodo","handleAddTodo","handleSetFilter","handleUpdateTodo","handleUpdateDone","FilterBar","countUndone","selectTodos","store","todoState","selectFilter","filterState","selectUpdatingTodo","updatingTodoState","ADD_TODO","DELETE_TODO","TOGGLE_TODO","CLEAR_DONE_TODO","SET_FILTER","SET_UPDATING_TODO","UPDATE_TODO","payload","useSelector","dispatch","useDispatch","setFilter","deleteTodo","toggleTodo","updateTodo","TodosRedux","todoId","initialState","combineReducers","state","action","createStore","__REDUX_DEVTOOLS_EXTENSION__","getMeAPI","errorMessageSlice","createSlice","reducers","actions","selectErrorMessage","error","userSlice","userData","isLogging","isRegistering","isGettingUserData","setUserData","setIsLogging","setIsRegistering","setIsGettingUserData","loginAPI","resJson","registerAPI","selectUserData","selectIsGettingUserData","selectIsLogging","selectIsRegistering","NavBarContainer","WelcomeMessage","listen","Alert","postSlice","isGettingPost","singlePostData","allPostData","byPagePostData","totalPostsCount","isAddingPost","addPostResponse","isDeletingPost","isUpdatingPost","updatePostResponse","setIsGettingPost","setSinglePostData","setAllPostData","setByPagePostData","setTotalPostsCount","setIsAddingPost","setAddPostResponse","setIsDeletingPost","setIsUpdatingPost","setUpdatePostResponse","getPost","params","addPostAPI","deletePost","deletePostAPI","updatePost","updatePostAPI","selectAddPostResponse","selectIsGettingPost","selectIsAddingPost","selectIsDeletingPost","selectAllPostData","selectByPagePostData","selectSinglePostData","selectTotalPostCount","selectIsUpdatingPost","selectUpdatePostResponse","LoadingBackground","PostLoadingBackground","usePrevious","ButtonWrapper","DeleteModal","showDeleteModal","handleCloseDeleteModal","handleDeletePost","Modal","show","onHide","closeButton","Body","Footer","handleShowDeleteModal","userId","prevIsDeletingPost","setShowDeleteModal","AddPostErrorMessage","prevIsAddingPost","prevIsUpdatingPost","BlogAppRedux","configureStore","reducer","userReducer","postReducer","errorMessageReducer","ReactDOM","render","activeStyle","fontWeight","TodoStore","blogStore","document","getElementById"],"mappings":"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","file":"static/js/main.0d80dc44.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n  & + & {\n    margin-top: 16px;\n  }\n`;\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 6px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78 , 55, 0.3)\n  font-size: 14px;\n`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  font-size: 16px;\n  margin-top: 16px;\n`;\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: darkslategrey;\n`\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  console.log('render app')\n  const [messages, setMessages] = useState(null);\n  const [apiMessageError, setMessageApiError] = useState(null);\n  const [textareaValue, setTextareaValue] = useState();\n  const [postMessageError, setPostMessageError] = useState(null);\n  // 避免多次送出留言，設定間隔\n  const [isLoadingPostMessage, setLoadingPostMessage] = useState(false)\n\n  const fetchMessages = () => {\n    console.log('start fetch!')\n    return (\n      fetch(API_ENDPOINT)\n        // 轉為 json 格式\n        .then((res) => res.json())\n        .then((data) => {\n          setMessages(data);\n        })\n        .catch((err) => {\n          setMessageApiError(err.message);\n        })\n    );\n  };\n\n  const handleTextareaChange = (e) => {\n    setTextareaValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null)\n  }\n\n  const handleFormSubmit = (e) => {\n    // 先阻止表單發送行為\n    e.preventDefault();\n    // 如果還在送出的冷卻時間內就取消\n    if (isLoadingPostMessage) {\n      return\n    }\n    // 正要發送，進入冷卻\n    setLoadingPostMessage(true)\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"hello\",\n        body: textareaValue,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        // 收到回傳結果，重置送出留言的冷卻\n        setLoadingPostMessage(false)\n        // 針對後端回覆錯誤處理\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        // 成功新增留言，清空輸入框\n        setTextareaValue('')\n        fetchMessages();\n      })\n      // 捕捉 fetch 失敗的錯誤\n      .catch((err) => {\n        setLoadingPostMessage(false)\n        setPostMessageError(err.message);\n      });\n  };\n  // 在 render 結束後 call API，並且第二個參數傳空值表示只在此 component mount 時執行\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          rows={10}\n          value={textareaValue}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>\n            新增留言失敗: {postMessageError}\n          </ErrorMessage>\n        )}\n      </MessageForm>\n      {apiMessageError && (\n        <ErrorMessage>\n          Something went wrong: {apiMessageError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Message yet!</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nconst TodoContent = styled.div`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoContentEditing = styled.input`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  outline: 1px solid grey;\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\nconst TodoButtonWrapper = styled.div``;\n\n// 合併包成完整的 component，設定參數傳入位置\nconst TodoItem = ({\n  className,\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  updatingTodo,\n  setUpdatingTodo,\n  handleUpdateClick,\n  updateValue,\n  handleUpdateChange,\n  editingInput\n}) => {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper className={className} data-todo-id={todo.id}>\n      {/* 更新觸發時，比對更新的 ID 與該 todo 的 ID，相符則 render 輸入框，不相符則 render div */}\n      {updatingTodo && Number(updatingTodo.id) === todo.id ? (\n        <TodoContentEditing\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n          value={updateValue}\n          onChange={handleUpdateChange}\n          onBlur={() => {\n            setUpdatingTodo(false);\n          }}\n          ref={editingInput}\n        ></TodoContentEditing>\n      ) : (\n        <TodoContent\n          $isDone={todo.isDone}\n          onDoubleClick={handleUpdateClick}\n          data-todo-id={todo.id}\n        >\n          {todo.content}\n        </TodoContent>\n      )}\n\n      <TodoButtonWrapper>\n        <Button\n          onClick={handleToggleClick}\n          variant={todo.isDone ? \"secondary\" : \"success\"}\n        >\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </Button>{\" \"}\n        <Button variant=\"danger\" onClick={handleDeleteClick}>\n          刪除\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n};\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  className: PropTypes.string,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  updatingTodo: PropTypes.bool,\n  setUpdatingTodo: PropTypes.func,\n  handleUpdateClick: PropTypes.func,\n  updateValue: PropTypes.string,\n  handleUpdateChange: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport React, {\n  memo,\n  useMemo,\n} from \"react\";\n\nconst InfoAndFilterBar = memo(({\n  todos,\n  todosFilter,\n  setTodosFilter,\n  handleClearDoneTodos,\n}) => {\n  // 未完成數量：只在 todos 有變化時才計算\n  const countResult = useMemo(() => {\n    console.log('calculating!')\n    let count = 0;\n    todos.forEach((todo) => {\n      if (!todo.isDone) {\n        count = count + 1;\n      }\n    });\n    return count;\n  }, [todos])\n\n  return (\n    <>\n      {/* 資訊及篩選列 */}\n      <div className=\"d-flex justify-content-between my-3 px-3\">\n        <h3>\n          <span>{countResult}</span> 個未完成\n        </h3>\n        <div className=\"options\">\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(null);\n            }}\n            className={todosFilter === null && \"active\"}\n          >\n            All\n          </Button>{\" \"}\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(\"active\");\n            }}\n            className={todosFilter === \"active\" && \"active\"}\n          >\n            Active\n          </Button>{\" \"}\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              setTodosFilter(\"completed\");\n            }}\n            className={todosFilter === \"completed\" && \"active\"}\n          >\n            Completed\n          </Button>{\" \"}\n        </div>\n        <Button variant=\"warning\" onClick={handleClearDoneTodos}>\n          Clear completed\n        </Button>\n      </div>\n    </>\n  );\n});\n\nexport default InfoAndFilterBar;\n\nInfoAndFilterBar.propTypes = {\n  todos: PropTypes.array,\n  todosFilter: PropTypes.string,\n  setTodosFilter: PropTypes.func,\n  handleClearDoneTodos: PropTypes.func\n}","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport useInput from \"./useInput\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\n    \"todos\",\n    todos.length === 0 ? [] : JSON.stringify(todos)\n  );\n}\n\nexport default function useTodos() {\n  // 引入已打包好的 hooks\n  const { value, setValue, handleInputChange } = useInput();\n\n  // ID 與畫面無關不需放入 state 以減少 render 次數，可宣告於外層或以 useRef 方式儲存(改變時不會 rerender)\n  const id = useRef(1);\n\n  // 只有初始化時要取出資料，但後續 render 時都還是會執行造成效能浪費，改為傳入函式就只會執行一次\n  const [todos, setTodos] = useState(() => {\n    console.log(\"todos init\");\n    let todoData = window.localStorage.getItem(\"todos\"); //初始空值錯誤處理(null)\n    if (todoData) {\n      todoData = JSON.parse(todoData);\n      // 已有資料時 id 接續原 local 內最後一筆資料嚴格遞增\n      id.current = todoData[0].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  console.log(todos)\n  const [todosFilter, setTodosFilter] = useState(null);\n  const [updatingTodo, setUpdatingTodo] = useState(null);\n  const [updateValue, setUpdateValue] = useState(null);\n  const editingInput = useRef(null);\n\n  // useEffect 第一個參數為函式，當第二個參數關注目標改變時才會執行(傳入[]時因不會改變故只在第一次 render 後執行，如 call API)\n\n  // 關注 todos，改變時就執行函式(含初始化)\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n    console.log(\"useEffect: todos\", JSON.stringify(todos));\n    // (return clean up function)\n  }, [todos]);\n\n  // 關注 updatingTodo，改變時就執行函式(含初始化)\n  useEffect(() => {\n    // 將輸入游標移到該 DOM 元素\n    if (updatingTodo) {\n      editingInput.current.focus();\n    }\n  }, [updatingTodo]);\n\n  const handleButtonAddTodo = useCallback(() => {\n    setTodos([\n      {\n        // 讀取 useRef 時以 current 取得\n        id: id.current,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    // 改變 useRef 時一樣以 current 進行操作\n    id.current++;\n  }, [setValue, todos, value]);\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        // 不符合 ID 的保留\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          // 符合 ID 的變換狀態\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n  const handleUpdateClick = (e) => {\n    setUpdateValue(e.target.innerText);\n    setUpdatingTodo({\n      id: e.target.getAttribute(\"data-todo-id\"),\n    });\n  };\n\n  const handleUpdateChange = (e) => {\n    setUpdateValue(e.target.value);\n    setTodos(\n      todos.map((todo) => {\n        // 不符合指定刪除 ID 的保留\n        if (todo.id !== Number(e.target.getAttribute(\"data-todo-id\")))\n          return todo;\n        return {\n          ...todo,\n          content: e.target.value,\n        };\n      })\n    );\n  };\n\n  const handleClearDoneTodos = useCallback(() => {\n    // 未完成的才保留\n    setTodos(todos.filter((todo) => !todo.isDone));\n  }, [todos]);\n\n  //回傳打包好的函式與需要變數\n  return {\n    todos,\n    setTodos,\n    id,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n    editingInput\n  };\n}\n","import { useState } from 'react';\n\nexport default function useInput() {\n  // 初始化輸入框的值\n  const [value, setValue] = useState('');\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n  //回傳打包好的工具\n  return {\n    value,\n    setValue,\n    handleInputChange,\n  };\n}\n","import \"./App.css\";\nimport React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport TodoItem from \"./TodoItem\";\nimport InfoAndFilterBar from \"./InfoAndFilterBar\";\nimport useTodos from \"./useTodos\";\n\nconst TodoContainer = styled.div`\n  border-radius: 8px;\n  padding: 16px;\n  background: white;\n`;\nconst Title = memo(styled.div`\n  color: orange;\n  text-align: center;\n  font-size: 60px;\n  font-weight: bold;\n  padding: 20px;\n  margin-bottom: 10px;\n`);\n\nfunction TodosApp() {\n  // 引入已打包好的 hooks\n  const {\n    todos,\n    handleButtonAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateClick,\n    updatingTodo,\n    setUpdatingTodo,\n    updateValue,\n    handleUpdateChange,\n    value,\n    handleInputChange,\n    todosFilter,\n    setTodosFilter,\n    handleClearDoneTodos,\n    editingInput\n  } = useTodos();\n  console.log('todos',todos)\n  return (\n    <Container className=\"my-5\">\n      <TodoContainer>\n        <Title>Todo List</Title>\n        {/* 輸入列 */}\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"請輸入待辦事項\"\n            value={value}\n            onChange={handleInputChange}\n          />\n          <InputGroup.Append>\n            <Button onClick={handleButtonAddTodo}>送出</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {/* 資訊及篩選列 */}\n        <InfoAndFilterBar\n          todos={todos}\n          todosFilter={todosFilter}\n          setTodosFilter={setTodosFilter}\n          handleClearDoneTodos={handleClearDoneTodos}\n        />\n        {/* Todos */}\n        {todos.map((todo) => {\n          if (todosFilter === \"active\" && todo.isDone) {\n            return \"\";\n          }\n          if (todosFilter === \"completed\" && !todo.isDone) {\n            return \"\";\n          }\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleToggleIsDone={handleToggleIsDone}\n              handleUpdateClick={handleUpdateClick}\n              updatingTodo={updatingTodo}\n              setUpdatingTodo={setUpdatingTodo}\n              updateValue={updateValue}\n              handleUpdateChange={handleUpdateChange}\n              editingInput={editingInput}\n            />\n          );\n        })}\n      </TodoContainer>\n    </Container>\n  );\n}\n\nexport default TodosApp;\n","const size = 19;\nconst minNumberForWin = 5;\nconst initialBoard = Array(size).fill(Array(size).fill(null));\n\nexport {size, minNumberForWin, initialBoard}","import { memo } from \"react\";\nimport { size } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\nconst stoneRows = Array.from({ length: size });\nconst stoneColumns = Array.from({ length: size });\nconst squareRows = Array.from({ length: size - 1 });\nconst squareColumns = Array.from({ length: size - 1 });\n\nconst Stone = ({ handleClickPlacing, X, Y, stone }) => {\n  let color = \"\";\n  if (stone) {\n    color =\n      stone === \"B\"\n        ? \"radial-gradient(5px 5px at 5px 5px,#fff,#333)\"\n        : \"radial-gradient(5px 5px at 5px 5px,#fff,#e2e2e2)\";\n  }\n  return (\n    <div\n      className=\"stone\"\n      onClick={() => {\n        handleClickPlacing(X, Y);\n      }}\n      style={{\n        background: color,\n        boxShadow: stone !== null ? \"2px 2px 4px rgba(0,0,0,0.3)\" : \"\",\n      }}\n    ></div>\n  );\n};\n\n// 背景不需 re-render\nconst MemoSquaresBackgroundWrapper = memo(() => {\n  return (\n    <div className=\"squares-background-wrapper\">\n      {squareColumns.map((el, index_X) => (\n        <div key={index_X} className=\"squares-columns\">\n          {squareRows.map((EL, index_Y) => (\n            <div key={index_Y} className=\"square-background\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nconst Board = ({ handleClickPlacing, board }) => {\n  return (\n    <div className=\"stones-wrapper\">\n      {stoneColumns.map((EL, index_X) => (\n        <div key={index_X} className=\"stone-columns\">\n          {stoneRows.map((el, index_Y) => {\n            return (\n              <Stone\n                key={index_Y}\n                X={index_X}\n                Y={index_Y}\n                handleClickPlacing={handleClickPlacing}\n                stone={board[index_Y][index_X]}\n              />\n            );\n          })}\n        </div>\n      ))}\n      <MemoSquaresBackgroundWrapper />\n    </div>\n  );\n};\n\nexport default Board;\n\nStone.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  X: PropTypes.number,\n  Y: PropTypes.number,\n  stone: PropTypes.string,\n};\n\nBoard.propTypes = {\n  handleClickPlacing: PropTypes.func,\n  board: PropTypes.array,\n};\n","import { Pagination } from \"react-bootstrap\";\nimport { initialBoard } from \"./setting\";\nimport PropTypes from \"prop-types\";\n\n// 合併包成完整的 component，設定參數傳入位置\nconst HistoryBar = ({ history, setHistory, setBoard, nowStep }) => {\n  const handleRestartClick = () => {\n    setHistory([initialBoard]);\n  };\n\n  const handleClickPrev = () => {\n    nowStep.current--;\n    const prevBoard = history[nowStep.current];\n    setBoard(prevBoard);\n  };\n  const handleClickStep = (step) => {\n    nowStep.current = step;\n    const prevBoard = history[step];\n    setBoard(prevBoard);\n  };\n  const PaginationCounters = Array.from({ length: history.length - 1 });\n  return (\n    <Pagination>\n      <Pagination.Item\n        onClick={() => {\n          handleRestartClick();\n        }}\n      >\n        Restart\n      </Pagination.Item>\n\n      {nowStep.current > 0 && (\n        <Pagination.Prev\n          onClick={() => {\n            handleClickPrev();\n          }}\n        />\n      )}\n\n      {nowStep.current > 0 &&\n        PaginationCounters.map((item, index) => (\n          <Pagination.Item\n            key={index}\n            onClick={() => {\n              handleClickStep(index + 1);\n            }}\n            active={index + 1 === nowStep.current ? \"true\" : null}\n          >\n            {index + 1}\n          </Pagination.Item>\n        ))}\n    </Pagination>\n  );\n};\n\nexport default HistoryBar;\nHistoryBar.propTypes = {\n  history: PropTypes.array,\n  setHistory: PropTypes.func,\n  setBoard: PropTypes.func,\n  nowStep: PropTypes.object,\n};","function countTotal(currentX, currentY, directionX, directionY, board) {\n  // 起點的棋子顏色 = 檢查的顏色\n  const now = board[currentY][currentX];\n  let tempX = currentX;\n  let tempY = currentY;\n  let total = 0;\n  do {\n    // 依照方向檢查下個棋子\n    tempX += directionX;\n    tempY += directionY;\n    // 如果下個棋子等於檢查的顏色\n    if (tempX <= 18 && tempX >= 0 && tempY >= 0 && tempY <= 18 ) {\n      if (board[tempY][tempX] === now) {\n        console.log(\"tempY\", tempY)\n        console.log(\"tempX\", tempX)\n        console.log(board[tempY][tempX])\n        // 連續的棋子數 + 1\n        total++;\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  } while (total < 5); // 至少找到四顆為止，加上起點本身就達成五顆連線\n  return total;\n}\n\nexport function calculateWinner(lastStone, board) {\n  const { X, Y } = lastStone;\n  const now = board[Y][X];\n  if (\n    countTotal(X, Y, 1, 0, board) + countTotal(X, Y, -1, 0, board) >= 4 ||\n    countTotal(X, Y, 0, 1, board) + countTotal(X, Y, 0, -1, board) >= 4 ||\n    countTotal(X, Y, 1, 1, board) + countTotal(X, Y, -1, -1, board) >= 4 ||\n    countTotal(X, Y, 1, -1, board) + countTotal(X, Y, -1, 1, board) >= 4\n  ) {\n    return now;\n  }\n  // 都沒找到就回傳 null\n  return null;\n}\n","import { useState, useLayoutEffect, useRef } from \"react\";\n// 引入相關函式及參數\nimport { calculateWinner } from \"./utils\";\nimport { initialBoard } from \"./setting\";\n\nexport default function useGobang() {\n  const [board, setBoard] = useState(initialBoard);\n  const [history, setHistory] = useState([initialBoard]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [blackIsNext, setBlackIsNext] = useState(true);\n\n  // 與畫面無關的狀態\n  const nowStep = useRef(0);\n  const lastStone = useRef(null);\n\n  // paint 前進行下棋順序判斷\n  useLayoutEffect(() => {\n    // 依據現在步數是否為偶數決定\n    setBlackIsNext(nowStep.current % 2 === 0 ? true : false);\n  }, [board]);\n\n  // paint 前找出是否已有勝利者\n  useLayoutEffect(() => {\n    // 第 9 次下棋後再進行判斷\n    if (nowStep.current >= 9 && nowStep.current === history.length - 1) {\n      let result = calculateWinner(lastStone.current, board);\n      if (result !== null) {\n        setIsGameOver(result === \"B\" ? \"黑色\" : \"白色\");\n      } else {\n        setIsGameOver(false);\n      }\n    } else {\n      setIsGameOver(false);\n    }\n  }, [lastStone, board, history.length]);\n\n  // restart 時重置相關 state\n  useLayoutEffect(() => {\n    if (history.length === 1) {\n      setBoard(initialBoard);\n      setIsGameOver(null);\n      nowStep.current = 0;\n    }\n  }, [history]);\n\n  const handleClickPlacing = (X, Y) => {\n    // 該格沒東西 且 遊戲未結束 才可放棋子\n    if (!board[Y][X] && !isGameOver) {\n      nowStep.current++;\n      const newBoard = JSON.parse(JSON.stringify(board));\n      newBoard[Y][X] = blackIsNext ? \"B\" : \"W\";\n      setBoard(newBoard);\n\n      // 更新棋譜紀錄\n      const newHistory = history.slice(0, nowStep.current);\n      newHistory.push(newBoard);\n      setHistory(newHistory);\n\n      // 更新最後一子的位置\n      lastStone.current = { X, Y };\n    } else {\n      return;\n    }\n  };\n\n  return {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    setBlackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  };\n}\n","import \"./App.css\";\n// Components\nimport Board from \"./Board\";\nimport HistoryBar from \"./HistoryBar\";\n// hooks & func\nimport useGobang from \"./useGobang\";\n\nfunction GobangApp() {\n  const {\n    nowStep,\n    isGameOver,\n    blackIsNext,\n    board,\n    setBoard,\n    history,\n    setHistory,\n    handleClickPlacing,\n  } = useGobang();\n\n  return (\n    <div className=\"game\">\n      {/* 下棋順序及勝利提示 */}\n      <div className=\"game-status\" style={{ color: isGameOver ? \"red\" : \"\" }}>\n        {!isGameOver && (blackIsNext ? \"下一步輪到：黑色\" : \"下一步輪到：白色\")}\n        {isGameOver && isGameOver + \"贏了，遊戲結束!\"}\n      </div>\n\n      {/* 棋盤（含棋子本體及棋盤背景） */}\n      <div className=\"game-board\">\n        <Board handleClickPlacing={handleClickPlacing} board={board} />\n      </div>\n\n      {/* 歷史步驟 bar */}\n      {history.length >= 1 && (\n        <HistoryBar\n          history={history}\n          setHistory={setHistory}\n          setBoard={setBoard}\n          blackIsNext={blackIsNext}\n          nowStep={nowStep}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default GobangApp;\n","// 讀取 local 暫存資料，沒有就回傳空值作為初始化資料\nexport function loadFromLocalStorage(name) {\n  let data = window.localStorage.getItem(name);\n  // 初始空值錯誤處理(null)\n  if (!data) {\n    return {\n      title: \"\",\n      email: \"\",\n      phone: \"\",\n      option: \"\",\n      howToKnow: \"\",\n      suggest: \"\",\n    };\n  }\n  return JSON.parse(data);\n}\n// 依據 html 中設定的 name 做分類，並依據空值及格式做驗證，回傳錯誤訊息\nexport function getErrorMessage(inputName, inputValue) {\n  switch (inputName) {\n    case \"title\":\n      if (!inputValue) {\n        return \"請輸入暱稱\";\n      } else if (!/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/.test(inputValue)) {\n        return \"限使用中文/英文/數字/底線\";\n      } else {\n        return \"\";\n      }\n    case \"email\":\n      if (!inputValue) {\n        return \"請輸入電子郵件\";\n      } else if (\n        !/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/.test(\n          inputValue\n        )\n      ) {\n        return \"電子郵件格式錯誤\";\n      } else {\n        return \"\";\n      }\n    case \"phone\":\n      if (!inputValue) {\n        return \"請輸入手機號碼\";\n      } else if (!/^09\\d{8}$/.test(inputValue)) {\n        return \"手機號碼格式錯誤\";\n      } else {\n        return \"\";\n      }\n    case \"option\":\n      if (!inputValue) {\n        return \"請勾選報名類型\";\n      } else {\n        return \"\";\n      }\n    case \"howToKnow\":\n      if (!inputValue) {\n        return \"請勿留空\";\n      } else if (!/^[\\u4e00-\\u9fa5a-zA-Z]+$/.test(inputValue)) {\n        return \"限使用中文/英文\";\n      } else {\n        return \"\";\n      }\n    default:\n      return \"\";\n  }\n}\n","import { useState, useLayoutEffect } from \"react\";\nimport { loadFromLocalStorage, getErrorMessage } from \"./utils\";\n\nexport function useInput() {\n  // 初始化輸入框，如果 localStorage 內有資料就寫入\n  const [inputValue, setInputValue] = useState(\n    loadFromLocalStorage(\"inputValue\")\n  );\n  const [inputErrorMessage, setInputErrorMessage] = useState({});\n\n  // 載入暫存資料在初始化後先執行驗證，並於 paint 前顯示提示訊息\n  useLayoutEffect(() => {\n    for (const key in inputValue) {\n      // 非空值再做驗證\n      if (inputValue[key] !== \"\") {\n        // 驗證，使用 functional update 確保按順序同步執行更新\n        setInputErrorMessage((data) => ({\n          ...data,\n          [key]: getErrorMessage(key, inputValue[key]),\n        }));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleInputChange = (e) => {\n    const {value, name} = e.target;\n    setInputValue({\n      ...inputValue,\n      [name]: value,\n    });\n    // 驗證\n    setInputErrorMessage({\n      ...inputErrorMessage,\n      [name]: getErrorMessage(name, value),\n    });\n  };\n  //回傳打包好的工具\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    setInputErrorMessage,\n  };\n}\n","import './App.css';\nimport useForm from './useForm';\n\nfunction FormApp() {\n  // 引入已打包好的 hooks\n  const {\n    inputValue,\n    handleInputChange,\n    inputErrorMessage,\n    handleClickButtonSave,\n    handleFormSubmit,\n  } = useForm();\n  // memo\n  return (\n    <>\n      <div className='form__wrapper'>\n        <form onSubmit={handleFormSubmit}>\n          <div className='form__title'>新拖延運動報名表單</div>\n          <div className='form__info'>\n            <p>活動日期：2020/12/10 ~ 2020/12/11</p>\n            <p>活動地點：台北市大安區新生南路二段1號</p>\n          </div>\n          <div className='form__notice'>*必填</div>\n          <div className='input-block'>\n            <div className='input-block__title'>暱稱</div>\n            {/* input title */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.title}\n              className='placebar'\n              name='title'\n              placeholder='您的回答'\n              type='text'\n            />\n            {/* input title error */}\n            <div className='input-block__error' value='請輸入暱稱!'>\n              {inputErrorMessage.title && inputErrorMessage.title}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>電子郵件</div>\n            {/* input email */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.email}\n              className='placebar'\n              name='email'\n              placeholder='您的電子郵件'\n              type='text'\n            />\n            {/* input email error */}\n            <div className='input-block__error' value='請輸入電子郵件!'>\n              {inputErrorMessage.email && inputErrorMessage.email}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>手機號碼</div>\n            {/* input phone */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.phone}\n              className='placebar'\n              name='phone'\n              placeholder='您的手機號碼'\n              type='text'\n            />\n            {/* input phone error */}\n            <div className='input-block__error' value='請輸入手機號碼!'>\n              {inputErrorMessage.phone && inputErrorMessage.phone}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>報名類型</div>\n            <div>\n              <label>\n                {/* input option */}\n                <input\n                  onChange={handleInputChange}\n                  type='radio'\n                  name='option'\n                  value='躺在床上用想像力實作'\n                  checked={inputValue.option === '躺在床上用想像力實作'}\n                />\n                躺在床上用想像力實作\n              </label>\n              <label>\n                {/* input option */}\n                <input\n                  onChange={handleInputChange}\n                  type='radio'\n                  name='option'\n                  value='趴在地上滑手機找現成的'\n                  checked={inputValue.option === '趴在地上滑手機找現成的'}\n                />\n                趴在地上滑手機找現成的\n              </label>\n            </div>\n            {/* input option error */}\n            <div className='input-block__error' value='請選擇報名類型!'>\n              {inputErrorMessage.option && inputErrorMessage.option}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>怎麼知道這個活動的？</div>\n            {/* input howToKnow */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.howToKnow}\n              className='placebar'\n              placeholder='您的回答'\n              name='howToKnow'\n              type='text'\n            />\n            {/* input howToKnow error */}\n            <div className='input-block__error answer__check' value='請勿留空!'>\n              {inputErrorMessage.howToKnow && inputErrorMessage.howToKnow}\n            </div>\n          </div>\n          <div className='input-block'>\n            <div className='input-block__title'>其他</div>\n            <div className='input-block__desc'>對活動的一些建議</div>\n            {/* input suggest */}\n            <input\n              onChange={handleInputChange}\n              value={inputValue.suggest}\n              className='placebar'\n              placeholder='您的回答'\n              name='suggest'\n              type='text'\n            />\n          </div>\n          <div className='buttons__block'>\n            {/* button save （react 表單內的 button 會自動綁定 submit ，取消需要更改 type） */}\n            <button\n              onClick={handleClickButtonSave}\n              type='button'\n              className='buttons__block-save'\n            >\n              暫存\n            </button>\n            {/* button submit */}\n            <button className='buttons__block-summit'>送出</button>\n          </div>\n          <div className='form__info'>請勿透過表單送出您的密碼。</div>\n        </form>\n      </div>\n      <div className='footer'>© 2020 © Copyright. All rights Reserved.</div>\n    </>\n  );\n}\n\nexport default FormApp;\n","import { useInput } from \"./useInput\";\nimport { getErrorMessage } from \"./utils\";\n\nexport default function useForm() {\n  // 引入已打包好的 hooks\n  const {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    setInputErrorMessage,\n  } = useInput();\n\n  // 暫存按鈕\n  const handleClickButtonSave = () => {\n    localStorage.setItem(\"inputValue\", JSON.stringify(inputValue));\n  };\n\n  // 送出表單前驗證\n  const handleFormSubmit = (e) => {\n    // 取消送出表單動作\n    e.preventDefault();\n    let hasRequiredInputEmpty = false;\n\n    // 先驗證後更新錯誤訊息\n    for (const key in inputValue) {\n      // 空值判斷，排除非必要項目\n      if (inputValue[key] === \"\" && key !== \"suggest\") {\n        hasRequiredInputEmpty = true;\n      }\n      // radio 未勾選判斷\n      if (key === \"options\" && inputValue[key] === \"\") {\n        setInputErrorMessage((inputErrorMessage) => ({\n          ...inputErrorMessage,\n          [key]: getErrorMessage(key, inputValue[key]),\n        }));\n      }\n      // 使用 functional update 確保按順序同步更新\n      setInputErrorMessage((inputErrorMessage) => ({\n        ...inputErrorMessage,\n        [key]: getErrorMessage(key, inputValue[key]),\n      }));\n    }\n\n    // 如 input 的 state 有空值則提前 return （因為前面驗證後的錯誤訊息還在更新中）\n    if (hasRequiredInputEmpty) {\n      alert(\"資料輸入不完全\");\n      return;\n    }\n\n    // 從是否有錯誤訊息判斷是否全數通過驗證\n    for (const key in inputErrorMessage) {\n      if (inputErrorMessage[key] !== \"\") {\n        // eslint-disable-next-line\n        alert(\"資料輸入不完全\");\n        return;\n      }\n    }\n    // 全數通過驗證，顯示輸入資料\n    // eslint-disable-next-line\n    alert(` \n      以下為您所填寫的資料：\n      您的暱稱：${inputValue.title}\n      您的電子郵件：${inputValue.email}\n      您的手機號碼：${inputValue.phone}\n      您的報名類型：${inputValue.option}\n      您怎麼知道這個活動的：${inputValue.howToKnow}\n      其他：${inputValue.suggest}\n    `);\n  };\n\n  //回傳打包好的函式與需要變數\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    inputErrorMessage,\n    handleClickButtonSave,\n    handleFormSubmit,\n  };\n}\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable import/no-unresolved */\nimport { createContext } from 'react';\n\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","export const MEDIA_QUERY_MOBILE_M = '@media screen and (min-width: 375px)';\nexport const MEDIA_QUERY_MOBILE_L = '@media screen and (min-width: 425px)';\nexport const MEDIA_QUERY_TABLET = '@media screen and (min-width: 768px)';\nexport const MEDIA_QUERY_LAPTOP = '@media screen and (min-width: 1024px)';\n","/* eslint-disable import/no-unresolved */\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../context';\nimport { setAuthToken } from '../utils';\n\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_MOBILE_L,\n  MEDIA_QUERY_TABLET,\n} from '../../../constants/breakpoint';\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n  background: floralwhite;\n  display: flex;\n  position: sticky;\n  z-index: 1;\n  top: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 10px 20px;\n  ${MEDIA_QUERY_MOBILE_M} {\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    flex-direction: row;\n    padding: 10px;\n  }\n`;\nconst Brand = styled.div`\n  font-weight: bold;\n  margin: 10px auto;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 50px;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    width: 150px;\n    font-size: 24px;\n    margin: auto 10px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    width: 350px;\n    font-size: 40px;\n  }\n`;\nconst NavbarListContainer = styled.div`\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    margin: auto 10px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 24px;\n    flex-direction: column;\n    align-items: center;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    font-size: 18px;\n    flex-direction: row;\n    & + & {\n      margin-top: 0px;\n    }\n  }\n`;\nconst Nav = styled(Link)`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  font-weight: bold;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${props => props.$active\n    && `\n    background: rgba(0, 0, 0, 0.1);\n  `}\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    padding: 5px 10px;\n    width: auto;\n    & + & {\n      margin-top: 0px;\n      margin-left: 6px;\n    }\n  }\n  ${MEDIA_QUERY_TABLET} {\n    font-size: 24px;\n  }\n`;\n\nexport default function Header() {\n  console.log('render header');\n  const { pathname } = useLocation();\n  console.log('pathname', pathname);\n  // 取得當下 user 的狀態(未登入:null, 已登入：帳號資料物件)\n  const { user, setUser } = useContext(AuthContext);\n  console.log('now user is', user);\n\n  const handleLogout = () => {\n    // 登出：清空 Token 並導回首頁\n    setAuthToken('');\n    setUser(false);\n    // 父層 user state 改變，重新 re-render\n    console.log('pathname', pathname);\n  };\n  return (\n    <HeaderContainer>\n      <Brand>My Blog</Brand>\n      <NavbarListContainer>\n        <NavbarList>\n          <Nav $active={pathname === '/BlogApp'} to=\"/BlogApp\">\n            首頁\n          </Nav>\n          <Nav $active={pathname === '/BlogApp/About'} to=\"/BlogApp/About\">\n            關於我\n          </Nav>\n          <Nav\n            $active={pathname.includes('/BlogApp/pagination')}\n            to=\"/BlogApp/pagination/1\"\n          >\n            文章分頁\n          </Nav>\n          {user && (\n            <Nav\n              $active={pathname === '/BlogApp/new-post'}\n              to=\"/BlogApp/new-post\"\n            >\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n        <NavbarList>\n          {/* 初始化會先依據 user 的初始值顯示，等 call API 後才會改變 */}\n          {user === false && (\n            <>\n              <Nav\n                $active={pathname === '/BlogApp/register'}\n                to=\"/BlogApp/register\"\n              >\n                註冊\n              </Nav>\n              <Nav $active={pathname === '/BlogApp/login'} to=\"/BlogApp/login\">\n                登入\n              </Nav>\n            </>\n          )}\n          {user && (\n            <Nav onClick={handleLogout} to=\"/BlogApp\">\n              登出\n            </Nav>\n          )}\n        </NavbarList>\n      </NavbarListContainer>\n    </HeaderContainer>\n  );\n}\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\n\nexport const getPostsByPage = page => fetch(\n  `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`,\n);\n\nexport const getSinglePost = id => fetch(`${BASE_URL}/posts?id=${id}`).then(res => res.json());\n\nexport const register = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const login = (username, password) => fetch(`${BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\nexport const addPost = (data) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(res => res.json());\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../../WebAPI';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\nconst PostContainer = styled.div`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n`;\nconst PostTitle = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/BlogApp/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nfunction HomePage() {\n  console.log('render HomePage');\n  const [posts, setPosts] = useState(null);\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    console.log('useEffect just init to setPosts');\n    getPosts().then(newPosts => setPosts(newPosts));\n  }, []);\n\n  return (\n    <Wrapper>\n      {posts && posts.map(post => <Post key={post.id} post={post} />)}\n    </Wrapper>\n  );\n}\n\nexport default memo(HomePage);\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../context\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage({ setLoggedIn }) {\n  console.log(\"render loginPage\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  // 取出上層 contextProvider 提供的 context\n  const { setUser } = useContext(AuthContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(username, password).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      // 登入成功將回傳的 token 儲存在 localStorage\n      setAuthToken(res.token);\n      // 取得該使用者資料\n      getMe().then((resp) => {\n        if (resp.ok !== 1) {\n          // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken(null);\n          return setErrorMessage(resp.message);\n        }\n        // 查詢資料成功，將回傳的帳號資料(物件)存入 user\n        setUser(resp.data);\n        return history.push(\"/BlogApp\");\n      });\n      return true;\n    });\n  };\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button\n          variant=\"primary\"\n          size=\"lg\"\n          className=\"\"\n          onClick={() => {\n            setLoggedIn(true);\n          }}\n        >\n          登入\n        </Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { getMe, register } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../context';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 36px;\n  text-align: center;\n  margin-top: 1rem;\n`;\n\nexport default function RegisterPage() {\n  console.log('render RegisterPage');\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  // 取出上層 contextProvider 提供的 context\n  const { setUser } = useContext(AuthContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    register(nickname, username, password).then((res) => {\n      if (res.ok === 0) {\n        return setErrorMessage(res.message);\n      }\n      // 註冊成功將回傳的 token 儲存在 localStorage\n      setAuthToken(res.token);\n      // 取得該使用者資料\n      getMe().then((resp) => {\n        if (resp.ok !== 1) {\n          // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken(null);\n          return setErrorMessage(resp.message);\n        }\n        // 查詢資料成功，將回傳的帳號資料(物件)存入 user\n        setUser(resp.data);\n        return history.push('/BlogApp');\n      });\n      return true;\n    });\n  };\n  const handleInputFocus = () => {\n    setErrorMessage(null);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicNickname\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Nickname\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"nickname\"\n              placeholder=\"Enter nickname\"\n              value={nickname}\n              onChange={e => setNickname(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n          註冊\n        </Button>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { getSinglePost } from '../../WebAPI';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostContainer = styled.div`\n  padding: 16px;\n`;\nconst PostTitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  text-align: end;\n`;\nconst PostBody = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nfunction Post({ post }) {\n  console.log('render post');\n  return (\n    <PostContainer>\n      <PostTitle>{post[0].title}</PostTitle>\n      <PostDate>{new Date(post[0].createdAt).toLocaleString()}</PostDate>\n      <PostBody>{post[0].body}</PostBody>\n    </PostContainer>\n  );\n}\n\nexport default function SinglePost() {\n  console.log('render single post');\n  // 取得在 Route 中設定的 URL 參數\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    getSinglePost(id).then(newPosts => setPost(newPosts));\n  }, []);\n  return <Wrapper>{post && <Post post={post} />}</Wrapper>;\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { addPost } from '../../WebAPI';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostForm = styled.form``;\nconst PostTitle = styled.input`\n  padding: 8px;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 50%;\n`;\nconst PostBody = styled.textarea`\n  padding: 8px;\n  font-size: 16px;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 100%;\n  resize: none;\n`;\nconst PostErrorMessage = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: 1rem;\n`;\n\nexport default function AddPost() {\n  const [titleValue, setTitleValue] = useState('');\n  const [bodyValue, setBodyValue] = useState('');\n  const [postError, setPostError] = useState(null);\n\n  const history = useHistory();\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      title: titleValue,\n      body: bodyValue,\n    };\n    addPost(data).then((res) => {\n      if (res.ok === 0) {\n        return setPostError(res.message);\n      }\n      return history.push('/BlogApp');\n    });\n  };\n\n  return (\n    <Wrapper>\n      <PostForm onSubmit={handleFormSubmit}>\n        <div>\n          <div>文章標題：</div>\n          <PostTitle\n            value={titleValue}\n            onChange={(e) => {\n              setTitleValue(e.target.value);\n            }}\n            onFocus={() => {\n              setPostError(null);\n            }}\n          />\n        </div>\n        <div>\n          <div>文章內容：</div>\n          <PostBody\n            rows={6}\n            value={bodyValue}\n            onChange={(e) => {\n              setBodyValue(e.target.value);\n            }}\n            onFocus={() => {\n              setPostError(null);\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n            送出\n          </Button>\n        </div>\n        {postError && (\n          <PostErrorMessage>\n            新增文章失敗：\n            {' '}\n            {postError}\n          </PostErrorMessage>\n        )}\n      </PostForm>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\n\nconst AboutContainer = styled.div`\n  padding: 16px;\n`;\nconst Aboutitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nconst AbouContent = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Wrapper>\n      <AboutContainer>\n        <Aboutitle>關於我</Aboutitle>\n        <AbouContent>\n          漢皇重色思傾國，御宇多年求不得。 楊家有女初長成，養在深閨人未識。\n          天生麗質難自棄，一朝選在君王側。 回眸一笑百媚生，六宮粉黛無顏色。\n          春寒賜浴華清池，溫泉水滑洗凝脂。 侍兒扶起嬌無力，始是新承恩澤時。\n          雲鬢花顏金步搖，芙蓉帳暖度春宵。 春宵苦短日高起，從此君王不早朝。\n          承歡侍宴無閒暇，春從春遊夜專夜。 後宮佳麗三千人，三千寵愛在一身。\n          金屋妝成嬌侍夜，玉樓宴罷醉和春。 姊妹弟兄皆列土，可憐光彩生門戶。\n          遂令天下父母心，不重生男重生女。 驪宮高處入青雲，仙樂風飄處處聞。\n          緩歌慢舞凝絲竹，盡日君王看不足。 漁陽鼙鼓動地來，驚破霓裳羽衣曲。\n          九重城闕煙塵生，千乘萬騎西南行。 翠華搖搖行復止，西出都門百餘里。\n          六軍不發無奈何，宛轉蛾眉馬前死。 花鈿委地無人收，翠翹金雀玉搔頭。\n          君王掩面救不得，回看血淚相和流。 黃埃散漫風蕭索，雲棧縈紆登劍閣。\n          峨嵋山下少人行，旌旗無光日色薄。 蜀江水碧蜀山青，聖主朝朝暮暮情。\n          行宮見月傷心色，夜雨聞鈴腸斷聲。 天旋日轉迴龍馭，到此躊躇不能去。\n          馬嵬坡下泥土中，不見玉顏空死處。 君臣相顧盡沾衣，東望都門信馬歸。\n          歸來池苑皆依舊，太液芙蓉未央柳。 芙蓉如面柳如眉，對此如何不淚垂。\n          春風桃李花開日，秋雨梧桐葉落時。 西宮南內多秋草，落葉滿階紅不掃。\n          梨園子弟白髮新，椒房阿監青娥老。 夕殿螢飛思悄然，孤燈挑盡未成眠。\n          遲遲鐘鼓初長夜，耿耿星河欲曙天。 鴛鴦瓦冷霜華重，翡翠衾寒誰與共。\n          悠悠生死別經年，魂魄不曾來入夢。 臨邛道士鴻都客，能以精誠致魂魄。\n          為感君王輾轉思，遂教方士殷勤覓。 排空馭氣奔如電，升天入地求之遍。\n          上窮碧落下黃泉，兩處茫茫皆不見。 忽聞海上有仙山，山在虛無縹緲間。\n          樓閣玲瓏五雲起，其中綽約多仙子。 中有一人字太真，雪膚花貌參差是。\n          金闕西廂叩玉扃，轉教小玉報雙成。 聞道漢家天子使，九華帳裏夢魂驚。\n          攬衣推枕起徘徊，珠箔銀屏迤邐開。 雲髻半偏新睡覺，花冠不整下堂來。\n          風吹仙袂飄颻舉，猶似霓裳羽衣舞。 玉容寂寞淚闌干，梨花一枝春帶雨。\n          含情凝睇謝君王，一別音容兩渺茫。 昭陽殿裏恩愛絕，蓬萊宮中日月長。\n          回頭下望人寰處，不見長安見塵霧。 唯將舊物表深情，鈿合金釵寄將去。\n          釵留一股合一扇，釵擘黃金合分鈿。 但教心似金鈿堅，天上人間會相見。\n          臨別殷勤重寄詞，詞中有誓兩心知。 七月七日長生殿，夜半無人私語時。\n          在天願作比翼鳥，在地願為連理枝。 天長地久有時盡，此恨綿綿無絕期。\n        </AbouContent>\n      </AboutContainer>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState, memo } from 'react';\nimport styled from 'styled-components';\nimport { Link, useParams } from 'react-router-dom';\nimport { Pagination } from 'react-bootstrap';\nimport { getPostsByPage } from '../../WebAPI';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\nconst PostContainer = styled.div`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n`;\nconst PostTitle = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction PaginationWrapper({ postsCount, currentPage }) {\n  const postsPerPage = 5;\n  const totalPage = Math.ceil(postsCount / postsPerPage);\n  console.log('totalPage: ', totalPage);\n  const items = [];\n  for (let number = 1; number <= totalPage; number += 1) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === Number(currentPage)}\n        href={`#/BlogApp/pagination/${number}`}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <Pagination className=\"d-flex justify-content-center\" size=\"lg\">\n      {items}\n    </Pagination>\n  );\n}\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/BlogApp/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nfunction PaginationPage() {\n  const { page } = useParams();\n  const [posts, setPosts] = useState(null);\n  const [postsCount, setPostsCount] = useState(null);\n\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    console.log('useEffect just init to setPosts');\n    getPostsByPage(page)\n      .then((res) => {\n        // 從 response 的 header 拿到目前所有文章數量\n        const count = Number(res.headers.get('x-total-count'));\n        setPostsCount(count);\n        return res.json();\n      })\n      .then(newPosts => setPosts(newPosts));\n  }, [page]);\n\n  return (\n    <Wrapper>\n      {postsCount > 0\n        && posts\n        && posts.map(post => <Post key={post.id} post={post} />)}\n      {/* 當非同步的 fetch 回來後 postsCount 的狀態從原本的 null 被更新，此時才會開始 render PaginationWrapper */}\n      {postsCount > 0 && (\n        <PaginationWrapper postsCount={postsCount} currentPage={page} />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default memo(PaginationPage);\n","/* eslint-disable import/no-unresolved */\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n// import PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"./Pages/HomePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport SinglePost from \"./Pages/SinglePost\";\nimport AddPost from \"./Pages/AddPost\";\nimport AboutPage from \"./Pages/AboutPage\";\nimport PaginationPage from \"./Pages/PaginationPage\";\nimport { AuthContext } from \"./context\";\nimport { getMe } from \"./WebAPI\";\nimport { setAuthToken, getAuthToken } from \"./utils\";\n\nfunction BlogApp() {\n  console.log(\"render BlogApp\");\n  // 登入狀態\n\n  // user 預設值會先被 render 出來\n  const [user, setUser] = useState(null);\n\n  // 每次 mount 時先確認登入狀態，檢查 local storage 內有無 token，有的話再以 getMe 確認身分\n  useEffect(() => {\n    console.log(\"useEffect in first render\");\n    // 沒 token 直接 return\n    if (!getAuthToken()) {\n      setUser(false);\n      return;\n    }\n    getMe().then((res) => {\n      if (res.ok !== 1) {\n        console.log(\"no ok\");\n        // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n        setAuthToken(\"\");\n        setUser(false);\n        return;\n        // return setErrorMessage(res.message);\n      }\n      console.log(\"ok\");\n      setUser(res.data);\n    });\n  }, []);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Router>\n        <Header>header</Header>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/BlogApp\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/BlogApp/about\">\n            <AboutPage />\n          </Route>\n          <Route exact path=\"/BlogApp/login\">\n            {loggedIn ? <Redirect to=\"/BlogApp/welcome\" /> : <LoginPage setLoggedIn={setLoggedIn}/>}\n          </Route>\n          <Route exact path=\"/BlogApp/register\">\n            <RegisterPage />\n          </Route>\n          <Route exact path=\"/BlogApp/pagination/:page\">\n            <PaginationPage />\n          </Route>\n          <Route exact path=\"/BlogApp/posts/:id\">\n            <SinglePost />\n          </Route>\n          <Route exact path=\"/BlogApp/new-post\">\n            <AddPost />\n          </Route>\n          <Route exact path=\"/BlogApp/welcome\">\n            <h1>\n              Welcome!\n            </h1>\n          </Route>\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default BlogApp;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-duplicates */\nimport React, { useState, memo } from 'react';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\n// dumb component 不知道 redux 的存在，只負責 UI 顯示， redux 提供的函式透過 props 傳入\nconst AddTodo = memo(({ handleAddTodo, handleSetFilter }) => {\n  const [value, setValue] = useState('');\n  return (\n    <InputGroup className=\"mb-3\">\n      <FormControl\n        placeholder=\"請輸入待辦事項\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <InputGroup.Append>\n        <Button\n          onClick={() => {\n            // 空值處理\n            if (!value) {\n              return;\n            }\n            handleAddTodo(value);\n            setValue('');\n            handleSetFilter('all');\n          }}\n        >\n          送出\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n});\n\nexport default AddTodo;\n\nAddTodo.propTypes = {\n  handleAddTodo: PropTypes.func.isRequired,\n  handleSetFilter: PropTypes.func.isRequired,\n};\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nconst TodoContent = styled.div`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  ${props => props.$isDone && 'text-decoration: line-through;'}\n`;\nconst TodoContentEditing = styled.input`\n  margin-right: 16px;\n  word-break: break-word;\n  padding: 6px;\n  border: none;\n  font-size: 26px;\n  flex: 1;\n  outline: 1px solid grey;\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n  ${props => props.$isDone && 'text-decoration: line-through;'}\n`;\nconst TodoButtonWrapper = styled.div``;\n\n// 合併包成完整的 component，設定參數傳入位置\nexport default function TodoItem({\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  handleUpdateTodo,\n  updatingTodo,\n  handleUpdateChange,\n  handleUpdateDone,\n  editingInput,\n}) {\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n  const handleUpdateClick = (e) => {\n    if (todo.isDone) return;\n    const id = e.target.getAttribute('data-todo-id');\n    const value = e.target.innerText;\n    handleUpdateTodo(id, value);\n  };\n  const handleUpdateOnChange = (e) => {\n    const id = e.target.getAttribute('data-todo-id');\n    const { value } = e.target;\n    handleUpdateChange(id, value);\n  };\n\n  return (\n    <TodoItemWrapper data-todo-id={todo.id}>\n      {/* 更新觸發時，比對更新的 ID 與該 todo 的 ID，相符則 render 輸入框，不相符則 render div */}\n      {updatingTodo.id && Number(updatingTodo.id) === todo.id ? (\n        <TodoContentEditing\n          data-todo-id={todo.id}\n          value={updatingTodo.value}\n          onChange={handleUpdateOnChange}\n          onBlur={handleUpdateDone}\n          ref={editingInput}\n        />\n      ) : (\n        <TodoContent\n          $isDone={todo.isDone}\n          data-todo-id={todo.id}\n          onDoubleClick={handleUpdateClick}\n        >\n          {todo.content}\n        </TodoContent>\n      )}\n      <TodoButtonWrapper>\n        <Button\n          onClick={handleToggleClick}\n          variant={todo.isDone ? 'secondary' : 'success'}\n        >\n          {todo.isDone ? '未完成' : '已完成'}\n        </Button>\n        {' '}\n        <Button variant=\"danger\" onClick={handleDeleteClick}>\n          刪除\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n  }).isRequired,\n  handleDeleteTodo: PropTypes.func.isRequired,\n  handleToggleIsDone: PropTypes.func.isRequired,\n  handleUpdateTodo: PropTypes.func.isRequired,\n  updatingTodo: PropTypes.shape({\n    id: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  handleUpdateChange: PropTypes.func.isRequired,\n  handleUpdateDone: PropTypes.func.isRequired,\n  editingInput: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n};\n","/* eslint-disable import/no-unresolved */\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport React, { memo, useMemo } from 'react';\n\nconst FilterBar = memo(\n  ({\n    todos, filter, handleSetFilter, handleClearDoneTodos,\n  }) => {\n    // 未完成數量：只在 todos 有變化時才計算\n    const countUndone = useMemo(() => {\n      let count = 0;\n      todos.forEach((todo) => {\n        if (!todo.isDone) {\n          count += 1;\n        }\n      });\n      return count;\n    }, [todos]);\n\n    return (\n      <>\n        <div className=\"d-flex justify-content-between align-items-center my-3 px-3\">\n          <div>\n            <strong>{countUndone}</strong>\n            {' '}\n            個未完成\n          </div>\n          <div className=\"options\">\n            <Button\n              variant=\"info\"\n              onClick={() => handleSetFilter('all')}\n              className={filter === 'all' && 'active'}\n            >\n              All\n            </Button>\n            {' '}\n            <Button\n              variant=\"info\"\n              onClick={() => handleSetFilter('active')}\n              className={filter === 'active' && 'active'}\n            >\n              Active\n            </Button>\n            {' '}\n            <Button\n              variant=\"info\"\n              onClick={() => handleSetFilter('completed')}\n              className={filter === 'completed' && 'active'}\n            >\n              Completed\n            </Button>\n          </div>\n          <Button variant=\"warning\" onClick={handleClearDoneTodos}>\n            Clear completed\n          </Button>\n        </div>\n      </>\n    );\n  },\n);\n\nexport default FilterBar;\n\nFilterBar.propTypes = {\n  todos: PropTypes.arrayOf(Object).isRequired,\n  filter: PropTypes.string.isRequired,\n  handleSetFilter: PropTypes.func.isRequired,\n  handleClearDoneTodos: PropTypes.func.isRequired,\n};\n","export const selectTodos = store => store.todoState.todos;\nexport const selectFilter = store => store.filterState.name;\nexport const selectUpdatingTodo = store => store.updatingTodoState;\n","export const ADD_TODO = 'add_todo';\nexport const DELETE_TODO = 'delete_todo';\nexport const TOGGLE_TODO = 'toggle_todo';\nexport const CLEAR_DONE_TODO = 'clear_done_todo';\nexport const SET_FILTER = 'set_filter';\nexport const SET_UPDATING_TODO = 'set_updating_todo';\nexport const UPDATE_TODO = 'update_todo';\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  CLEAR_DONE_TODO,\n  SET_FILTER,\n  SET_UPDATING_TODO,\n  UPDATE_TODO,\n} from './actionTypes';\n// action creator 直接回傳 action object ，方便重用\nexport function addTodo(content) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n    },\n  };\n}\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\nexport function updateTodo(id, content) {\n  return {\n    type: UPDATE_TODO,\n    payload: {\n      id,\n      content,\n    },\n  };\n}\nexport function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\nexport function clearDoneTodo() {\n  return {\n    type: CLEAR_DONE_TODO,\n  };\n}\nexport function setFilter(name) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      name,\n    },\n  };\n}\nexport function setUpdatingTodo(id, value) {\n  return {\n    type: SET_UPDATING_TODO,\n    payload: {\n      id,\n      value,\n    },\n  };\n}\n","/* eslint-disable import/no-unresolved */\nimport { useEffect, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectTodos,\n  selectFilter,\n  selectUpdatingTodo,\n} from './redux/selectors';\nimport {\n  addTodo,\n  deleteTodo,\n  toggleTodo,\n  clearDoneTodo,\n  setFilter,\n  setUpdatingTodo,\n  updateTodo,\n} from './redux/actions';\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\n    'todos',\n    todos.length === 0 ? [] : JSON.stringify(todos),\n  );\n}\n\nexport default function useTodos() {\n  // useSelector(store => store.todoState.todos) store 中有多個 state ，將選擇過程另外抽出\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const updatingTodo = useSelector(selectUpdatingTodo);\n  const dispatch = useDispatch();\n  const editingInput = useRef(null);\n\n  // 關注 todos，改變時就執行函式(含初始化)\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n    // (return clean up function)\n  }, [todos]);\n\n  // 關注 updatingTodo，改變時就執行函式(含初始化)\n  useEffect(() => {\n    // 將輸入游標移到該 DOM 元素\n    if (updatingTodo.id) {\n      editingInput.current.focus();\n    }\n  }, [updatingTodo]);\n\n  // 定義子 component 會使用的函式\n  const handleAddTodo = useCallback(\n    (value) => {\n      dispatch(addTodo(value));\n    },\n    [dispatch],\n  );\n  const handleDeleteTodo = id => dispatch(deleteTodo(id));\n  const handleToggleIsDone = id => dispatch(toggleTodo(id));\n  const handleSetFilter = useCallback(\n    (name) => {\n      if (todos.length > 0) dispatch(setFilter(name));\n    },\n    [todos.length, dispatch],\n  );\n  const handleClearDoneTodos = () => {\n    if (todos.length > 0) dispatch(clearDoneTodo());\n  };\n  const handleUpdateTodo = (id, value) => {\n    dispatch(setUpdatingTodo(id, value));\n  };\n  const handleUpdateChange = (id, value) => {\n    dispatch(setUpdatingTodo(id, value));\n    dispatch(updateTodo(id, value));\n  };\n  const handleUpdateDone = () => {\n    dispatch(setUpdatingTodo(null, null));\n  };\n\n  // 回傳打包好的函式與需要變數\n  return {\n    todos,\n    filter,\n    updatingTodo,\n    handleAddTodo,\n    handleSetFilter,\n    handleClearDoneTodos,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateTodo,\n    handleUpdateChange,\n    handleUpdateDone,\n    editingInput,\n  };\n}\n","/* eslint-disable import/no-unresolved */\nimport './App.css';\nimport React, { memo } from 'react';\nimport { Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nimport AddTodo from './components/AddTodo';\nimport TodoItem from './components/TodoItem';\nimport FilterBar from './components/FilterBar';\nimport useTodos from './useTodos';\n\nconst TodoContainer = styled.div`\n  border-radius: 8px;\n  padding: 16px;\n  background: white;\n`;\nconst Title = memo(styled.div`\n  color: orange;\n  text-align: center;\n  font-size: 60px;\n  font-weight: bold;\n  padding: 20px;\n  margin-bottom: 10px;\n`);\n\nexport default function TodosRedux() {\n  const {\n    todos,\n    filter,\n    updatingTodo,\n    handleAddTodo,\n    handleSetFilter,\n    handleClearDoneTodos,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleUpdateTodo,\n    handleUpdateChange,\n    handleUpdateDone,\n    editingInput,\n  } = useTodos();\n  return (\n    <Container className=\"my-5\">\n      <TodoContainer>\n        <Title>Todo List</Title>\n        {/* 輸入列 */}\n        <AddTodo\n          handleAddTodo={handleAddTodo}\n          handleSetFilter={handleSetFilter}\n        />\n        {/* 資訊及篩選列 */}\n        <FilterBar\n          todos={todos}\n          filter={filter}\n          handleSetFilter={handleSetFilter}\n          handleClearDoneTodos={handleClearDoneTodos}\n        />\n        {/* Todos */}\n        {todos.map((todo) => {\n          // 依據 filter 去除不符合條件的 todos\n          if (filter === 'active' && todo.isDone) {\n            return '';\n          }\n          if (filter === 'completed' && !todo.isDone) {\n            return '';\n          }\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleToggleIsDone={handleToggleIsDone}\n              handleUpdateTodo={handleUpdateTodo}\n              updatingTodo={updatingTodo}\n              handleUpdateChange={handleUpdateChange}\n              handleUpdateDone={handleUpdateDone}\n              editingInput={editingInput}\n            />\n          );\n        })}\n      </TodoContainer>\n    </Container>\n  );\n}\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  CLEAR_DONE_TODO,\n  TOGGLE_TODO,\n  UPDATE_TODO,\n} from '../actionTypes';\n\n// 初始 id\nlet todoId = 0;\n// 只有初始化時要取出資料，但後續 render 時都還是會執行造成效能浪費，改為傳入函式就只會執行一次\nlet todoData = window.localStorage.getItem('todos');\nif (todoData) {\n  todoData = JSON.parse(todoData);\n  // 已有資料時 id 接續原 local 內最後一筆資料嚴格遞增\n  todoId = todoData[0].id + 1;\n} else {\n  // 空值錯誤處理(null)\n  todoData = [];\n}\n\nconst initialState = {\n  todos: todoData,\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      todoId += 1;\n      return {\n        // 注意未更改部分仍要傳入保留\n        ...state,\n        todos: [\n          // 新增的在上方\n          {\n            // 參數\n            id: todoId,\n            content: action.payload.content,\n            isDone: false,\n          },\n          // 原有的在後方\n          ...state.todos,\n        ],\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload.id),\n      };\n    }\n    case CLEAR_DONE_TODO: {\n      return {\n        ...state,\n        // 只留下 isDone 為 false\n        todos: state.todos.filter(todo => !todo.isDone),\n      };\n    }\n    case TOGGLE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          // 不符合指定刪除 ID 的保留\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }),\n      };\n    }\n    case UPDATE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          // 不符合 ID 的保留\n          if (todo.id !== Number(action.payload.id)) return todo;\n          // 符合指定 ID 的更新 content\n          return {\n            ...todo,\n            content: action.payload.content,\n          };\n        }),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_FILTER } from '../actionTypes';\n\nconst initialState = {\n  name: 'all',\n};\n\nexport default function filterReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_FILTER: {\n      return {\n        name: action.payload.name,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SET_UPDATING_TODO } from '../actionTypes';\n\nconst initialState = {\n  id: '',\n  value: '',\n};\n\nexport default function updatingTodoReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_UPDATING_TODO: {\n      return {\n        id: action.payload.id,\n        value: action.payload.value,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","/* eslint-disable import/no-unresolved */\nimport { combineReducers } from 'redux';\nimport todosReducer from './todos';\nimport filterReducer from './filter';\nimport updatingTodoReducer from './updatingTodo';\n\nexport default combineReducers({\n  todoState: todosReducer,\n  filterState: filterReducer,\n  updatingTodoState: updatingTodoReducer,\n});\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable no-underscore-dangle */\nimport { createStore } from 'redux';\nimport combineReducers from './reducers';\n\nexport default createStore(\n  combineReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\n//  註冊\nexport const registerAPI = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\n//  登入\nexport const loginAPI = (username, password) => fetch(`${BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    username,\n    password,\n  }),\n}).then(res => res.json());\n\n//  註冊/登入後會拿到 token ，需再以 token 拿到目前使用者資料，也用於 session 確認\nexport const getMeAPI = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\n//  拿全部文章\nexport const getAllPostsAPI = () => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\n//  拿分頁文章，先不轉換 json 格式因為還要從 header 取得所有文章數量\nexport const getPostsByPageAPI = page => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`);\n//  拿指定 ID 文章\nexport const getSinglePostAPI = id => fetch(`${BASE_URL}/posts?id=${id}`).then(res => res.json());\n\n//  新增文章\nexport const addPostAPI = (data) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(res => res.json());\n};\n\n//  刪除文章\nexport const deletePostAPI = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\n//  編輯文章\nexport const updatePostAPI = (id, data) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }).then(res => res.json());\n};\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const errorMessageSlice = createSlice({\n  name: 'error',\n  initialState: {\n    errorMessage: null,\n  },\n  reducers: {\n    setErrorMessage: (state, action) => {\n      //  參數為單一值非物件\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\n// 設定 action\nexport const { setErrorMessage } = errorMessageSlice.actions;\n\n// selector\nexport const selectErrorMessage = store => store.error.errorMessage;\n\nexport default errorMessageSlice.reducer;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-unresolved */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { registerAPI, loginAPI, getMeAPI } from '../../WebAPI';\nimport { setAuthToken, getAuthToken } from '../../utils';\nimport { setErrorMessage } from './errorMessageReducer';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userData: null,\n    isLogging: false,\n    isRegistering: false,\n    // 初始值設為 null 避免 render header 時因為還在確認使用者身分而跳字\n    isGettingUserData: null,\n  },\n  reducers: {\n    setUserData: (state, action) => {\n      state.userData = action.payload;\n    },\n    setIsLogging: (state, action) => {\n      state.isLogging = action.payload;\n    },\n    setIsRegistering: (state, action) => {\n      state.isRegistering = action.payload;\n    },\n    setIsGettingUserData: (state, action) => {\n      state.isGettingUserData = action.payload;\n    },\n  },\n});\n\n// 設定 action\nexport const {\n  setUserData,\n  setIsLogging,\n  setIsRegistering,\n  setIsGettingUserData,\n} = userSlice.actions;\n\n// 定義 redux thunk function\nexport const login = (username, password) => (dispatch) => {\n  // 發送中\n  dispatch(setIsLogging(true));\n  loginAPI(username, password)\n    .then((json) => {\n      //  登入失敗\n      if (json.ok === 0) {\n        dispatch(setErrorMessage(json.message));\n        dispatch(setIsLogging(false));\n        return;\n      }\n      //  登入成功將回傳的 token 儲存在 localStorage\n      setAuthToken(json.token);\n      //  取得該使用者資料\n      return getMeAPI().then((resJson) => {\n        //  此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n        if (resJson.ok === 0) {\n          setAuthToken('');\n          dispatch(setUserData(null));\n          dispatch(setErrorMessage(resJson.message));\n          dispatch(setIsLogging(false));\n          return;\n        }\n        // 成功登入，設置 user\n        dispatch(setUserData(resJson.data));\n        dispatch(setIsLogging(false));\n      });\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n    });\n};\n\nexport const register = (nickname, username, password) => (dispatch) => {\n  // 發送中\n  dispatch(setIsRegistering(true));\n  registerAPI(nickname, username, password)\n    .then((json) => {\n      if (json.ok === 0) {\n        dispatch(setErrorMessage(json.message));\n        dispatch(setIsRegistering(false));\n        return;\n      }\n      //  註冊成功將回傳的 token 儲存在 localStorage\n      setAuthToken(json.token);\n      //  取得該使用者資料\n      return getMeAPI().then((resJson) => {\n        if (resJson.ok === 0) {\n          //  此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n          setAuthToken('');\n          dispatch(setUserData(null));\n          dispatch(setErrorMessage(resJson.message));\n          dispatch(setIsRegistering(false));\n          return;\n        }\n        //  成功註冊，設置 user\n        dispatch(setUserData(resJson.data));\n        dispatch(setIsRegistering(false));\n      });\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n    });\n};\n\nexport const getUserData = () => (dispatch) => {\n  // 沒 token 直接 return\n  if (!getAuthToken()) {\n    dispatch(setUserData(null));\n    dispatch(setIsGettingUserData(false));\n    return;\n  }\n  // 發送中\n  dispatch(setIsGettingUserData(true));\n  getMeAPI()\n    .then((json) => {\n      if (json.ok !== 1) {\n        // 此 token 查詢帳號資料失敗：清掉 token 後顯示錯誤訊息\n        setAuthToken('');\n        dispatch(setUserData(null));\n        dispatch(setErrorMessage(json.message));\n        dispatch(setIsGettingUserData(false));\n        return;\n      }\n      // 成功取得使用者資料\n      dispatch(setUserData(json.data));\n      dispatch(setIsGettingUserData(false));\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n    });\n};\n\n// selector\nexport const selectUserData = (store) => store.user.userData;\nexport const selectIsGettingUserData = (store) => store.user.isGettingUserData;\nexport const selectIsLogging = (store) => store.user.isLogging;\nexport const selectIsRegistering = (store) => store.user.isRegistering;\n\nexport default userSlice.reducer;\n","/* eslint-disable import/no-unresolved */\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Alert } from 'react-bootstrap';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DualRing as GettingUserDataLoader } from 'react-awesome-spinners';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_MOBILE_L,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\nimport { setErrorMessage, selectErrorMessage } from '../../redux/reducers/errorMessageReducer';\nimport { setUserData, selectUserData, selectIsGettingUserData } from '../../redux/reducers/userReducer';\nimport { setAuthToken } from '../../utils';\n\nconst HeaderContainer = styled.div`\n  position: sticky;\n  z-index: 1;\n  top: 0;\n`;\nconst NavBarContainer = styled.div`\n  text-align: center;\n  background: floralwhite;\n  display: flex;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 10px 20px;\n  ${MEDIA_QUERY_MOBILE_M} {\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    flex-direction: row;\n    padding: 10px;\n  }\n`;\nconst Brand = styled.div`\n  font-weight: bold;\n  margin: 10px auto;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 50px;\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    width: 150px;\n    font-size: 24px;\n    margin: auto 10px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    width: 350px;\n    font-size: 40px;\n  }\n`;\nconst NavbarListContainer = styled.div`\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    margin: auto 10px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  ${MEDIA_QUERY_MOBILE_M} {\n    font-size: 24px;\n    flex-direction: column;\n    align-items: center;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    font-size: 18px;\n    flex-direction: row;\n    & + & {\n      margin-top: 0px;\n    }\n  }\n`;\nconst Nav = styled(Link)`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  font-weight: bold;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${props => props.$active\n    && `\n    background: rgba(0, 0, 0, 0.1);\n  `}\n  ${MEDIA_QUERY_MOBILE_M} {\n    width: 100%;\n    & + & {\n      margin-top: 6px;\n    }\n  }\n  ${MEDIA_QUERY_MOBILE_L} {\n    padding: 5px 10px;\n    width: auto;\n    & + & {\n      margin-top: 0px;\n      margin-left: 6px;\n    }\n  }\n  ${MEDIA_QUERY_TABLET} {\n    font-size: 24px;\n  }\n`;\nconst WelcomeMessage = styled.div`\n  background-color: coral;\n  text-align: center;\n  font-size: 20px;\n  color: white;\n  padding: 6px;\n`;\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { pathname } = useLocation();\n  // 取得當下 user 的狀態(未登入:null, 已登入：帳號資料物件)\n  const userData = useSelector(selectUserData);\n  const errorMessage = useSelector(selectErrorMessage);\n  const isGettingUserData = useSelector(selectIsGettingUserData);\n\n  //  當路徑改變時先將錯誤訊息清空\n  useEffect(\n    () => history.listen(() => {\n      dispatch(setErrorMessage(null));\n    }),\n    [dispatch, history],\n  );\n\n  const handleLogout = () => {\n    // 登出清空 Token 及 user\n    setAuthToken('');\n    dispatch(setUserData(null));\n  };\n  return (\n    <>\n      <HeaderContainer>\n        <NavBarContainer>\n          <Brand>Redux Blog</Brand>\n          <NavbarListContainer>\n            <NavbarList>\n              <Nav $active={pathname === '/BlogAppRedux'} to=\"/BlogAppRedux\">\n                首頁\n              </Nav>\n              <Nav\n                $active={pathname === '/BlogAppRedux/About'}\n                to=\"/BlogAppRedux/About\"\n              >\n                關於我\n              </Nav>\n              <Nav\n                $active={pathname.includes('/BlogAppRedux/pagination')}\n                to=\"/BlogAppRedux/pagination/1\"\n              >\n                文章分頁\n              </Nav>\n            </NavbarList>\n            <NavbarList>\n              {/* 初始化時因為 userData 初始值為 null，需等待確認完身分後再顯示 */}\n              {isGettingUserData && <GettingUserDataLoader />}\n              {!userData && isGettingUserData === false && (\n                <>\n                  <Nav\n                    $active={pathname === '/BlogAppRedux/register'}\n                    to=\"/BlogAppRedux/register\"\n                  >\n                    註冊\n                  </Nav>\n                  <Nav\n                    $active={pathname === '/BlogAppRedux/login'}\n                    to=\"/BlogAppRedux/login\"\n                  >\n                    登入\n                  </Nav>\n                </>\n              )}\n              {userData && isGettingUserData === false && (\n                <>\n                  <Nav\n                    $active={pathname === '/BlogAppRedux/new-post'}\n                    to=\"/BlogAppRedux/new-post\"\n                  >\n                    發布文章\n                  </Nav>\n                  <Nav onClick={handleLogout} to=\"/\">\n                    登出\n                  </Nav>\n                </>\n              )}\n            </NavbarList>\n          </NavbarListContainer>\n        </NavBarContainer>\n\n        {userData && (\n          <WelcomeMessage>\n            Hello!\n            {userData.nickname}\n          </WelcomeMessage>\n        )}\n        {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\n      </HeaderContainer>\n    </>\n  );\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-unresolved */\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  getSinglePostAPI,\n  getAllPostsAPI,\n  getPostsByPageAPI,\n  addPostAPI,\n  deletePostAPI,\n  updatePostAPI,\n} from '../../WebAPI';\nimport { setErrorMessage } from './errorMessageReducer';\n\nexport const postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    isGettingPost: false,\n    //  post\n    singlePostData: null,\n    allPostData: null,\n    byPagePostData: null,\n    totalPostsCount: null,\n\n    isAddingPost: false,\n    addPostResponse: null,\n\n    isDeletingPost: false,\n\n    isUpdatingPost: null,\n    updatePostResponse: null,\n  },\n  reducers: {\n    setIsGettingPost: (state, action) => {\n      // 參數為單一值非物件\n      state.isGettingPost = action.payload;\n    },\n    setSinglePostData: (state, action) => {\n      state.singlePostData = action.payload;\n    },\n    setAllPostData: (state, action) => {\n      state.allPostData = action.payload;\n    },\n    setByPagePostData: (state, action) => {\n      state.byPagePostData = action.payload;\n    },\n    setTotalPostsCount: (state, action) => {\n      state.totalPostsCount = action.payload;\n    },\n    setIsAddingPost: (state, action) => {\n      state.isAddingPost = action.payload;\n    },\n    setAddPostResponse: (state, action) => {\n      state.addPostResponse = action.payload;\n    },\n    setIsDeletingPost: (state, action) => {\n      state.isDeletingPost = action.payload;\n    },\n    setIsUpdatingPost: (state, action) => {\n      state.isUpdatingPost = action.payload;\n    },\n    setUpdatePostResponse: (state, action) => {\n      state.updatePostResponse = action.payload;\n    },\n  },\n});\n\n// 設定 action\nexport const {\n  setIsGettingPost,\n  setSinglePostData,\n  setAllPostData,\n  setByPagePostData,\n  setTotalPostsCount,\n  setIsAddingPost,\n  setAddPostResponse,\n  setIsDeletingPost,\n  setIsUpdatingPost,\n  setUpdatePostResponse,\n} = postSlice.actions;\n\n// 定義 redux thunk function\nexport const getPost = (type, params) => (dispatch) => {\n  switch (type) {\n    case 'single':\n      // params: id\n      dispatch(setIsGettingPost(true));\n      getSinglePostAPI(params)\n        .then((json) => {\n          if (json.length === 0) {\n            dispatch(setErrorMessage('此文章不存在或已被刪除'));\n            dispatch(setIsGettingPost(false));\n            return;\n          }\n          // 收到結果\n          dispatch(setSinglePostData(json));\n          dispatch(setIsGettingPost(false));\n        })\n        .catch((err) => {\n          console.log('err: ', err);\n        });\n      break;\n    case 'all':\n      // params: id\n      dispatch(setIsGettingPost(true));\n      getAllPostsAPI()\n        .then((json) => {\n          if (json.length === 0) {\n            dispatch(setErrorMessage('目前無任何文章'));\n            dispatch(setIsGettingPost(false));\n            return;\n          }\n          // 收到結果\n          dispatch(setAllPostData(json));\n          dispatch(setIsGettingPost(false));\n        })\n        .catch((err) => {\n          console.log('err: ', err);\n        });\n      break;\n    case 'byPage':\n      // params: page\n      dispatch(setIsGettingPost(true));\n      getPostsByPageAPI(params)\n        .then((res) => {\n          // 從 response 的 header 拿到目前所有文章數量\n          const count = Number(res.headers.get('x-total-count'));\n          dispatch(setTotalPostsCount(count));\n          // 利用 chaining 特性讓下個 .then 保證拿到已轉化成 json 格式的 response\n          return res.json();\n        })\n        .then((json) => {\n          if (json.length === 0) {\n            dispatch(setErrorMessage('查看的分頁不存在'));\n            dispatch(setIsGettingPost(false));\n            return;\n          }\n          // 收到結果\n          dispatch(setByPagePostData(json));\n          dispatch(setIsGettingPost(false));\n        })\n        .catch((err) => {\n          console.log('err: ', err);\n        });\n      break;\n    default:\n      return false;\n  }\n  return true;\n};\n\nexport const addPost = (data) => (dispatch) => {\n  // 新增中\n  dispatch(setIsAddingPost(true));\n  addPostAPI(data)\n    .then((json) => {\n      if (json.ok === 0) {\n        dispatch(setErrorMessage(json.message));\n        return;\n      }\n      // 新增完畢\n      dispatch(setAddPostResponse(json));\n      dispatch(setIsAddingPost(false));\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n    });\n};\n\nexport const deletePost = (id) => (dispatch) => {\n  // 刪除中\n  dispatch(setIsDeletingPost(true));\n  deletePostAPI(id)\n    .then(() => {\n      // 刪除完畢\n      dispatch(setIsDeletingPost(false));\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n    });\n};\n\nexport const updatePost = (id, data) => (dispatch) => {\n  // 發送中\n  dispatch(setIsUpdatingPost(true));\n  updatePostAPI(id, data)\n    .then((json) => {\n      dispatch(setUpdatePostResponse(json));\n      // 發送完畢\n      dispatch(setIsUpdatingPost(false));\n    })\n    .catch((err) => {\n      console.log('err: ', err);\n    });\n};\n\n// selector\nexport const selectAddPostResponse = (store) => store.posts.addPostResponse;\nexport const selectIsGettingPost = (store) => store.posts.isGettingPost;\nexport const selectIsAddingPost = (store) => store.posts.isAddingPost;\nexport const selectIsDeletingPost = (store) => store.posts.isDeletingPost;\nexport const selectAllPostData = (store) => store.posts.allPostData;\nexport const selectByPagePostData = (store) => store.posts.byPagePostData;\nexport const selectSinglePostData = (store) => store.posts.singlePostData;\nexport const selectTotalPostCount = (store) => store.posts.totalPostsCount;\nexport const selectIsUpdatingPost = (store) => store.posts.isUpdatingPost;\nexport const selectUpdatePostResponse = (store) =>\n  store.posts.updatePostResponse;\n\nexport default postSlice.reducer;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\n\nexport default Wrapper;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  MEDIA_QUERY_MOBILE_M,\n  MEDIA_QUERY_TABLET,\n} from '../../../../constants/breakpoint';\n\nconst PostContainer = styled(Link)`\n  border: solid 2px sandybrown;\n  border-radius: 8px;\n  border-bottom: 1px solid rgba(0, 12, 34, 0, 2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin: 10px auto;\n    flex-direction: column;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    flex-direction: row;\n  }\n  &:hover {\n    text-decoration: none;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\nconst PostTitle = styled.div`\n  color: #333;\n  text-decoration: none;\n  font-size: 24px;\n  max-width: 360px;\n  overflow-wrap: break-word;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  text-align: right;\n  ${MEDIA_QUERY_MOBILE_M} {\n    margin-top: 16px;\n  }\n  ${MEDIA_QUERY_TABLET} {\n    margin-top: 0px;\n  }\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer to={`/BlogAppRedux/posts/${post.id}`}>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nexport default memo(Post);\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst LoadingBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n`;\nconst PostLoadingBackground = () => (\n  <LoadingBackground>\n    <LoopCircleLoading />\n  </LoadingBackground>\n);\nexport default PostLoadingBackground;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPost, setAllPostData, selectIsGettingPost, selectAllPostData } from '../../../redux/reducers/postReducer';\nimport Wrapper from '../../templates/Wrapper';\nimport Post from '../../templates/Post';\nimport PostLoadingBackground from '../../Loaders/LoopCircleLoading';\n\nfunction HomePage() {\n  const dispatch = useDispatch();\n  const isGettingPost = useSelector(selectIsGettingPost);\n  const allPostData = useSelector(selectAllPostData);\n\n  // component mount 時執行(初始化)\n  useEffect(() => {\n    dispatch(getPost('all'));\n    // unmount 時先 clean up 避免下次回來時因為仍有舊資料而短暫顯示\n    return () => {\n      dispatch(setAllPostData(null));\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      {isGettingPost && <PostLoadingBackground />}\n      {!isGettingPost && allPostData && allPostData.length > 0 && (\n        <Wrapper>\n          {allPostData.map(post => (\n            <Post key={post.id} post={post} />\n          ))}\n        </Wrapper>\n      )}\n    </>\n  );\n}\n\nexport default memo(HomePage);\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Default as LoggingLoader } from 'react-awesome-spinners';\nimport { login, selectUserData, selectIsLogging } from '../../../redux/reducers/userReducer';\nimport { setErrorMessage } from '../../../redux/reducers/errorMessageReducer';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\n\nexport default function LoginPage() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //  input state 直接存在 component 內\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // 引入 store 內的 state\n  const isLogging = useSelector(selectIsLogging);\n  const userData = useSelector(selectUserData);\n\n  //  點擊送出表單 call dispatch\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login(username, password));\n  };\n  //  重新輸入時清掉錯誤訊息\n  const handleInputFocus = () => {\n    dispatch(setErrorMessage(null));\n  };\n\n  useEffect(() => {\n    //  監聽 userData，當登入成功後會被更新，再導至首頁\n    if (userData) {\n      history.push('/BlogAppRedux/');\n    }\n  }, [userData, history]);\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n        {isLogging && (\n          <div className=\"d-flex justify-content-center\">\n            <LoggingLoader />\n          </div>\n        )}\n        {!isLogging && (\n          <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n            登入\n          </Button>\n        )}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Form, Button, Col, Row,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Default as RegisteringLoader } from 'react-awesome-spinners';\nimport { register, selectIsRegistering, selectUserData } from '../../../redux/reducers/userReducer';\nimport { setErrorMessage } from '../../../redux/reducers/errorMessageReducer';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 100px auto;\n  background: white;\n  opacity: 0.8;\n  max-width: 500px;\n  border-radius: 10px;\n  padding: 50px 20px;\n`;\n\nexport default function RegisterPage() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  //  input 狀態存在 component 內\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // 引入 store 內的 state\n  const isRegistering = useSelector(selectIsRegistering);\n  const userData = useSelector(selectUserData);\n\n  //  點擊送出表單 call dispatch\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(register(nickname, username, password));\n  };\n  //  重新輸入時清掉錯誤訊息\n  const handleInputFocus = () => {\n    dispatch(setErrorMessage(null));\n  };\n\n  useEffect(() => {\n    //  監聽 userData，當註冊成功後會更新 userData，再導至首頁\n    if (userData) {\n      history.push('/BlogAppRedux/');\n    }\n  }, [dispatch, userData, history]);\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicNickname\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Nickname\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"nickname\"\n              placeholder=\"Enter nickname\"\n              value={nickname}\n              onChange={e => setNickname(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicUsername\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Username\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" as={Row}>\n          <Form.Label column sm=\"4\">\n            Password\n          </Form.Label>\n          <Col sm=\"8\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              onFocus={handleInputFocus}\n            />\n          </Col>\n        </Form.Group>\n        {/* 註冊 Loader */}\n        {isRegistering && (\n          <div className=\"d-flex justify-content-center\">\n            <RegisteringLoader />\n          </div>\n        )}\n        {/* 註冊按鈕在 call API 期間隱藏 */}\n        {!isRegistering && (\n          <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n            註冊\n          </Button>\n        )}\n      </Form>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport { useEffect, useRef } from 'react';\n\n// Hook\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from 'react';\nimport styled from 'styled-components';\nimport { Button, Modal } from 'react-bootstrap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Spinner as DeletingLoader } from 'react-awesome-spinners';\nimport Wrapper from '../../templates/Wrapper';\nimport usePrevious from '../../../hooks/usePrevious';\nimport {\n  getPost,\n  setSinglePostData,\n  deletePost,\n  selectIsGettingPost,\n  selectIsDeletingPost,\n  selectSinglePostData,\n} from '../../../redux/reducers/postReducer';\nimport { selectUserData } from '../../../redux/reducers/userReducer'\nimport PostLoadingBackground from '../../Loaders/LoopCircleLoading';\n\nconst PostContainer = styled.div`\n  padding: 16px;\n`;\nconst PostTitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  text-align: end;\n`;\nconst PostBody = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 64px;\n`;\n\nfunction DeleteModal({\n  showDeleteModal,\n  handleCloseDeleteModal,\n  handleDeletePost,\n  isDeletingPost,\n}) {\n  return (\n    <>\n      <Modal show={showDeleteModal} onHide={handleCloseDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>提示</Modal.Title>\n        </Modal.Header>\n        {isDeletingPost && (\n          <div className=\"d-flex justify-content-center\">\n            <DeletingLoader />\n          </div>\n        )}\n        {!isDeletingPost && (\n          <>\n            <Modal.Body>確定刪除此篇文章嗎?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n                取消\n              </Button>\n              <Button variant=\"danger\" onClick={handleDeletePost}>\n                確定\n              </Button>\n            </Modal.Footer>\n          </>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nconst Post = memo(({\n  singlePostData, handleShowDeleteModal, userData, id,\n}) => {\n  return (\n    <PostContainer>\n      <PostTitle>{singlePostData[0].title}</PostTitle>\n      <PostDate>\n        {new Date(singlePostData[0].createdAt).toLocaleString()}\n      </PostDate>\n      {/* 權限驗證：登入者的 ID 為此篇文章作者的 ID 時才可編輯及刪除 */}\n      {userData && userData.id === singlePostData[0].userId && (\n        <ButtonWrapper>\n          <Button\n            className=\"mr-3\"\n            variant=\"info\"\n            href={`#/BlogAppRedux/update-post/${id}`}\n          >\n            編輯\n          </Button>\n          <Button variant=\"danger\" onClick={handleShowDeleteModal}>\n            刪除\n          </Button>\n        </ButtonWrapper>\n      )}\n      <PostBody>{singlePostData[0].body}</PostBody>\n    </PostContainer>\n  );\n});\n\nexport default function SinglePost() {\n  //  取得在 Route 中設定的 URL 參數\n  const { id } = useParams();\n  const history = useHistory();\n\n  // 引入 redux function 及 store\n  const dispatch = useDispatch();\n  const userData = useSelector(selectUserData);\n  const isGettingPost = useSelector(selectIsGettingPost);\n  const singlePostData = useSelector(selectSinglePostData);\n  const isDeletingPost = useSelector(selectIsDeletingPost);\n  const prevIsDeletingPost = usePrevious(isDeletingPost);\n  const handleDeletePost = () => {\n    dispatch(deletePost(id));\n  };\n\n  //  刪除確認視窗\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const handleShowDeleteModal = useCallback(() => {\n    setShowDeleteModal(true);\n  }, [setShowDeleteModal]);\n  const handleCloseDeleteModal = () => setShowDeleteModal(false);\n\n  // 當 id 改變時就呼叫 redux thunk 協助 call API\n  useEffect(() => {\n    dispatch(getPost('single', id));\n    return () => {\n      // clean up\n      dispatch(setSinglePostData(null));\n    };\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (!isDeletingPost && prevIsDeletingPost) {\n      //  藉由 isDeletingPost 狀態前後的變化來確認是否\"剛刪除\"文章\n      //  1. 發送 request 前，isDeletingPost: false, prevIsDeletingPost: false\n      //  2. 開始發送 request, isDeletingPost: true, prevIsDeletingPost: false\n      //  3. 收到 response, isDeletingPost: false, prevIsDeletingPost: true\n      history.push('/BlogAppRedux/');\n    }\n  }, [history, isDeletingPost, prevIsDeletingPost]);\n\n  return (\n    <>\n      {isGettingPost && <PostLoadingBackground />}\n      <DeleteModal\n        showDeleteModal={showDeleteModal}\n        handleCloseDeleteModal={handleCloseDeleteModal}\n        handleDeletePost={handleDeletePost}\n        isDeletingPost={isDeletingPost}\n      />\n      {!isGettingPost && singlePostData && singlePostData.length > 0 && (\n        <Wrapper>\n          <Post\n            singlePostData={singlePostData}\n            handleShowDeleteModal={handleShowDeleteModal}\n            isDeletingPost={isDeletingPost}\n            userData={userData}\n            id={id}\n          />\n        </Wrapper>\n      )}\n    </>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addPost,\n  selectAddPostResponse,\n  selectIsAddingPost,\n} from '../../../redux/reducers/postReducer';\nimport { setErrorMessage } from '../../../redux/reducers/errorMessageReducer';\nimport usePrevious from '../../../hooks/usePrevious';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostForm = styled.form``;\nconst PostTitle = styled.input`\n  padding: 8px;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 50%;\n`;\nconst PostBody = styled.textarea`\n  padding: 8px;\n  font-size: 16px;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 100%;\n  resize: none;\n`;\nconst AddPostErrorMessage = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 36px;\n  text-align: center;\n  margin-top: 1rem;\n`;\n\nexport default function AddPost() {\n  const [titleValue, setTitleValue] = useState('');\n  const [bodyValue, setBodyValue] = useState('');\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  // 從 store 中取得 state\n  const addPostResponse = useSelector(selectAddPostResponse);\n  const isAddingPost = useSelector(selectIsAddingPost);\n  const prevIsAddingPost = usePrevious(isAddingPost);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      title: titleValue,\n      body: bodyValue,\n    };\n    dispatch(addPost(data));\n  };\n\n  useEffect(() => {\n    //  藉由 isAddingPost 狀態前後的變化來確認是否剛新增完文章\n    //  1. 發送 request 前，isAddingPost: false, prevIsAddingPost: false\n    //  2. 開始發送 request, isAddingPost: true, prevIsAddingPost: false\n    //  3. 收到 response, isAddingPost: false, prevIsAddingPost: true\n    if (!isAddingPost && prevIsAddingPost) {\n      history.push(`/BlogAppRedux/posts/${addPostResponse.id}`);\n    }\n  }, [dispatch, history, addPostResponse, isAddingPost, prevIsAddingPost]);\n\n  return (\n    <Wrapper>\n      <PostForm onSubmit={handleFormSubmit}>\n        <div>\n          <div>文章標題：</div>\n          <PostTitle\n            value={titleValue}\n            onChange={(e) => {\n              setTitleValue(e.target.value);\n            }}\n            onFocus={() => {\n              dispatch(setErrorMessage(null));\n            }}\n          />\n        </div>\n        <div>\n          <div>文章內容：</div>\n          <PostBody\n            rows={6}\n            value={bodyValue}\n            onChange={(e) => {\n              setBodyValue(e.target.value);\n            }}\n            onFocus={() => {\n              dispatch(setErrorMessage(null));\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"primary\" size=\"lg\" className=\"\" type=\"submit\">\n            送出\n          </Button>\n        </div>\n        {addPostResponse && addPostResponse.ok === 0 && (\n          <AddPostErrorMessage>{addPostResponse.message}</AddPostErrorMessage>\n        )}\n      </PostForm>\n    </Wrapper>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 10px;\n`;\n\nconst AboutContainer = styled.div`\n  padding: 16px;\n`;\nconst Aboutitle = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nconst AbouContent = styled.div`\n  margin: 16px auto;\n  border: 1px solid black;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Wrapper>\n      <AboutContainer>\n        <Aboutitle>關於我</Aboutitle>\n        <AbouContent>\n          漢皇重色思傾國，御宇多年求不得。 楊家有女初長成，養在深閨人未識。\n          天生麗質難自棄，一朝選在君王側。 回眸一笑百媚生，六宮粉黛無顏色。\n          春寒賜浴華清池，溫泉水滑洗凝脂。 侍兒扶起嬌無力，始是新承恩澤時。\n          雲鬢花顏金步搖，芙蓉帳暖度春宵。 春宵苦短日高起，從此君王不早朝。\n          承歡侍宴無閒暇，春從春遊夜專夜。 後宮佳麗三千人，三千寵愛在一身。\n          金屋妝成嬌侍夜，玉樓宴罷醉和春。 姊妹弟兄皆列土，可憐光彩生門戶。\n          遂令天下父母心，不重生男重生女。 驪宮高處入青雲，仙樂風飄處處聞。\n          緩歌慢舞凝絲竹，盡日君王看不足。 漁陽鼙鼓動地來，驚破霓裳羽衣曲。\n          九重城闕煙塵生，千乘萬騎西南行。 翠華搖搖行復止，西出都門百餘里。\n          六軍不發無奈何，宛轉蛾眉馬前死。 花鈿委地無人收，翠翹金雀玉搔頭。\n          君王掩面救不得，回看血淚相和流。 黃埃散漫風蕭索，雲棧縈紆登劍閣。\n          峨嵋山下少人行，旌旗無光日色薄。 蜀江水碧蜀山青，聖主朝朝暮暮情。\n          行宮見月傷心色，夜雨聞鈴腸斷聲。 天旋日轉迴龍馭，到此躊躇不能去。\n          馬嵬坡下泥土中，不見玉顏空死處。 君臣相顧盡沾衣，東望都門信馬歸。\n          歸來池苑皆依舊，太液芙蓉未央柳。 芙蓉如面柳如眉，對此如何不淚垂。\n          春風桃李花開日，秋雨梧桐葉落時。 西宮南內多秋草，落葉滿階紅不掃。\n          梨園子弟白髮新，椒房阿監青娥老。 夕殿螢飛思悄然，孤燈挑盡未成眠。\n          遲遲鐘鼓初長夜，耿耿星河欲曙天。 鴛鴦瓦冷霜華重，翡翠衾寒誰與共。\n          悠悠生死別經年，魂魄不曾來入夢。 臨邛道士鴻都客，能以精誠致魂魄。\n          為感君王輾轉思，遂教方士殷勤覓。 排空馭氣奔如電，升天入地求之遍。\n          上窮碧落下黃泉，兩處茫茫皆不見。 忽聞海上有仙山，山在虛無縹緲間。\n          樓閣玲瓏五雲起，其中綽約多仙子。 中有一人字太真，雪膚花貌參差是。\n          金闕西廂叩玉扃，轉教小玉報雙成。 聞道漢家天子使，九華帳裏夢魂驚。\n          攬衣推枕起徘徊，珠箔銀屏迤邐開。 雲髻半偏新睡覺，花冠不整下堂來。\n          風吹仙袂飄颻舉，猶似霓裳羽衣舞。 玉容寂寞淚闌干，梨花一枝春帶雨。\n          含情凝睇謝君王，一別音容兩渺茫。 昭陽殿裏恩愛絕，蓬萊宮中日月長。\n          回頭下望人寰處，不見長安見塵霧。 唯將舊物表深情，鈿合金釵寄將去。\n          釵留一股合一扇，釵擘黃金合分鈿。 但教心似金鈿堅，天上人間會相見。\n          臨別殷勤重寄詞，詞中有誓兩心知。 七月七日長生殿，夜半無人私語時。\n          在天願作比翼鳥，在地願為連理枝。 天長地久有時盡，此恨綿綿無絕期。\n        </AbouContent>\n      </AboutContainer>\n    </Wrapper>\n  );\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { memo } from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nconst PaginationWrapper = ({ postsCount, currentPage }) => {\n  const postsPerPage = 5;\n  const totalPage = Math.ceil(postsCount / postsPerPage);\n  const items = [];\n  for (let number = 1; number <= totalPage; number += 1) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === Number(currentPage)}\n        href={`#/BlogAppRedux/pagination/${number}`}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <Pagination className=\"d-flex justify-content-center\" size=\"lg\">\n      {items}\n    </Pagination>\n  );\n};\n\nexport default memo(PaginationWrapper);\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Wrapper from '../../templates/Wrapper';\nimport Post from '../../templates/Post';\nimport PaginationWrapper from '../../templates/PaginationWrapper';\nimport {\n  getPost,\n  setByPagePostData,\n  selectIsGettingPost,\n  selectByPagePostData,\n  selectTotalPostCount,\n} from '../../../redux/reducers/postReducer';\nimport PostLoadingBackground from '../../Loaders/LoopCircleLoading';\n\nfunction PaginationPage() {\n  const { page } = useParams();\n  const dispatch = useDispatch();\n  const isGettingPost = useSelector(selectIsGettingPost);\n  const byPagePostData = useSelector(selectByPagePostData);\n  const totalPostsCount = useSelector(selectTotalPostCount);\n\n  // page 更新時拿新資料\n  useEffect(() => {\n    dispatch(getPost('byPage', page));\n    //  clean up 避免下次回來時因為仍有舊資料而短暫顯示\n    return () => {\n      dispatch(setByPagePostData(null));\n    };\n  }, [dispatch, page]);\n\n  return (\n    <>\n      {isGettingPost && <PostLoadingBackground />}\n      {!isGettingPost && byPagePostData && byPagePostData.length > 0 && (\n        <Wrapper>\n          {/* post */}\n          {byPagePostData.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n          {/* 分頁按鈕列 */}\n          <PaginationWrapper postsCount={totalPostsCount} currentPage={page} />\n        </Wrapper>\n      )}\n    </>\n  );\n}\n\nexport default memo(PaginationPage);\n","/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Spinner as UpdatingLoader } from 'react-awesome-spinners';\nimport {\n  getPost,\n  setSinglePostData,\n  updatePost,\n  setUpdatePostResponse,\n  selectIsGettingPost,\n  selectSinglePostData,\n  selectUpdatePostResponse,\n  selectIsUpdatingPost,\n} from '../../../redux/reducers/postReducer';\nimport { userData, selectUserData } from '../../../redux/reducers/userReducer';\nimport usePrevious from '../../../hooks/usePrevious';\nimport PostLoadingBackground from '../../Loaders/LoopCircleLoading';\nimport { setErrorMessage } from '../../../redux/reducers/errorMessageReducer';\n\nconst Wrapper = styled.div`\n  background: white;\n  opacity: 0.8;\n  width: 80%;\n  border-radius: 10px;\n  margin: 20px auto;\n  padding: 20px;\n`;\nconst PostForm = styled.form``;\nconst PostTitle = styled.input`\n  padding: 8px;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 50%;\n`;\nconst PostBody = styled.textarea`\n  padding: 8px;\n  font-size: 16px;\n  margin: 10px auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  width: 100%;\n  resize: none;\n`;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  font-size: 36px;\n  font-weight: bold;\n  color: red;\n`;\nconst AddPostErrorMessage = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 36px;\n  text-align: center;\n  margin-top: 1rem;\n`;\n\nexport default function AddPost() {\n  // 取得在 Route 中設定的 URL 參數\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // 從 store 中取得 state\n  const isGettingPost = useSelector(selectIsGettingPost);\n  const singlePostData = useSelector(selectSinglePostData);\n  const updatePostResponse = useSelector(selectUpdatePostResponse);\n  const isUpdatingPost = useSelector(selectIsUpdatingPost);\n  const prevIsUpdatingPost = usePrevious(isUpdatingPost);\n  // 權限驗證\n  const userData = useSelector(selectUserData);\n\n  // input 放在 component state\n  const [titleValue, setTitleValue] = useState('');\n  const [bodyValue, setBodyValue] = useState('');\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      title: titleValue,\n      body: bodyValue,\n    };\n    // 由 redux thunk 協助 call API\n    dispatch(updatePost(id, data));\n  };\n\n  // 當 id 改變時就呼叫 redux thunk 協助 call API\n  useEffect(() => {\n    // 權限管理\n    if (!userData) {\n      return dispatch(setErrorMessage('您無權限操作，請先登入'))\n    }\n    dispatch(getPost('single', id));\n    // clean up function when dependencies change and component unmount\n    return () => {\n      dispatch(setSinglePostData(null));\n    };\n  }, [dispatch, id, userData]);\n\n  useEffect(() => {\n    //  收到回傳文章時將資料放入\n    if (singlePostData && singlePostData.length > 0) {\n      setTitleValue(singlePostData[0].title);\n      setBodyValue(singlePostData[0].body);\n    }\n  }, [singlePostData]);\n\n  useEffect(() => {\n    if (updatePostResponse && updatePostResponse.id) {\n      // 藉由 isUpdatingPost 狀態前後的變化來確認是否\"剛更新完\"文章\n      // 1. 發送 request 前，isUpdatingPost: false, prevIsUpdatingPost: false\n      // 2. 開始發送 request, isUpdatingPost: true, prevIsUpdatingPost: false\n      // 3. 收到 response, isUpdatingPost: false, prevIsUpdatingPost: true\n      if (!isUpdatingPost && prevIsUpdatingPost) {\n        history.push(`/BlogAppRedux/posts/${updatePostResponse.id}`);\n      }\n    }\n  }, [\n    dispatch,\n    history,\n    updatePostResponse,\n    isUpdatingPost,\n    prevIsUpdatingPost,\n  ]);\n\n  return (\n    <>\n      {isGettingPost && <PostLoadingBackground />}\n      {userData && !isGettingPost && singlePostData && (\n        <Wrapper>\n          {singlePostData && singlePostData.length === 0 && (\n            <ErrorMessage>編輯的文章不存在</ErrorMessage>\n          )}\n          {singlePostData && singlePostData.length > 0 && (\n            <PostForm onSubmit={handleFormSubmit}>\n              <div>\n                <div>文章標題：</div>\n                <PostTitle\n                  value={titleValue}\n                  onChange={(e) => {\n                    setTitleValue(e.target.value);\n                  }}\n                  onFocus={() => {\n                    setUpdatePostResponse(null);\n                  }}\n                />\n              </div>\n              <div>\n                <div>文章內容：</div>\n                <PostBody\n                  rows={6}\n                  value={bodyValue}\n                  onChange={(e) => {\n                    setBodyValue(e.target.value);\n                  }}\n                  onFocus={() => {\n                    setUpdatePostResponse(null);\n                  }}\n                />\n              </div>\n              <div className=\"d-flex justify-content-center\">\n                {isUpdatingPost && <UpdatingLoader />}\n                {!isUpdatingPost && (\n                  <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    className=\"\"\n                    type=\"submit\"\n                  >\n                    更新\n                  </Button>\n                )}\n              </div>\n              {updatePostResponse && updatePostResponse.ok === 0 && (\n                <AddPostErrorMessage>\n                  編輯文章失敗： {updatePostResponse.message}\n                </AddPostErrorMessage>\n              )}\n            </PostForm>\n          )}\n        </Wrapper>\n      )}\n    </>\n  );\n}\n","/* eslint-disable import/no-unresolved */\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getUserData } from './redux/reducers/userReducer';\n\nimport Header from './components/Header';\nimport HomePage from './components/Pages/HomePage';\nimport LoginPage from './components/Pages/LoginPage';\nimport RegisterPage from './components/Pages/RegisterPage';\nimport SinglePostPage from './components/Pages/SinglePostPage';\nimport AddPostPage from './components/Pages/AddPostPage';\nimport AboutPage from './components/Pages/AboutPage';\nimport PaginationPage from './components/Pages/PaginationPage';\nimport UpdatePostPage from './components/Pages/UpdatePostPage';\n\nfunction BlogAppRedux() {\n  const dispatch = useDispatch();\n\n  // 只在初次 render App 時確認身分\n  useEffect(() => {\n    dispatch(getUserData());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Header>header</Header>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/about\">\n          <AboutPage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/login\">\n          <LoginPage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/register\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/pagination/:page\">\n          <PaginationPage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/posts/:id\">\n          <SinglePostPage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/new-post\">\n          <AddPostPage />\n        </Route>\n        <Route exact path=\"/BlogAppRedux/update-post/:id\">\n          <UpdatePostPage />\n        </Route>\n        {/* 沒被上面攔截的其他網址都導至首頁 */}\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default BlogAppRedux;\n","/* eslint-disable import/no-unresolved */\nimport { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './reducers/userReducer';\nimport postReducer from './reducers/postReducer';\nimport errorMessageReducer from './reducers/errorMessageReducer';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    posts: postReducer,\n    error: errorMessageReducer,\n  },\n});\n","/* eslint-disable import/no-unresolved */\n// 引入 bootstrap 的 CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\n// 引入主題(可設定類似 mixin 的全域變數供使用\n//  import { ThemeProvider } from \"styled-components\";\nimport BoardApp from \"./components/Board/App\";\n// week21\nimport TodosApp from \"./components/Todos/App\";\nimport GobangApp from \"./components/Gobang/App\";\nimport FormApp from \"./components/Form/App\";\n// week22\nimport BlogApp from \"./components/Blog/App\";\n// week23\nimport TodosRedux from \"./components/Todos-redux/App\";\nimport TodoStore from \"./components/Todos-redux/redux/store\";\n// week24\nimport BlogAppRedux from \"./components/Blog-redux/App\";\nimport { Provider } from \"react-redux\";\nimport blogStore from \"./components/Blog-redux/redux/store\";\n\n// <React.StrictMode> 嚴格模式可能會造成偵錯問題，可先取消\nReactDOM.render(\n  <Router>\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/BoardApp\">BoardApp</Link>\n        </li>\n        <li>\n          <Link to=\"/TodosApp\">TodosApp</Link>\n        </li>\n        <li>\n          <Link to=\"/GobangApp\">GobangApp</Link>\n        </li>\n        <li>\n          <Link to=\"/FormApp\">FormApp</Link>\n        </li>\n        <li>\n          <NavLink\n            to=\"/BlogApp\"\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"red\",\n            }}\n          >\n            BlogApp\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n    <Switch>\n      {/* blog 下層會再使用 router ，此層不可設為 exact，因由上往下逐層篩選 */}\n      <Route exact path=\"/\">\n        <h1>I am Home</h1>\n      </Route>\n      <Route exact path=\"/BoardApp\">\n        <BoardApp />\n      </Route>\n      <Route exact path=\"/TodosApp\">\n        <TodosApp />\n      </Route>\n      <Route exact path=\"/GobangApp\">\n        <GobangApp />\n      </Route>\n      <Route exact path=\"/FormApp\">\n        <FormApp />\n      </Route>\n      <Route path=\"/BlogApp\">\n        <BlogApp />\n      </Route>\n      \n      <Route exact path=\"/TodosRedux\">\n        <Provider store={TodoStore}>\n          <TodosRedux />\n        </Provider>\n      </Route>\n      <Route path=\"/BlogAppRedux\">\n        <Provider store={blogStore}>\n          <BlogAppRedux />\n        </Provider>\n      </Route>\n\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}